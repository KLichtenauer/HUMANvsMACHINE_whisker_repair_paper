const test0 = async function (t) {
  t.dragSprite('Aus-Linie Computer', -57, 101, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 50, 1, "Expected Sprite Ball to face in direction 50 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -92.33955556881023, 5, "Expected Sprite Ball to have x-position -92.33955556881023 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.4278760968653925, 5, "Expected Sprite Ball to have y-position 6.4278760968653925 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 0, 5, "Expected Sprite Computer to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.dragSprite('Aus-Linie Computer', -92, 6, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 50, 1, "Expected Sprite Ball to face in direction 50 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -84.67911113762045, 5, "Expected Sprite Ball to have x-position -84.67911113762045 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 12.855752193730785, 5, "Expected Sprite Ball to have y-position 12.855752193730785 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 4.533333333333333, 5, "Expected Sprite Computer to have y-position 4.533333333333333 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 6, 5, "Expected Sprite Aus-Linie Computer to have y-position 6 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 50, 1, "Expected Sprite Ball to face in direction 50 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -77.01866670643068, 5, "Expected Sprite Ball to have x-position -77.01866670643068 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 19.283628290596177, 5, "Expected Sprite Ball to have y-position 19.283628290596177 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 9.066666666666666, 5, "Expected Sprite Computer to have y-position 9.066666666666666 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 6, 5, "Expected Sprite Aus-Linie Computer to have y-position 6 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.dragSprite('Ball', -210, -89, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -50, 1, "Expected Sprite Ball to face in direction -50 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -214.51009958255696, 5, "Expected Sprite Ball to have x-position -214.51009958255696 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -69.71637170940382, 5, "Expected Sprite Ball to have y-position -69.71637170940382 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 13.600000000000001, 5, "Expected Sprite Computer to have y-position 13.600000000000001 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 6, 5, "Expected Sprite Aus-Linie Computer to have y-position 6 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -50, 1, "Expected Sprite Ball to face in direction -50 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -214.02019916511392, 5, "Expected Sprite Ball to have x-position -214.02019916511392 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -50.43274341880763, 5, "Expected Sprite Ball to have y-position -50.43274341880763 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 18.133333333333333, 5, "Expected Sprite Computer to have y-position 18.133333333333333 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 6, 5, "Expected Sprite Aus-Linie Computer to have y-position 6 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.keyPress('down arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -50, 1, "Expected Sprite Ball to face in direction -50 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -214.04039833022784, 5, "Expected Sprite Ball to have x-position -214.04039833022784 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -11.865486837615261, 5, "Expected Sprite Ball to have y-position -11.865486837615261 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -119, 5, "Expected Sprite Spieler to have y-position -119 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 27.200000000000003, 5, "Expected Sprite Computer to have y-position 27.200000000000003 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 6, 5, "Expected Sprite Aus-Linie Computer to have y-position 6 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.end();
}
const test1 = async function (t) {
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 50, 1, "Expected Sprite Ball to face in direction 50 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -92.33955556881023, 5, "Expected Sprite Ball to have x-position -92.33955556881023 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.4278760968653925, 5, "Expected Sprite Ball to have y-position 6.4278760968653925 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 0, 5, "Expected Sprite Computer to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(87);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 50, 1, "Expected Sprite Ball to face in direction 50 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -31.05600011929203, 5, "Expected Sprite Ball to have x-position -31.05600011929203 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 7.427876096865384, 5, "Expected Sprite Ball to have y-position 7.427876096865384 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 108.80000000000001, 5, "Expected Sprite Computer to have y-position 108.80000000000001 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.dragSprite('Aus-Linie Spieler', -14.484961925089946, 180, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 50, 1, "Expected Sprite Ball to face in direction 50 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -23.39555568810225, 5, "Expected Sprite Ball to have x-position -23.39555568810225 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 13.855752193730776, 5, "Expected Sprite Ball to have y-position 13.855752193730776 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -14.484961925089946, 5, "Expected Sprite Aus-Linie Spieler to have x-position -14.484961925089946 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 180, 5, "Expected Sprite Aus-Linie Spieler to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 117.86666666666667, 5, "Expected Sprite Computer to have y-position 117.86666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 50, 1, "Expected Sprite Ball to face in direction 50 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -15.735111256912468, 5, "Expected Sprite Ball to have x-position -15.735111256912468 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 20.28362829059617, 5, "Expected Sprite Ball to have y-position 20.28362829059617 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -14.484961925089946, 5, "Expected Sprite Aus-Linie Spieler to have x-position -14.484961925089946 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 180, 5, "Expected Sprite Aus-Linie Spieler to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 126.93333333333334, 5, "Expected Sprite Computer to have y-position 126.93333333333334 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.keyPress('down arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 50, 1, "Expected Sprite Ball to face in direction 50 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -0.4142223945329073, 5, "Expected Sprite Ball to have x-position -0.4142223945329073 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 33.139380484326956, 5, "Expected Sprite Ball to have y-position 33.139380484326956 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -104, 5, "Expected Sprite Spieler to have y-position -104 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -14.484961925089946, 5, "Expected Sprite Aus-Linie Spieler to have x-position -14.484961925089946 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 180, 5, "Expected Sprite Aus-Linie Spieler to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 126.93333333333334, 5, "Expected Sprite Computer to have y-position 126.93333333333334 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.keyPress('down arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 50, 1, "Expected Sprite Ball to face in direction 50 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 14.906666467846652, 5, "Expected Sprite Ball to have x-position 14.906666467846652 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 45.995132678057736, 5, "Expected Sprite Ball to have y-position 45.995132678057736 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -119, 5, "Expected Sprite Spieler to have y-position -119 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -14.484961925089946, 5, "Expected Sprite Aus-Linie Spieler to have x-position -14.484961925089946 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 180, 5, "Expected Sprite Aus-Linie Spieler to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 108.8, 5, "Expected Sprite Computer to have y-position 108.8 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.keyPress('up arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 50, 1, "Expected Sprite Ball to face in direction 50 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 30.227555330226213, 5, "Expected Sprite Ball to have x-position 30.227555330226213 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 58.850884871788516, 5, "Expected Sprite Ball to have y-position 58.850884871788516 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -104, 5, "Expected Sprite Spieler to have y-position -104 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -14.484961925089946, 5, "Expected Sprite Aus-Linie Spieler to have x-position -14.484961925089946 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 180, 5, "Expected Sprite Aus-Linie Spieler to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 90.66666666666667, 5, "Expected Sprite Computer to have y-position 90.66666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(58);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 130, 1, "Expected Sprite Ball to face in direction 130 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 198.75733281640126, 5, "Expected Sprite Ball to have x-position 198.75733281640126 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 95.57057675571525, 5, "Expected Sprite Ball to have y-position 95.57057675571525 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -104, 5, "Expected Sprite Spieler to have y-position -104 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -14.484961925089946, 5, "Expected Sprite Aus-Linie Spieler to have x-position -14.484961925089946 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 180, 5, "Expected Sprite Aus-Linie Spieler to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -108.80000000000001, 5, "Expected Sprite Computer to have y-position -108.80000000000001 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.end();
}

module.exports = [
  {
      test: test0,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687939011957',
      type: 'standard',
  },
  {
      test: test1,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687939011957',
      type: 'standard',
  }
]
