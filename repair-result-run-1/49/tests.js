const test0 = async function (t) {
  t.keyPress('right arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 15, 5, "Expected Sprite Kopf to have x-position 15 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 100, 5, "Expected Sprite Kopf to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 12, 5, "Expected Sprite Körper to have x-position 12 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 100, 5, "Expected Sprite Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 12, 5, "Expected Clone 1 of Körper to have x-position 12 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 100, 5, "Expected Clone 1 of Körper to have y-position 100 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('right arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 21, 5, "Expected Sprite Kopf to have x-position 21 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 100, 5, "Expected Sprite Kopf to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 18, 5, "Expected Sprite Körper to have x-position 18 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 100, 5, "Expected Sprite Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 18, 5, "Expected Clone 1 of Körper to have x-position 18 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 100, 5, "Expected Clone 1 of Körper to have y-position 100 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.dragSprite('Punkt', 21, 100, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 24, 5, "Expected Sprite Kopf to have x-position 24 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 100, 5, "Expected Sprite Kopf to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 21, 5, "Expected Sprite Körper to have x-position 21 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 100, 5, "Expected Sprite Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 21, 5, "Expected Clone 1 of Körper to have x-position 21 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 100, 5, "Expected Clone 1 of Körper to have y-position 100 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('up arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).currentCostume, 0, "Expected Clone 2 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).currentCostume, 0, "Expected Clone 3 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).currentCostume, 0, "Expected Clone 4 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).currentCostume, 0, "Expected Clone 5 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 5, "Expected Sprite Körper to have 5 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(2).direction, 90, 1, "Expected Clone 2 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(3).direction, 90, 1, "Expected Clone 3 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(4).direction, 90, 1, "Expected Clone 4 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(5).direction, 90, 1, "Expected Clone 5 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 7, "Expected Sprite Körper to be at layer 7");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 9, "Expected Sprite Punkt to be at layer 9");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 8, "Expected Sprite Goodie to be at layer 8");
  t.assert.equal(t.getSprite("Körper").getClone(2).getLayerOrder(), 3, "Expected Clone 2 of Körper to be at layer 3");
  t.assert.equal(t.getSprite("Körper").getClone(3).getLayerOrder(), 4, "Expected Clone 3 of Körper to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(4).getLayerOrder(), 5, "Expected Clone 4 of Körper to be at layer 5");
  t.assert.equal(t.getSprite("Körper").getClone(5).getLayerOrder(), 6, "Expected Clone 5 of Körper to be at layer 6");
  t.assert.withinRange(t.getSprite("Kopf").x, 27, 5, "Expected Sprite Kopf to have x-position 27 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 109, 5, "Expected Sprite Kopf to have y-position 109 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 27, 5, "Expected Sprite Körper to have x-position 27 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 106, 5, "Expected Sprite Körper to have y-position 106 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).x, 24, 5, "Expected Clone 2 of Körper to have x-position 24 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).y, 100, 5, "Expected Clone 2 of Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).x, 27, 5, "Expected Clone 3 of Körper to have x-position 27 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).y, 100, 5, "Expected Clone 3 of Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).x, 27, 5, "Expected Clone 4 of Körper to have x-position 27 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).y, 103, 5, "Expected Clone 4 of Körper to have y-position 103 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).x, 27, 5, "Expected Clone 5 of Körper to have x-position 27 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).y, 106, 5, "Expected Clone 5 of Körper to have y-position 106 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(2).sayText, "Expected Clone 2 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(3).sayText, "Expected Clone 3 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(4).sayText, "Expected Clone 4 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(5).sayText, "Expected Clone 5 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).size, 90, 1, "Expected Clone 2 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).size, 90, 1, "Expected Clone 3 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).size, 90, 1, "Expected Clone 4 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).size, 90, 1, "Expected Clone 5 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(2).visible, "Expected Clone 2 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(3).visible, "Expected Clone 3 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(4).visible, "Expected Clone 4 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(5).visible, "Expected Clone 5 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(2).volume, 100, "Expected Clone 2 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(3).volume, 100, "Expected Clone 3 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(4).volume, 100, "Expected Clone 4 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(5).volume, 100, "Expected Clone 5 of Körper to have volume 100");
  t.dragSprite('Kopf', 240, 24.57915583775615, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).currentCostume, 0, "Expected Clone 2 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).currentCostume, 0, "Expected Clone 3 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).currentCostume, 0, "Expected Clone 4 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).currentCostume, 0, "Expected Clone 5 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(2).direction, 90, 1, "Expected Clone 2 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(3).direction, 90, 1, "Expected Clone 3 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(4).direction, 90, 1, "Expected Clone 4 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(5).direction, 90, 1, "Expected Clone 5 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(2).getLayerOrder(), 3, "Expected Clone 2 of Körper to be at layer 3");
  t.assert.equal(t.getSprite("Körper").getClone(3).getLayerOrder(), 4, "Expected Clone 3 of Körper to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(4).getLayerOrder(), 5, "Expected Clone 4 of Körper to be at layer 5");
  t.assert.equal(t.getSprite("Körper").getClone(5).getLayerOrder(), 6, "Expected Clone 5 of Körper to be at layer 6");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, 240, 5, "Expected Sprite Kopf to have x-position 240 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 27.57915583775615, 5, "Expected Sprite Kopf to have y-position 27.57915583775615 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 240, 5, "Expected Sprite Körper to have x-position 240 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 24.57915583775615, 5, "Expected Sprite Körper to have y-position 24.57915583775615 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).x, 24, 5, "Expected Clone 2 of Körper to have x-position 24 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).y, 100, 5, "Expected Clone 2 of Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).x, 27, 5, "Expected Clone 3 of Körper to have x-position 27 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).y, 100, 5, "Expected Clone 3 of Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).x, 27, 5, "Expected Clone 4 of Körper to have x-position 27 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).y, 103, 5, "Expected Clone 4 of Körper to have y-position 103 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).x, 27, 5, "Expected Clone 5 of Körper to have x-position 27 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).y, 106, 5, "Expected Clone 5 of Körper to have y-position 106 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, 240, 5, "Expected Clone 6 of Körper to have x-position 240 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 24.57915583775615, 5, "Expected Clone 6 of Körper to have y-position 24.57915583775615 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(2).sayText, "Expected Clone 2 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(3).sayText, "Expected Clone 3 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(4).sayText, "Expected Clone 4 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(5).sayText, "Expected Clone 5 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).size, 90, 1, "Expected Clone 2 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).size, 90, 1, "Expected Clone 3 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).size, 90, 1, "Expected Clone 4 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).size, 90, 1, "Expected Clone 5 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(2).visible, "Expected Clone 2 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(3).visible, "Expected Clone 3 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(4).visible, "Expected Clone 4 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(5).visible, "Expected Clone 5 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(2).volume, 100, "Expected Clone 2 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(3).volume, 100, "Expected Clone 3 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(4).volume, 100, "Expected Clone 4 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(5).volume, 100, "Expected Clone 5 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.keyPress('down arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).currentCostume, 0, "Expected Clone 2 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).currentCostume, 0, "Expected Clone 3 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).currentCostume, 0, "Expected Clone 4 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(2).direction, 90, 1, "Expected Clone 2 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(3).direction, 90, 1, "Expected Clone 3 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(4).direction, 90, 1, "Expected Clone 4 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.equal(t.getSprite("Körper").getClone(2).getLayerOrder(), 3, "Expected Clone 2 of Körper to be at layer 3");
  t.assert.equal(t.getSprite("Körper").getClone(3).getLayerOrder(), 4, "Expected Clone 3 of Körper to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(4).getLayerOrder(), 5, "Expected Clone 4 of Körper to be at layer 5");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 27.57915583775615, 5, "Expected Sprite Kopf to have y-position 27.57915583775615 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 240, 5, "Expected Sprite Körper to have x-position 240 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 30.57915583775615, 5, "Expected Sprite Körper to have y-position 30.57915583775615 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 27, 5, "Expected Clone 1 of Körper to have x-position 27 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 100, 5, "Expected Clone 1 of Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).x, 27, 5, "Expected Clone 2 of Körper to have x-position 27 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).y, 103, 5, "Expected Clone 2 of Körper to have y-position 103 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).x, 27, 5, "Expected Clone 3 of Körper to have x-position 27 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).y, 106, 5, "Expected Clone 3 of Körper to have y-position 106 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).x, 240, 5, "Expected Clone 4 of Körper to have x-position 240 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).y, 24.57915583775615, 5, "Expected Clone 4 of Körper to have y-position 24.57915583775615 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, 240, 5, "Expected Clone 6 of Körper to have x-position 240 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 30.57915583775615, 5, "Expected Clone 6 of Körper to have y-position 30.57915583775615 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(2).sayText, "Expected Clone 2 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(3).sayText, "Expected Clone 3 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(4).sayText, "Expected Clone 4 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).size, 90, 1, "Expected Clone 2 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).size, 90, 1, "Expected Clone 3 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).size, 90, 1, "Expected Clone 4 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(2).visible, "Expected Clone 2 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(3).visible, "Expected Clone 3 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(4).visible, "Expected Clone 4 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(2).volume, 100, "Expected Clone 2 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(3).volume, 100, "Expected Clone 3 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(4).volume, 100, "Expected Clone 4 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  await t.runForSteps(63);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('left arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('left arrow', 2);
  await t.runForSteps(2);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('left arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('down arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('right arrow', 2);
  await t.runForSteps(2);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('up arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('left arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  await t.runForSteps(79);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('up arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('right arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('left arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  await t.runForSteps(36);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('down arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('left arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('down arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  await t.runForSteps(57);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('left arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  await t.runForSteps(16);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  await t.runForSteps(54);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  await t.runForSteps(10);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('up arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('right arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('up arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('up arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('right arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('down arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('left arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('down arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  await t.runForSteps(41);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('right arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('right arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('down arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('down arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.keyPress('down arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 239, 5, "Expected Sprite Kopf to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -56.42084416224385, 5, "Expected Sprite Kopf to have y-position -56.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 239, 5, "Expected Sprite Körper to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -53.42084416224385, 5, "Expected Sprite Körper to have y-position -53.42084416224385 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 132, 5, "Expected Sprite Punkt to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 22, 5, "Expected Sprite Punkt to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.end();
}
const test1 = async function (t) {
  t.keyPress('up arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 3, 5, "Expected Sprite Kopf to have x-position 3 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 109, 5, "Expected Sprite Kopf to have y-position 109 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 3, 5, "Expected Sprite Körper to have x-position 3 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 106, 5, "Expected Sprite Körper to have y-position 106 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 3, 5, "Expected Clone 1 of Körper to have x-position 3 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 106, 5, "Expected Clone 1 of Körper to have y-position 106 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('up arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 3, 5, "Expected Sprite Kopf to have x-position 3 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 115, 5, "Expected Sprite Kopf to have y-position 115 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 3, 5, "Expected Sprite Körper to have x-position 3 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 112, 5, "Expected Sprite Körper to have y-position 112 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 3, 5, "Expected Clone 1 of Körper to have x-position 3 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 112, 5, "Expected Clone 1 of Körper to have y-position 112 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('right arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 6, 5, "Expected Sprite Kopf to have x-position 6 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 118, 5, "Expected Sprite Kopf to have y-position 118 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 3, 5, "Expected Sprite Körper to have x-position 3 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 118, 5, "Expected Sprite Körper to have y-position 118 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 3, 5, "Expected Clone 1 of Körper to have x-position 3 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 118, 5, "Expected Clone 1 of Körper to have y-position 118 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('right arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 12, 5, "Expected Sprite Kopf to have x-position 12 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 118, 5, "Expected Sprite Kopf to have y-position 118 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 9, 5, "Expected Sprite Körper to have x-position 9 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 118, 5, "Expected Sprite Körper to have y-position 118 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 9, 5, "Expected Clone 1 of Körper to have x-position 9 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 118, 5, "Expected Clone 1 of Körper to have y-position 118 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  await t.runForSteps(63);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 204, 5, "Expected Sprite Kopf to have x-position 204 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 118, 5, "Expected Sprite Kopf to have y-position 118 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 201, 5, "Expected Sprite Körper to have x-position 201 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 118, 5, "Expected Sprite Körper to have y-position 118 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 201, 5, "Expected Clone 1 of Körper to have x-position 201 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 118, 5, "Expected Clone 1 of Körper to have y-position 118 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('down arrow', 2);
  await t.runForSteps(2);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 207, 5, "Expected Sprite Kopf to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 112, 5, "Expected Sprite Kopf to have y-position 112 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 207, 5, "Expected Sprite Körper to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 115, 5, "Expected Sprite Körper to have y-position 115 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 207, 5, "Expected Clone 1 of Körper to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 115, 5, "Expected Clone 1 of Körper to have y-position 115 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('down arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 207, 5, "Expected Sprite Kopf to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 100, 5, "Expected Sprite Kopf to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 207, 5, "Expected Sprite Körper to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 103, 5, "Expected Sprite Körper to have y-position 103 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 207, 5, "Expected Clone 1 of Körper to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 103, 5, "Expected Clone 1 of Körper to have y-position 103 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('down arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 207, 5, "Expected Sprite Kopf to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 88, 5, "Expected Sprite Kopf to have y-position 88 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 207, 5, "Expected Sprite Körper to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 91, 5, "Expected Sprite Körper to have y-position 91 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 207, 5, "Expected Clone 1 of Körper to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 91, 5, "Expected Clone 1 of Körper to have y-position 91 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('left arrow', 2);
  await t.runForSteps(2);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 201, 5, "Expected Sprite Kopf to have x-position 201 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 85, 5, "Expected Sprite Kopf to have y-position 85 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 204, 5, "Expected Sprite Körper to have x-position 204 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 85, 5, "Expected Sprite Körper to have y-position 85 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 204, 5, "Expected Clone 1 of Körper to have x-position 204 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 85, 5, "Expected Clone 1 of Körper to have y-position 85 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('up arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 198, 5, "Expected Sprite Kopf to have x-position 198 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 97, 5, "Expected Sprite Kopf to have y-position 97 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 198, 5, "Expected Sprite Körper to have x-position 198 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 94, 5, "Expected Sprite Körper to have y-position 94 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 198, 5, "Expected Clone 1 of Körper to have x-position 198 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 94, 5, "Expected Clone 1 of Körper to have y-position 94 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('left arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 195, 5, "Expected Sprite Kopf to have x-position 195 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 100, 5, "Expected Sprite Kopf to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 198, 5, "Expected Sprite Körper to have x-position 198 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 100, 5, "Expected Sprite Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 198, 5, "Expected Clone 1 of Körper to have x-position 198 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 100, 5, "Expected Clone 1 of Körper to have y-position 100 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('up arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 192, 5, "Expected Sprite Kopf to have x-position 192 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 109, 5, "Expected Sprite Kopf to have y-position 109 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 192, 5, "Expected Sprite Körper to have x-position 192 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 106, 5, "Expected Sprite Körper to have y-position 106 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 192, 5, "Expected Clone 1 of Körper to have x-position 192 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 106, 5, "Expected Clone 1 of Körper to have y-position 106 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  await t.runForSteps(13);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 192, 5, "Expected Sprite Kopf to have x-position 192 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 151, 5, "Expected Sprite Kopf to have y-position 151 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 192, 5, "Expected Sprite Körper to have x-position 192 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 148, 5, "Expected Sprite Körper to have y-position 148 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 192, 5, "Expected Clone 1 of Körper to have x-position 192 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 148, 5, "Expected Clone 1 of Körper to have y-position 148 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('left arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 180, 5, "Expected Sprite Kopf to have x-position 180 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 154, 5, "Expected Sprite Kopf to have y-position 154 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 183, 5, "Expected Sprite Körper to have x-position 183 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 154, 5, "Expected Sprite Körper to have y-position 154 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 183, 5, "Expected Clone 1 of Körper to have x-position 183 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 154, 5, "Expected Clone 1 of Körper to have y-position 154 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('up arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 177, 5, "Expected Sprite Kopf to have x-position 177 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 157, 5, "Expected Sprite Kopf to have y-position 157 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 177, 5, "Expected Sprite Körper to have x-position 177 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 154, 5, "Expected Sprite Körper to have y-position 154 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 177, 5, "Expected Clone 1 of Körper to have x-position 177 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 154, 5, "Expected Clone 1 of Körper to have y-position 154 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('down arrow', 2);
  await t.runForSteps(2);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 177, 5, "Expected Sprite Kopf to have x-position 177 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 154, 5, "Expected Sprite Kopf to have y-position 154 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 177, 5, "Expected Sprite Körper to have x-position 177 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 157, 5, "Expected Sprite Körper to have y-position 157 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 177, 5, "Expected Clone 1 of Körper to have x-position 177 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 157, 5, "Expected Clone 1 of Körper to have y-position 157 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('right arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 180, 5, "Expected Sprite Kopf to have x-position 180 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 151, 5, "Expected Sprite Kopf to have y-position 151 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 177, 5, "Expected Sprite Körper to have x-position 177 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 151, 5, "Expected Sprite Körper to have y-position 151 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 177, 5, "Expected Clone 1 of Körper to have x-position 177 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 151, 5, "Expected Clone 1 of Körper to have y-position 151 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('left arrow', 2);
  await t.runForSteps(2);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 177, 5, "Expected Sprite Kopf to have x-position 177 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 151, 5, "Expected Sprite Kopf to have y-position 151 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 180, 5, "Expected Sprite Körper to have x-position 180 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 151, 5, "Expected Sprite Körper to have y-position 151 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 180, 5, "Expected Clone 1 of Körper to have x-position 180 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 151, 5, "Expected Clone 1 of Körper to have y-position 151 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.dragSprite('Punkt', 169.83388197549695, 151.13961925149826, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 174, 5, "Expected Sprite Kopf to have x-position 174 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 151, 5, "Expected Sprite Kopf to have y-position 151 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 177, 5, "Expected Sprite Körper to have x-position 177 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 151, 5, "Expected Sprite Körper to have y-position 151 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -169, 5, "Expected Sprite Punkt to have x-position -169 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -169, 5, "Expected Sprite Punkt to have y-position -169 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 177, 5, "Expected Clone 1 of Körper to have x-position 177 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 151, 5, "Expected Clone 1 of Körper to have y-position 151 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  await t.runForSteps(60);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, -9, 5, "Expected Sprite Kopf to have x-position -9 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 151, 5, "Expected Sprite Kopf to have y-position 151 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -6, 5, "Expected Sprite Körper to have x-position -6 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 151, 5, "Expected Sprite Körper to have y-position 151 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -169, 5, "Expected Sprite Punkt to have x-position -169 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -169, 5, "Expected Sprite Punkt to have y-position -169 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, -6, 5, "Expected Clone 6 of Körper to have x-position -6 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 151, 5, "Expected Clone 6 of Körper to have y-position 151 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.dragSprite('Punkt', -5.971007938808839, 158.2504622962932, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, -12, 5, "Expected Sprite Kopf to have x-position -12 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 151, 5, "Expected Sprite Kopf to have y-position 151 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -9, 5, "Expected Sprite Körper to have x-position -9 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 151, 5, "Expected Sprite Körper to have y-position 151 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -5.971007938808839, 5, "Expected Sprite Punkt to have x-position -5.971007938808839 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 158.2504622962932, 5, "Expected Sprite Punkt to have y-position 158.2504622962932 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, -9, 5, "Expected Clone 6 of Körper to have x-position -9 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 151, 5, "Expected Clone 6 of Körper to have y-position 151 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  await t.runForSteps(56);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, -183, 5, "Expected Sprite Kopf to have x-position -183 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 151, 5, "Expected Sprite Kopf to have y-position 151 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -180, 5, "Expected Sprite Körper to have x-position -180 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 151, 5, "Expected Sprite Körper to have y-position 151 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -5.971007938808839, 5, "Expected Sprite Punkt to have x-position -5.971007938808839 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 158.2504622962932, 5, "Expected Sprite Punkt to have y-position 158.2504622962932 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, -180, 5, "Expected Clone 6 of Körper to have x-position -180 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 151, 5, "Expected Clone 6 of Körper to have y-position 151 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.keyPress('up arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, -186, 5, "Expected Sprite Kopf to have x-position -186 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 154, 5, "Expected Sprite Kopf to have y-position 154 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -186, 5, "Expected Sprite Körper to have x-position -186 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 151, 5, "Expected Sprite Körper to have y-position 151 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -5.971007938808839, 5, "Expected Sprite Punkt to have x-position -5.971007938808839 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 158.2504622962932, 5, "Expected Sprite Punkt to have y-position 158.2504622962932 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, -186, 5, "Expected Clone 6 of Körper to have x-position -186 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 151, 5, "Expected Clone 6 of Körper to have y-position 151 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.keyPress('right arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, -174, 5, "Expected Sprite Kopf to have x-position -174 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 157, 5, "Expected Sprite Kopf to have y-position 157 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -177, 5, "Expected Sprite Körper to have x-position -177 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 157, 5, "Expected Sprite Körper to have y-position 157 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -5.971007938808839, 5, "Expected Sprite Punkt to have x-position -5.971007938808839 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 158.2504622962932, 5, "Expected Sprite Punkt to have y-position 158.2504622962932 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, -177, 5, "Expected Clone 6 of Körper to have x-position -177 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 157, 5, "Expected Clone 6 of Körper to have y-position 157 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.dragSprite('Kopf', -231.46136310360072, 39.866943596362404, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, -228.46136310360072, 5, "Expected Sprite Kopf to have x-position -228.46136310360072 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 39.866943596362404, 5, "Expected Sprite Kopf to have y-position 39.866943596362404 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -231.46136310360072, 5, "Expected Sprite Körper to have x-position -231.46136310360072 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 39.866943596362404, 5, "Expected Sprite Körper to have y-position 39.866943596362404 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -5.971007938808839, 5, "Expected Sprite Punkt to have x-position -5.971007938808839 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 158.2504622962932, 5, "Expected Sprite Punkt to have y-position 158.2504622962932 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, -231.46136310360072, 5, "Expected Clone 6 of Körper to have x-position -231.46136310360072 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 39.866943596362404, 5, "Expected Clone 6 of Körper to have y-position 39.866943596362404 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  await t.runForSteps(34);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, -123.46136310360072, 5, "Expected Sprite Kopf to have x-position -123.46136310360072 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 39.866943596362404, 5, "Expected Sprite Kopf to have y-position 39.866943596362404 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -126.46136310360072, 5, "Expected Sprite Körper to have x-position -126.46136310360072 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 39.866943596362404, 5, "Expected Sprite Körper to have y-position 39.866943596362404 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -5.971007938808839, 5, "Expected Sprite Punkt to have x-position -5.971007938808839 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 158.2504622962932, 5, "Expected Sprite Punkt to have y-position 158.2504622962932 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, -126.46136310360072, 5, "Expected Clone 6 of Körper to have x-position -126.46136310360072 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 39.866943596362404, 5, "Expected Clone 6 of Körper to have y-position 39.866943596362404 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.keyPress('left arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, -129.46136310360072, 5, "Expected Sprite Kopf to have x-position -129.46136310360072 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 39.866943596362404, 5, "Expected Sprite Kopf to have y-position 39.866943596362404 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -126.46136310360072, 5, "Expected Sprite Körper to have x-position -126.46136310360072 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 39.866943596362404, 5, "Expected Sprite Körper to have y-position 39.866943596362404 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -5.971007938808839, 5, "Expected Sprite Punkt to have x-position -5.971007938808839 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 158.2504622962932, 5, "Expected Sprite Punkt to have y-position 158.2504622962932 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, -126.46136310360072, 5, "Expected Clone 6 of Körper to have x-position -126.46136310360072 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 39.866943596362404, 5, "Expected Clone 6 of Körper to have y-position 39.866943596362404 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.dragSprite('Punkt', -129, 39, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, -132.46136310360072, 5, "Expected Sprite Kopf to have x-position -132.46136310360072 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 39.866943596362404, 5, "Expected Sprite Kopf to have y-position 39.866943596362404 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -129.46136310360072, 5, "Expected Sprite Körper to have x-position -129.46136310360072 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 39.866943596362404, 5, "Expected Sprite Körper to have y-position 39.866943596362404 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 118, 5, "Expected Sprite Punkt to have x-position 118 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -91, 5, "Expected Sprite Punkt to have y-position -91 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, -129.46136310360072, 5, "Expected Clone 6 of Körper to have x-position -129.46136310360072 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 39.866943596362404, 5, "Expected Clone 6 of Körper to have y-position 39.866943596362404 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.dragSprite('Kopf', -230.87616132010285, 65.558051789953, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, -233, 5, "Expected Sprite Kopf to have x-position -233 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 65.558051789953, 5, "Expected Sprite Kopf to have y-position 65.558051789953 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -230.87616132010285, 5, "Expected Sprite Körper to have x-position -230.87616132010285 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 65.558051789953, 5, "Expected Sprite Körper to have y-position 65.558051789953 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 118, 5, "Expected Sprite Punkt to have x-position 118 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -91, 5, "Expected Sprite Punkt to have y-position -91 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, -230.87616132010285, 5, "Expected Clone 6 of Körper to have x-position -230.87616132010285 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 65.558051789953, 5, "Expected Clone 6 of Körper to have y-position 65.558051789953 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.keyPress('left arrow', 2);
  await t.runForSteps(2);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, -233, 5, "Expected Sprite Kopf to have x-position -233 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 65.558051789953, 5, "Expected Sprite Kopf to have y-position 65.558051789953 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -233, 5, "Expected Sprite Körper to have x-position -233 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 65.558051789953, 5, "Expected Sprite Körper to have y-position 65.558051789953 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 118, 5, "Expected Sprite Punkt to have x-position 118 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -91, 5, "Expected Sprite Punkt to have y-position -91 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, -233, 5, "Expected Clone 6 of Körper to have x-position -233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 65.558051789953, 5, "Expected Clone 6 of Körper to have y-position 65.558051789953 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.keyPress('down arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).currentCostume, 0, "Expected Clone 7 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).currentCostume, 0, "Expected Clone 8 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).currentCostume, 0, "Expected Clone 9 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 9, "Expected Sprite Körper to have 9 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(7).direction, 90, 1, "Expected Clone 7 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(8).direction, 90, 1, "Expected Clone 8 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(9).direction, 90, 1, "Expected Clone 9 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.color, 0, "Expected effect color of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.fisheye, 0, "Expected effect fisheye of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.whirl, 0, "Expected effect whirl of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.pixelate, 0, "Expected effect pixelate of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.mosaic, 0, "Expected effect mosaic of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.brightness, 0, "Expected effect brightness of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.ghost, 0, "Expected effect ghost of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.color, 0, "Expected effect color of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.fisheye, 0, "Expected effect fisheye of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.whirl, 0, "Expected effect whirl of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.pixelate, 0, "Expected effect pixelate of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.mosaic, 0, "Expected effect mosaic of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.brightness, 0, "Expected effect brightness of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.ghost, 0, "Expected effect ghost of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.color, 0, "Expected effect color of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.fisheye, 0, "Expected effect fisheye of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.whirl, 0, "Expected effect whirl of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.pixelate, 0, "Expected effect pixelate of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.mosaic, 0, "Expected effect mosaic of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.brightness, 0, "Expected effect brightness of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.ghost, 0, "Expected effect ghost of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 11, "Expected Sprite Körper to be at layer 11");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 13, "Expected Sprite Punkt to be at layer 13");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 12, "Expected Sprite Goodie to be at layer 12");
  t.assert.equal(t.getSprite("Körper").getClone(7).getLayerOrder(), 8, "Expected Clone 7 of Körper to be at layer 8");
  t.assert.equal(t.getSprite("Körper").getClone(8).getLayerOrder(), 9, "Expected Clone 8 of Körper to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(9).getLayerOrder(), 10, "Expected Clone 9 of Körper to be at layer 10");
  t.assert.withinRange(t.getSprite("Kopf").x, -233, 5, "Expected Sprite Kopf to have x-position -233 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 56.558051789953, 5, "Expected Sprite Kopf to have y-position 56.558051789953 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -233, 5, "Expected Sprite Körper to have x-position -233 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 59.558051789953, 5, "Expected Sprite Körper to have y-position 59.558051789953 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 118, 5, "Expected Sprite Punkt to have x-position 118 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -91, 5, "Expected Sprite Punkt to have y-position -91 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, -142, 5, "Expected Sprite Goodie to have x-position -142 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, -172, 5, "Expected Sprite Goodie to have y-position -172 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).x, -233, 5, "Expected Clone 7 of Körper to have x-position -233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).y, 65.558051789953, 5, "Expected Clone 7 of Körper to have y-position 65.558051789953 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).x, -233, 5, "Expected Clone 8 of Körper to have x-position -233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).y, 62.558051789953, 5, "Expected Clone 8 of Körper to have y-position 62.558051789953 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).x, -233, 5, "Expected Clone 9 of Körper to have x-position -233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).y, 59.558051789953, 5, "Expected Clone 9 of Körper to have y-position 59.558051789953 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(7).sayText, "Expected Clone 7 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(8).sayText, "Expected Clone 8 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(9).sayText, "Expected Clone 9 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).size, 90, 1, "Expected Clone 7 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).size, 90, 1, "Expected Clone 8 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).size, 90, 1, "Expected Clone 9 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.ok(t.getSprite("Goodie").visible, "Expected Sprite Goodie to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(7).visible, "Expected Clone 7 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(8).visible, "Expected Clone 8 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(9).visible, "Expected Clone 9 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(7).volume, 100, "Expected Clone 7 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(8).volume, 100, "Expected Clone 8 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(9).volume, 100, "Expected Clone 9 of Körper to have volume 100");
  t.dragSprite('Kopf', 71.38908408037834, -174.4957332768276, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).currentCostume, 0, "Expected Clone 7 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).currentCostume, 0, "Expected Clone 8 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).currentCostume, 0, "Expected Clone 9 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).currentCostume, 0, "Expected Clone 10 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 10, "Expected Sprite Körper to have 10 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(7).direction, 90, 1, "Expected Clone 7 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(8).direction, 90, 1, "Expected Clone 8 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(9).direction, 90, 1, "Expected Clone 9 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(10).direction, 90, 1, "Expected Clone 10 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.color, 0, "Expected effect color of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.fisheye, 0, "Expected effect fisheye of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.whirl, 0, "Expected effect whirl of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.pixelate, 0, "Expected effect pixelate of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.mosaic, 0, "Expected effect mosaic of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.brightness, 0, "Expected effect brightness of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.ghost, 0, "Expected effect ghost of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.color, 0, "Expected effect color of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.fisheye, 0, "Expected effect fisheye of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.whirl, 0, "Expected effect whirl of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.pixelate, 0, "Expected effect pixelate of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.mosaic, 0, "Expected effect mosaic of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.brightness, 0, "Expected effect brightness of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.ghost, 0, "Expected effect ghost of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.color, 0, "Expected effect color of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.fisheye, 0, "Expected effect fisheye of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.whirl, 0, "Expected effect whirl of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.pixelate, 0, "Expected effect pixelate of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.mosaic, 0, "Expected effect mosaic of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.brightness, 0, "Expected effect brightness of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.ghost, 0, "Expected effect ghost of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.color, 0, "Expected effect color of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.fisheye, 0, "Expected effect fisheye of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.whirl, 0, "Expected effect whirl of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.pixelate, 0, "Expected effect pixelate of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.mosaic, 0, "Expected effect mosaic of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.brightness, 0, "Expected effect brightness of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.ghost, 0, "Expected effect ghost of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 12, "Expected Sprite Körper to be at layer 12");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 14, "Expected Sprite Punkt to be at layer 14");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 13, "Expected Sprite Goodie to be at layer 13");
  t.assert.equal(t.getSprite("Körper").getClone(7).getLayerOrder(), 8, "Expected Clone 7 of Körper to be at layer 8");
  t.assert.equal(t.getSprite("Körper").getClone(8).getLayerOrder(), 9, "Expected Clone 8 of Körper to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(9).getLayerOrder(), 10, "Expected Clone 9 of Körper to be at layer 10");
  t.assert.equal(t.getSprite("Körper").getClone(10).getLayerOrder(), 11, "Expected Clone 10 of Körper to be at layer 11");
  t.assert.withinRange(t.getSprite("Kopf").x, 71.38908408037834, 5, "Expected Sprite Kopf to have x-position 71.38908408037834 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -173, 5, "Expected Sprite Kopf to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 71.38908408037834, 5, "Expected Sprite Körper to have x-position 71.38908408037834 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -173, 5, "Expected Sprite Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 118, 5, "Expected Sprite Punkt to have x-position 118 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -91, 5, "Expected Sprite Punkt to have y-position -91 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, -142, 5, "Expected Sprite Goodie to have x-position -142 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, -172, 5, "Expected Sprite Goodie to have y-position -172 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).x, -233, 5, "Expected Clone 7 of Körper to have x-position -233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).y, 65.558051789953, 5, "Expected Clone 7 of Körper to have y-position 65.558051789953 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).x, -233, 5, "Expected Clone 8 of Körper to have x-position -233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).y, 62.558051789953, 5, "Expected Clone 8 of Körper to have y-position 62.558051789953 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).x, -233, 5, "Expected Clone 9 of Körper to have x-position -233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).y, 59.558051789953, 5, "Expected Clone 9 of Körper to have y-position 59.558051789953 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(10).x, 71.38908408037834, 5, "Expected Clone 10 of Körper to have x-position 71.38908408037834 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(10).y, -173, 5, "Expected Clone 10 of Körper to have y-position -173 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(7).sayText, "Expected Clone 7 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(8).sayText, "Expected Clone 8 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(9).sayText, "Expected Clone 9 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(10).sayText, "Expected Clone 10 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).size, 90, 1, "Expected Clone 7 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).size, 90, 1, "Expected Clone 8 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).size, 90, 1, "Expected Clone 9 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(10).size, 90, 1, "Expected Clone 10 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.ok(t.getSprite("Goodie").visible, "Expected Sprite Goodie to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(7).visible, "Expected Clone 7 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(8).visible, "Expected Clone 8 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(9).visible, "Expected Clone 9 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(10).visible, "Expected Clone 10 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(7).volume, 100, "Expected Clone 7 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(8).volume, 100, "Expected Clone 8 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(9).volume, 100, "Expected Clone 9 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(10).volume, 100, "Expected Clone 10 of Körper to have volume 100");
  t.dragSprite('Goodie', 70.74986812444868, -165.00487338384724, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).currentCostume, 0, "Expected Clone 7 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).currentCostume, 0, "Expected Clone 8 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).currentCostume, 0, "Expected Clone 9 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).currentCostume, 0, "Expected Clone 10 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).currentCostume, 0, "Expected Clone 11 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 11, "Expected Sprite Körper to have 11 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(7).direction, 90, 1, "Expected Clone 7 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(8).direction, 90, 1, "Expected Clone 8 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(9).direction, 90, 1, "Expected Clone 9 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(10).direction, 90, 1, "Expected Clone 10 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(11).direction, 90, 1, "Expected Clone 11 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.color, 0, "Expected effect color of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.fisheye, 0, "Expected effect fisheye of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.whirl, 0, "Expected effect whirl of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.pixelate, 0, "Expected effect pixelate of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.mosaic, 0, "Expected effect mosaic of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.brightness, 0, "Expected effect brightness of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.ghost, 0, "Expected effect ghost of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.color, 0, "Expected effect color of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.fisheye, 0, "Expected effect fisheye of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.whirl, 0, "Expected effect whirl of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.pixelate, 0, "Expected effect pixelate of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.mosaic, 0, "Expected effect mosaic of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.brightness, 0, "Expected effect brightness of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.ghost, 0, "Expected effect ghost of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.color, 0, "Expected effect color of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.fisheye, 0, "Expected effect fisheye of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.whirl, 0, "Expected effect whirl of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.pixelate, 0, "Expected effect pixelate of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.mosaic, 0, "Expected effect mosaic of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.brightness, 0, "Expected effect brightness of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.ghost, 0, "Expected effect ghost of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.color, 0, "Expected effect color of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.fisheye, 0, "Expected effect fisheye of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.whirl, 0, "Expected effect whirl of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.pixelate, 0, "Expected effect pixelate of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.mosaic, 0, "Expected effect mosaic of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.brightness, 0, "Expected effect brightness of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.ghost, 0, "Expected effect ghost of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.color, 0, "Expected effect color of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.fisheye, 0, "Expected effect fisheye of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.whirl, 0, "Expected effect whirl of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.pixelate, 0, "Expected effect pixelate of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.mosaic, 0, "Expected effect mosaic of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.brightness, 0, "Expected effect brightness of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.ghost, 0, "Expected effect ghost of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 13, "Expected Sprite Körper to be at layer 13");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 15, "Expected Sprite Punkt to be at layer 15");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 14, "Expected Sprite Goodie to be at layer 14");
  t.assert.equal(t.getSprite("Körper").getClone(7).getLayerOrder(), 8, "Expected Clone 7 of Körper to be at layer 8");
  t.assert.equal(t.getSprite("Körper").getClone(8).getLayerOrder(), 9, "Expected Clone 8 of Körper to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(9).getLayerOrder(), 10, "Expected Clone 9 of Körper to be at layer 10");
  t.assert.equal(t.getSprite("Körper").getClone(10).getLayerOrder(), 11, "Expected Clone 10 of Körper to be at layer 11");
  t.assert.equal(t.getSprite("Körper").getClone(11).getLayerOrder(), 12, "Expected Clone 11 of Körper to be at layer 12");
  t.assert.withinRange(t.getSprite("Kopf").x, 71.38908408037834, 5, "Expected Sprite Kopf to have x-position 71.38908408037834 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -173, 5, "Expected Sprite Kopf to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 71.38908408037834, 5, "Expected Sprite Körper to have x-position 71.38908408037834 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -173, 5, "Expected Sprite Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 118, 5, "Expected Sprite Punkt to have x-position 118 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -91, 5, "Expected Sprite Punkt to have y-position -91 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 70.74986812444868, 5, "Expected Sprite Goodie to have x-position 70.74986812444868 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, -165.00487338384724, 5, "Expected Sprite Goodie to have y-position -165.00487338384724 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).x, -233, 5, "Expected Clone 7 of Körper to have x-position -233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).y, 65.558051789953, 5, "Expected Clone 7 of Körper to have y-position 65.558051789953 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).x, -233, 5, "Expected Clone 8 of Körper to have x-position -233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).y, 62.558051789953, 5, "Expected Clone 8 of Körper to have y-position 62.558051789953 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).x, -233, 5, "Expected Clone 9 of Körper to have x-position -233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).y, 59.558051789953, 5, "Expected Clone 9 of Körper to have y-position 59.558051789953 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(10).x, 71.38908408037834, 5, "Expected Clone 10 of Körper to have x-position 71.38908408037834 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(10).y, -173, 5, "Expected Clone 10 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(11).x, 71.38908408037834, 5, "Expected Clone 11 of Körper to have x-position 71.38908408037834 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(11).y, -173, 5, "Expected Clone 11 of Körper to have y-position -173 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(7).sayText, "Expected Clone 7 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(8).sayText, "Expected Clone 8 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(9).sayText, "Expected Clone 9 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(10).sayText, "Expected Clone 10 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(11).sayText, "Expected Clone 11 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).size, 90, 1, "Expected Clone 7 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).size, 90, 1, "Expected Clone 8 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).size, 90, 1, "Expected Clone 9 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(10).size, 90, 1, "Expected Clone 10 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(11).size, 90, 1, "Expected Clone 11 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.ok(t.getSprite("Goodie").visible, "Expected Sprite Goodie to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(7).visible, "Expected Clone 7 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(8).visible, "Expected Clone 8 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(9).visible, "Expected Clone 9 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(10).visible, "Expected Clone 10 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(11).visible, "Expected Clone 11 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(7).volume, 100, "Expected Clone 7 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(8).volume, 100, "Expected Clone 8 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(9).volume, 100, "Expected Clone 9 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(10).volume, 100, "Expected Clone 10 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(11).volume, 100, "Expected Clone 11 of Körper to have volume 100");
  t.dragSprite('Kopf', -228.26383885339465, 80.5945397476055, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).currentCostume, 0, "Expected Clone 7 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).currentCostume, 0, "Expected Clone 8 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).currentCostume, 0, "Expected Clone 9 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).currentCostume, 0, "Expected Clone 10 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).currentCostume, 0, "Expected Clone 11 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).currentCostume, 0, "Expected Clone 12 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 12, "Expected Sprite Körper to have 12 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(7).direction, 90, 1, "Expected Clone 7 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(8).direction, 90, 1, "Expected Clone 8 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(9).direction, 90, 1, "Expected Clone 9 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(10).direction, 90, 1, "Expected Clone 10 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(11).direction, 90, 1, "Expected Clone 11 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(12).direction, 90, 1, "Expected Clone 12 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.color, 0, "Expected effect color of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.fisheye, 0, "Expected effect fisheye of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.whirl, 0, "Expected effect whirl of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.pixelate, 0, "Expected effect pixelate of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.mosaic, 0, "Expected effect mosaic of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.brightness, 0, "Expected effect brightness of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.ghost, 0, "Expected effect ghost of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.color, 0, "Expected effect color of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.fisheye, 0, "Expected effect fisheye of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.whirl, 0, "Expected effect whirl of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.pixelate, 0, "Expected effect pixelate of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.mosaic, 0, "Expected effect mosaic of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.brightness, 0, "Expected effect brightness of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.ghost, 0, "Expected effect ghost of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.color, 0, "Expected effect color of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.fisheye, 0, "Expected effect fisheye of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.whirl, 0, "Expected effect whirl of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.pixelate, 0, "Expected effect pixelate of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.mosaic, 0, "Expected effect mosaic of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.brightness, 0, "Expected effect brightness of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.ghost, 0, "Expected effect ghost of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.color, 0, "Expected effect color of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.fisheye, 0, "Expected effect fisheye of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.whirl, 0, "Expected effect whirl of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.pixelate, 0, "Expected effect pixelate of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.mosaic, 0, "Expected effect mosaic of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.brightness, 0, "Expected effect brightness of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.ghost, 0, "Expected effect ghost of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.color, 0, "Expected effect color of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.fisheye, 0, "Expected effect fisheye of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.whirl, 0, "Expected effect whirl of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.pixelate, 0, "Expected effect pixelate of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.mosaic, 0, "Expected effect mosaic of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.brightness, 0, "Expected effect brightness of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.ghost, 0, "Expected effect ghost of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.color, 0, "Expected effect color of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.fisheye, 0, "Expected effect fisheye of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.whirl, 0, "Expected effect whirl of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.pixelate, 0, "Expected effect pixelate of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.mosaic, 0, "Expected effect mosaic of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.brightness, 0, "Expected effect brightness of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.ghost, 0, "Expected effect ghost of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 14, "Expected Sprite Körper to be at layer 14");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 16, "Expected Sprite Punkt to be at layer 16");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 15, "Expected Sprite Goodie to be at layer 15");
  t.assert.equal(t.getSprite("Körper").getClone(7).getLayerOrder(), 8, "Expected Clone 7 of Körper to be at layer 8");
  t.assert.equal(t.getSprite("Körper").getClone(8).getLayerOrder(), 9, "Expected Clone 8 of Körper to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(9).getLayerOrder(), 10, "Expected Clone 9 of Körper to be at layer 10");
  t.assert.equal(t.getSprite("Körper").getClone(10).getLayerOrder(), 11, "Expected Clone 10 of Körper to be at layer 11");
  t.assert.equal(t.getSprite("Körper").getClone(11).getLayerOrder(), 12, "Expected Clone 11 of Körper to be at layer 12");
  t.assert.equal(t.getSprite("Körper").getClone(12).getLayerOrder(), 13, "Expected Clone 12 of Körper to be at layer 13");
  t.assert.withinRange(t.getSprite("Kopf").x, -228.26383885339465, 5, "Expected Sprite Kopf to have x-position -228.26383885339465 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 77.5945397476055, 5, "Expected Sprite Kopf to have y-position 77.5945397476055 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -228.26383885339465, 5, "Expected Sprite Körper to have x-position -228.26383885339465 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 80.5945397476055, 5, "Expected Sprite Körper to have y-position 80.5945397476055 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 118, 5, "Expected Sprite Punkt to have x-position 118 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -91, 5, "Expected Sprite Punkt to have y-position -91 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 70.74986812444868, 5, "Expected Sprite Goodie to have x-position 70.74986812444868 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, -165.00487338384724, 5, "Expected Sprite Goodie to have y-position -165.00487338384724 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).x, -233, 5, "Expected Clone 7 of Körper to have x-position -233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).y, 65.558051789953, 5, "Expected Clone 7 of Körper to have y-position 65.558051789953 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).x, -233, 5, "Expected Clone 8 of Körper to have x-position -233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).y, 62.558051789953, 5, "Expected Clone 8 of Körper to have y-position 62.558051789953 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).x, -233, 5, "Expected Clone 9 of Körper to have x-position -233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).y, 59.558051789953, 5, "Expected Clone 9 of Körper to have y-position 59.558051789953 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(10).x, 71.38908408037834, 5, "Expected Clone 10 of Körper to have x-position 71.38908408037834 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(10).y, -173, 5, "Expected Clone 10 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(11).x, 71.38908408037834, 5, "Expected Clone 11 of Körper to have x-position 71.38908408037834 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(11).y, -173, 5, "Expected Clone 11 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).x, -228.26383885339465, 5, "Expected Clone 12 of Körper to have x-position -228.26383885339465 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).y, 80.5945397476055, 5, "Expected Clone 12 of Körper to have y-position 80.5945397476055 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(7).sayText, "Expected Clone 7 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(8).sayText, "Expected Clone 8 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(9).sayText, "Expected Clone 9 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(10).sayText, "Expected Clone 10 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(11).sayText, "Expected Clone 11 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(12).sayText, "Expected Clone 12 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).size, 90, 1, "Expected Clone 7 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).size, 90, 1, "Expected Clone 8 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).size, 90, 1, "Expected Clone 9 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(10).size, 90, 1, "Expected Clone 10 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(11).size, 90, 1, "Expected Clone 11 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).size, 90, 1, "Expected Clone 12 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.ok(t.getSprite("Goodie").visible, "Expected Sprite Goodie to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(7).visible, "Expected Clone 7 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(8).visible, "Expected Clone 8 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(9).visible, "Expected Clone 9 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(10).visible, "Expected Clone 10 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(11).visible, "Expected Clone 11 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(12).visible, "Expected Clone 12 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(7).volume, 100, "Expected Clone 7 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(8).volume, 100, "Expected Clone 8 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(9).volume, 100, "Expected Clone 9 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(10).volume, 100, "Expected Clone 10 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(11).volume, 100, "Expected Clone 11 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(12).volume, 100, "Expected Clone 12 of Körper to have volume 100");
  t.keyPress('right arrow', 2);
  await t.runForSteps(2);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).currentCostume, 0, "Expected Clone 4 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).currentCostume, 0, "Expected Clone 5 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).currentCostume, 0, "Expected Clone 7 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).currentCostume, 0, "Expected Clone 8 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).currentCostume, 0, "Expected Clone 9 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).currentCostume, 0, "Expected Clone 12 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 12, "Expected Sprite Körper to have 12 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(4).direction, 90, 1, "Expected Clone 4 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(5).direction, 90, 1, "Expected Clone 5 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(7).direction, 90, 1, "Expected Clone 7 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(8).direction, 90, 1, "Expected Clone 8 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(9).direction, 90, 1, "Expected Clone 9 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(12).direction, 90, 1, "Expected Clone 12 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.color, 0, "Expected effect color of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.fisheye, 0, "Expected effect fisheye of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.whirl, 0, "Expected effect whirl of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.pixelate, 0, "Expected effect pixelate of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.mosaic, 0, "Expected effect mosaic of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.brightness, 0, "Expected effect brightness of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.ghost, 0, "Expected effect ghost of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.color, 0, "Expected effect color of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.fisheye, 0, "Expected effect fisheye of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.whirl, 0, "Expected effect whirl of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.pixelate, 0, "Expected effect pixelate of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.mosaic, 0, "Expected effect mosaic of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.brightness, 0, "Expected effect brightness of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.ghost, 0, "Expected effect ghost of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.color, 0, "Expected effect color of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.fisheye, 0, "Expected effect fisheye of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.whirl, 0, "Expected effect whirl of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.pixelate, 0, "Expected effect pixelate of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.mosaic, 0, "Expected effect mosaic of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.brightness, 0, "Expected effect brightness of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.ghost, 0, "Expected effect ghost of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.color, 0, "Expected effect color of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.fisheye, 0, "Expected effect fisheye of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.whirl, 0, "Expected effect whirl of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.pixelate, 0, "Expected effect pixelate of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.mosaic, 0, "Expected effect mosaic of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.brightness, 0, "Expected effect brightness of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.ghost, 0, "Expected effect ghost of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 14, "Expected Sprite Körper to be at layer 14");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 16, "Expected Sprite Punkt to be at layer 16");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 15, "Expected Sprite Goodie to be at layer 15");
  t.assert.equal(t.getSprite("Körper").getClone(4).getLayerOrder(), 5, "Expected Clone 4 of Körper to be at layer 5");
  t.assert.equal(t.getSprite("Körper").getClone(5).getLayerOrder(), 6, "Expected Clone 5 of Körper to be at layer 6");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.equal(t.getSprite("Körper").getClone(7).getLayerOrder(), 8, "Expected Clone 7 of Körper to be at layer 8");
  t.assert.equal(t.getSprite("Körper").getClone(8).getLayerOrder(), 9, "Expected Clone 8 of Körper to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(9).getLayerOrder(), 10, "Expected Clone 9 of Körper to be at layer 10");
  t.assert.equal(t.getSprite("Körper").getClone(12).getLayerOrder(), 13, "Expected Clone 12 of Körper to be at layer 13");
  t.assert.withinRange(t.getSprite("Kopf").x, -222.26383885339465, 5, "Expected Sprite Kopf to have x-position -222.26383885339465 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 74.5945397476055, 5, "Expected Sprite Kopf to have y-position 74.5945397476055 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -225.26383885339465, 5, "Expected Sprite Körper to have x-position -225.26383885339465 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 74.5945397476055, 5, "Expected Sprite Körper to have y-position 74.5945397476055 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 118, 5, "Expected Sprite Punkt to have x-position 118 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -91, 5, "Expected Sprite Punkt to have y-position -91 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 70.74986812444868, 5, "Expected Sprite Goodie to have x-position 70.74986812444868 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, -165.00487338384724, 5, "Expected Sprite Goodie to have y-position -165.00487338384724 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).x, -233, 5, "Expected Clone 4 of Körper to have x-position -233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).y, 65.558051789953, 5, "Expected Clone 4 of Körper to have y-position 65.558051789953 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).x, -233, 5, "Expected Clone 5 of Körper to have x-position -233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).y, 62.558051789953, 5, "Expected Clone 5 of Körper to have y-position 62.558051789953 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, -233, 5, "Expected Clone 6 of Körper to have x-position -233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 59.558051789953, 5, "Expected Clone 6 of Körper to have y-position 59.558051789953 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).x, 71.38908408037834, 5, "Expected Clone 7 of Körper to have x-position 71.38908408037834 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).y, -173, 5, "Expected Clone 7 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).x, 71.38908408037834, 5, "Expected Clone 8 of Körper to have x-position 71.38908408037834 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).y, -173, 5, "Expected Clone 8 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).x, -228.26383885339465, 5, "Expected Clone 9 of Körper to have x-position -228.26383885339465 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).y, 80.5945397476055, 5, "Expected Clone 9 of Körper to have y-position 80.5945397476055 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).x, -225.26383885339465, 5, "Expected Clone 12 of Körper to have x-position -225.26383885339465 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).y, 74.5945397476055, 5, "Expected Clone 12 of Körper to have y-position 74.5945397476055 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(4).sayText, "Expected Clone 4 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(5).sayText, "Expected Clone 5 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(7).sayText, "Expected Clone 7 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(8).sayText, "Expected Clone 8 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(9).sayText, "Expected Clone 9 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(12).sayText, "Expected Clone 12 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).size, 90, 1, "Expected Clone 4 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).size, 90, 1, "Expected Clone 5 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).size, 90, 1, "Expected Clone 7 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).size, 90, 1, "Expected Clone 8 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).size, 90, 1, "Expected Clone 9 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).size, 90, 1, "Expected Clone 12 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.ok(t.getSprite("Goodie").visible, "Expected Sprite Goodie to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(4).visible, "Expected Clone 4 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(5).visible, "Expected Clone 5 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(7).visible, "Expected Clone 7 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(8).visible, "Expected Clone 8 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(9).visible, "Expected Clone 9 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(12).visible, "Expected Clone 12 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(4).volume, 100, "Expected Clone 4 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(5).volume, 100, "Expected Clone 5 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(7).volume, 100, "Expected Clone 7 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(8).volume, 100, "Expected Clone 8 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(9).volume, 100, "Expected Clone 9 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(12).volume, 100, "Expected Clone 12 of Körper to have volume 100");
  t.keyPress('down arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).currentCostume, 0, "Expected Clone 2 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).currentCostume, 0, "Expected Clone 3 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).currentCostume, 0, "Expected Clone 4 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).currentCostume, 0, "Expected Clone 5 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).currentCostume, 0, "Expected Clone 12 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 12, "Expected Sprite Körper to have 12 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(2).direction, 90, 1, "Expected Clone 2 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(3).direction, 90, 1, "Expected Clone 3 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(4).direction, 90, 1, "Expected Clone 4 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(5).direction, 90, 1, "Expected Clone 5 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(12).direction, 90, 1, "Expected Clone 12 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.color, 0, "Expected effect color of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.fisheye, 0, "Expected effect fisheye of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.whirl, 0, "Expected effect whirl of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.pixelate, 0, "Expected effect pixelate of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.mosaic, 0, "Expected effect mosaic of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.brightness, 0, "Expected effect brightness of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.ghost, 0, "Expected effect ghost of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 14, "Expected Sprite Körper to be at layer 14");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 16, "Expected Sprite Punkt to be at layer 16");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 15, "Expected Sprite Goodie to be at layer 15");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.equal(t.getSprite("Körper").getClone(2).getLayerOrder(), 3, "Expected Clone 2 of Körper to be at layer 3");
  t.assert.equal(t.getSprite("Körper").getClone(3).getLayerOrder(), 4, "Expected Clone 3 of Körper to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(4).getLayerOrder(), 5, "Expected Clone 4 of Körper to be at layer 5");
  t.assert.equal(t.getSprite("Körper").getClone(5).getLayerOrder(), 6, "Expected Clone 5 of Körper to be at layer 6");
  t.assert.equal(t.getSprite("Körper").getClone(12).getLayerOrder(), 13, "Expected Clone 12 of Körper to be at layer 13");
  t.assert.withinRange(t.getSprite("Kopf").x, -219.26383885339465, 5, "Expected Sprite Kopf to have x-position -219.26383885339465 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 65.5945397476055, 5, "Expected Sprite Kopf to have y-position 65.5945397476055 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -219.26383885339465, 5, "Expected Sprite Körper to have x-position -219.26383885339465 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 68.5945397476055, 5, "Expected Sprite Körper to have y-position 68.5945397476055 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 118, 5, "Expected Sprite Punkt to have x-position 118 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -91, 5, "Expected Sprite Punkt to have y-position -91 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 70.74986812444868, 5, "Expected Sprite Goodie to have x-position 70.74986812444868 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, -165.00487338384724, 5, "Expected Sprite Goodie to have y-position -165.00487338384724 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, -233, 5, "Expected Clone 1 of Körper to have x-position -233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 62.558051789953, 5, "Expected Clone 1 of Körper to have y-position 62.558051789953 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).x, -233, 5, "Expected Clone 2 of Körper to have x-position -233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).y, 59.558051789953, 5, "Expected Clone 2 of Körper to have y-position 59.558051789953 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).x, 71.38908408037834, 5, "Expected Clone 3 of Körper to have x-position 71.38908408037834 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).y, -173, 5, "Expected Clone 3 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).x, 71.38908408037834, 5, "Expected Clone 4 of Körper to have x-position 71.38908408037834 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).y, -173, 5, "Expected Clone 4 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).x, -228.26383885339465, 5, "Expected Clone 5 of Körper to have x-position -228.26383885339465 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).y, 80.5945397476055, 5, "Expected Clone 5 of Körper to have y-position 80.5945397476055 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).x, -219.26383885339465, 5, "Expected Clone 12 of Körper to have x-position -219.26383885339465 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).y, 68.5945397476055, 5, "Expected Clone 12 of Körper to have y-position 68.5945397476055 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(2).sayText, "Expected Clone 2 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(3).sayText, "Expected Clone 3 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(4).sayText, "Expected Clone 4 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(5).sayText, "Expected Clone 5 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(12).sayText, "Expected Clone 12 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).size, 90, 1, "Expected Clone 2 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).size, 90, 1, "Expected Clone 3 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).size, 90, 1, "Expected Clone 4 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).size, 90, 1, "Expected Clone 5 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).size, 90, 1, "Expected Clone 12 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.ok(t.getSprite("Goodie").visible, "Expected Sprite Goodie to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(2).visible, "Expected Clone 2 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(3).visible, "Expected Clone 3 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(4).visible, "Expected Clone 4 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(5).visible, "Expected Clone 5 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(12).visible, "Expected Clone 12 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(2).volume, 100, "Expected Clone 2 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(3).volume, 100, "Expected Clone 3 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(4).volume, 100, "Expected Clone 4 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(5).volume, 100, "Expected Clone 5 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(12).volume, 100, "Expected Clone 12 of Körper to have volume 100");
  await t.runForSteps(100);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, -219.26383885339465, 5, "Expected Sprite Kopf to have x-position -219.26383885339465 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 38.594539747605495, 5, "Expected Sprite Kopf to have y-position 38.594539747605495 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -219.26383885339465, 5, "Expected Sprite Körper to have x-position -219.26383885339465 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 41.594539747605495, 5, "Expected Sprite Körper to have y-position 41.594539747605495 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 118, 5, "Expected Sprite Punkt to have x-position 118 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -91, 5, "Expected Sprite Punkt to have y-position -91 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 70.74986812444868, 5, "Expected Sprite Goodie to have x-position 70.74986812444868 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, -165.00487338384724, 5, "Expected Sprite Goodie to have y-position -165.00487338384724 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.ok(t.getSprite("Goodie").visible, "Expected Sprite Goodie to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.end();
}

module.exports = [
  {
      test: test0,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687849400737',
      type: 'standard',
  },
  {
      test: test1,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687849400737',
      type: 'standard',
  }
]
