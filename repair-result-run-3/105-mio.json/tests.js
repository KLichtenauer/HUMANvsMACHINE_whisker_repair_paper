const test0 = async function (t) {
  await t.runForSteps(59);
  await t.runForSteps(1);
  t.end();
}
const test1 = async function (t) {
  await t.runForSteps(59);
  await t.runForSteps(1);
  await t.runForSteps(69);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Luftballon").getClone(3).currentCostume, 2, "Expected Clone 3 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).currentCostume, 1, "Expected Clone 7 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).currentCostume, 0, "Expected Clone 11 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).currentCostume, 2, "Expected Clone 15 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(18).currentCostume, 2, "Expected Clone 18 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 18, "Expected Sprite Luftballon to have 18 clones");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).direction, 90, 1, "Expected Clone 3 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).direction, 90, 1, "Expected Clone 7 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).direction, 90, 1, "Expected Clone 11 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).direction, 90, 1, "Expected Clone 15 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(18).direction, 90, 1, "Expected Clone 18 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.color, 0, "Expected effect color of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.fisheye, 0, "Expected effect fisheye of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.whirl, 0, "Expected effect whirl of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.pixelate, 0, "Expected effect pixelate of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.mosaic, 0, "Expected effect mosaic of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.brightness, 0, "Expected effect brightness of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.ghost, 0, "Expected effect ghost of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.color, 0, "Expected effect color of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.fisheye, 0, "Expected effect fisheye of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.whirl, 0, "Expected effect whirl of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.pixelate, 0, "Expected effect pixelate of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.mosaic, 0, "Expected effect mosaic of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.brightness, 0, "Expected effect brightness of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.ghost, 0, "Expected effect ghost of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.color, 0, "Expected effect color of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.fisheye, 0, "Expected effect fisheye of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.whirl, 0, "Expected effect whirl of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.pixelate, 0, "Expected effect pixelate of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.mosaic, 0, "Expected effect mosaic of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.brightness, 0, "Expected effect brightness of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.ghost, 0, "Expected effect ghost of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(18).effects.color, 0, "Expected effect color of Clone 18 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(18).effects.fisheye, 0, "Expected effect fisheye of Clone 18 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(18).effects.whirl, 0, "Expected effect whirl of Clone 18 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(18).effects.pixelate, 0, "Expected effect pixelate of Clone 18 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(18).effects.mosaic, 0, "Expected effect mosaic of Clone 18 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(18).effects.brightness, 0, "Expected effect brightness of Clone 18 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(18).effects.ghost, 0, "Expected effect ghost of Clone 18 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 21, "Expected Sprite Einhorn to be at layer 21");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 19, "Expected Sprite Luftballon to be at layer 19");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).getLayerOrder(), 15, "Expected Clone 3 of Luftballon to be at layer 15");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).getLayerOrder(), 16, "Expected Clone 7 of Luftballon to be at layer 16");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).getLayerOrder(), 17, "Expected Clone 11 of Luftballon to be at layer 17");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).getLayerOrder(), 18, "Expected Clone 15 of Luftballon to be at layer 18");
  t.assert.equal(t.getSprite("Luftballon").getClone(18).getLayerOrder(), 10, "Expected Clone 18 of Luftballon to be at layer 10");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(3).x, 2, 5, "Expected Clone 3 of Luftballon to have x-position 2 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(3).y, 111, 5, "Expected Clone 3 of Luftballon to have y-position 111 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).x, -112, 5, "Expected Clone 7 of Luftballon to have x-position -112 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).y, -54, 5, "Expected Clone 7 of Luftballon to have y-position -54 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(11).x, 35, 5, "Expected Clone 11 of Luftballon to have x-position 35 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(11).y, 137, 5, "Expected Clone 11 of Luftballon to have y-position 137 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(15).x, -234, 5, "Expected Clone 15 of Luftballon to have x-position -234 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(15).y, -56, 5, "Expected Clone 15 of Luftballon to have y-position -56 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(18).x, 54, 5, "Expected Clone 18 of Luftballon to have x-position 54 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(18).y, 90, 5, "Expected Clone 18 of Luftballon to have y-position 90 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").getClone(3).sayText, "Expected Clone 3 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(7).sayText, "Expected Clone 7 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(11).sayText, "Expected Clone 11 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(15).sayText, "Expected Clone 15 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(18).sayText, "Expected Clone 18 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(3).size, 50, 1, "Expected Clone 3 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).size, 50, 1, "Expected Clone 7 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(11).size, 50, 1, "Expected Clone 11 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(15).size, 50, 1, "Expected Clone 15 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(18).size, 50, 1, "Expected Clone 18 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Luftballon").getClone(3).visible, "Expected Clone 3 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(7).visible, "Expected Clone 7 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(11).visible, "Expected Clone 11 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(15).visible, "Expected Clone 15 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(18).visible, "Expected Clone 18 of Luftballon to be visible");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).volume, 100, "Expected Clone 3 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).volume, 100, "Expected Clone 7 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).volume, 100, "Expected Clone 11 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).volume, 100, "Expected Clone 15 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(18).volume, 100, "Expected Clone 18 of Luftballon to have volume 100");
  t.end();
}
const test2 = async function (t) {
  await t.runForSteps(59);
  await t.runForSteps(1);
  await t.runForSteps(33);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Luftballon").getClone(3).currentCostume, 2, "Expected Clone 3 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).currentCostume, 1, "Expected Clone 6 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).currentCostume, 0, "Expected Clone 9 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).currentCostume, 2, "Expected Clone 12 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).currentCostume, 2, "Expected Clone 13 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 13, "Expected Sprite Luftballon to have 13 clones");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).direction, 90, 1, "Expected Clone 3 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).direction, 90, 1, "Expected Clone 6 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).direction, 90, 1, "Expected Clone 9 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).direction, 90, 1, "Expected Clone 12 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).direction, 90, 1, "Expected Clone 13 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.color, 0, "Expected effect color of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.fisheye, 0, "Expected effect fisheye of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.whirl, 0, "Expected effect whirl of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.pixelate, 0, "Expected effect pixelate of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.mosaic, 0, "Expected effect mosaic of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.brightness, 0, "Expected effect brightness of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.ghost, 0, "Expected effect ghost of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.color, 0, "Expected effect color of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.fisheye, 0, "Expected effect fisheye of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.whirl, 0, "Expected effect whirl of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.pixelate, 0, "Expected effect pixelate of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.mosaic, 0, "Expected effect mosaic of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.brightness, 0, "Expected effect brightness of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.ghost, 0, "Expected effect ghost of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).effects.color, 0, "Expected effect color of Clone 13 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).effects.fisheye, 0, "Expected effect fisheye of Clone 13 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).effects.whirl, 0, "Expected effect whirl of Clone 13 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).effects.pixelate, 0, "Expected effect pixelate of Clone 13 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).effects.mosaic, 0, "Expected effect mosaic of Clone 13 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).effects.brightness, 0, "Expected effect brightness of Clone 13 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).effects.ghost, 0, "Expected effect ghost of Clone 13 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 15, "Expected Sprite Luftballon to be at layer 15");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).getLayerOrder(), 11, "Expected Clone 3 of Luftballon to be at layer 11");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).getLayerOrder(), 12, "Expected Clone 6 of Luftballon to be at layer 12");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).getLayerOrder(), 13, "Expected Clone 9 of Luftballon to be at layer 13");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).getLayerOrder(), 14, "Expected Clone 12 of Luftballon to be at layer 14");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).getLayerOrder(), 10, "Expected Clone 13 of Luftballon to be at layer 10");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(3).x, -120, 5, "Expected Clone 3 of Luftballon to have x-position -120 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(3).y, 116, 5, "Expected Clone 3 of Luftballon to have y-position 116 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(6).x, 31, 5, "Expected Clone 6 of Luftballon to have x-position 31 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(6).y, -75, 5, "Expected Clone 6 of Luftballon to have y-position -75 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(9).x, 52, 5, "Expected Clone 9 of Luftballon to have x-position 52 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(9).y, -27, 5, "Expected Clone 9 of Luftballon to have y-position -27 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).x, -142, 5, "Expected Clone 12 of Luftballon to have x-position -142 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).y, -35, 5, "Expected Clone 12 of Luftballon to have y-position -35 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(13).x, -215, 5, "Expected Clone 13 of Luftballon to have x-position -215 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(13).y, 128, 5, "Expected Clone 13 of Luftballon to have y-position 128 +-5");
  t.assert.not(t.getSprite("Einhorn").sayText, "Expected Sprite Einhorn not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(3).sayText, "Expected Clone 3 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(6).sayText, "Expected Clone 6 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(9).sayText, "Expected Clone 9 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(12).sayText, "Expected Clone 12 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(13).sayText, "Expected Clone 13 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(3).size, 50, 1, "Expected Clone 3 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(6).size, 50, 1, "Expected Clone 6 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(9).size, 50, 1, "Expected Clone 9 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).size, 50, 1, "Expected Clone 12 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(13).size, 50, 1, "Expected Clone 13 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Luftballon").getClone(3).visible, "Expected Clone 3 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(6).visible, "Expected Clone 6 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(9).visible, "Expected Clone 9 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(12).visible, "Expected Clone 12 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(13).visible, "Expected Clone 13 of Luftballon to be visible");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).volume, 100, "Expected Clone 3 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).volume, 100, "Expected Clone 6 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).volume, 100, "Expected Clone 9 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).volume, 100, "Expected Clone 12 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).volume, 100, "Expected Clone 13 of Luftballon to have volume 100");
  await t.runForSteps(69);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Luftballon").getClone(4).currentCostume, 2, "Expected Clone 4 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).currentCostume, 1, "Expected Clone 9 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).currentCostume, 0, "Expected Clone 14 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).currentCostume, 2, "Expected Clone 20 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(23).currentCostume, 2, "Expected Clone 23 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 23, "Expected Sprite Luftballon to have 23 clones");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).direction, 90, 1, "Expected Clone 4 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).direction, 90, 1, "Expected Clone 9 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).direction, 90, 1, "Expected Clone 14 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).direction, 90, 1, "Expected Clone 20 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(23).direction, 90, 1, "Expected Clone 23 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.color, 0, "Expected effect color of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.fisheye, 0, "Expected effect fisheye of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.whirl, 0, "Expected effect whirl of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.pixelate, 0, "Expected effect pixelate of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.mosaic, 0, "Expected effect mosaic of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.brightness, 0, "Expected effect brightness of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.ghost, 0, "Expected effect ghost of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.color, 0, "Expected effect color of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.fisheye, 0, "Expected effect fisheye of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.whirl, 0, "Expected effect whirl of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.pixelate, 0, "Expected effect pixelate of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.mosaic, 0, "Expected effect mosaic of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.brightness, 0, "Expected effect brightness of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.ghost, 0, "Expected effect ghost of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.color, 0, "Expected effect color of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.fisheye, 0, "Expected effect fisheye of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.whirl, 0, "Expected effect whirl of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.pixelate, 0, "Expected effect pixelate of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.mosaic, 0, "Expected effect mosaic of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.brightness, 0, "Expected effect brightness of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.ghost, 0, "Expected effect ghost of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(23).effects.color, 0, "Expected effect color of Clone 23 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(23).effects.fisheye, 0, "Expected effect fisheye of Clone 23 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(23).effects.whirl, 0, "Expected effect whirl of Clone 23 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(23).effects.pixelate, 0, "Expected effect pixelate of Clone 23 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(23).effects.mosaic, 0, "Expected effect mosaic of Clone 23 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(23).effects.brightness, 0, "Expected effect brightness of Clone 23 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(23).effects.ghost, 0, "Expected effect ghost of Clone 23 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 26, "Expected Sprite Einhorn to be at layer 26");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 24, "Expected Sprite Luftballon to be at layer 24");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).getLayerOrder(), 20, "Expected Clone 4 of Luftballon to be at layer 20");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).getLayerOrder(), 21, "Expected Clone 9 of Luftballon to be at layer 21");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).getLayerOrder(), 22, "Expected Clone 14 of Luftballon to be at layer 22");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).getLayerOrder(), 23, "Expected Clone 20 of Luftballon to be at layer 23");
  t.assert.equal(t.getSprite("Luftballon").getClone(23).getLayerOrder(), 2, "Expected Clone 23 of Luftballon to be at layer 2");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).x, 132, 5, "Expected Clone 4 of Luftballon to have x-position 132 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).y, -122, 5, "Expected Clone 4 of Luftballon to have y-position -122 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(9).x, -1, 5, "Expected Clone 9 of Luftballon to have x-position -1 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(9).y, -56, 5, "Expected Clone 9 of Luftballon to have y-position -56 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(14).x, 146, 5, "Expected Clone 14 of Luftballon to have x-position 146 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(14).y, -128, 5, "Expected Clone 14 of Luftballon to have y-position -128 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(20).x, -107, 5, "Expected Clone 20 of Luftballon to have x-position -107 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(20).y, -68, 5, "Expected Clone 20 of Luftballon to have y-position -68 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(23).x, 29, 5, "Expected Clone 23 of Luftballon to have x-position 29 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(23).y, -131, 5, "Expected Clone 23 of Luftballon to have y-position -131 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").getClone(4).sayText, "Expected Clone 4 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(9).sayText, "Expected Clone 9 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(14).sayText, "Expected Clone 14 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(20).sayText, "Expected Clone 20 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(23).sayText, "Expected Clone 23 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).size, 50, 1, "Expected Clone 4 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(9).size, 50, 1, "Expected Clone 9 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(14).size, 50, 1, "Expected Clone 14 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(20).size, 50, 1, "Expected Clone 20 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(23).size, 50, 1, "Expected Clone 23 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Luftballon").getClone(4).visible, "Expected Clone 4 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(9).visible, "Expected Clone 9 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(14).visible, "Expected Clone 14 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(20).visible, "Expected Clone 20 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(23).visible, "Expected Clone 23 of Luftballon to be visible");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).volume, 100, "Expected Clone 4 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).volume, 100, "Expected Clone 9 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).volume, 100, "Expected Clone 14 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).volume, 100, "Expected Clone 20 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(23).volume, 100, "Expected Clone 23 of Luftballon to have volume 100");
  await t.runForSteps(23);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Luftballon").getClone(2).currentCostume, 0, "Expected Clone 2 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).currentCostume, 2, "Expected Clone 8 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).currentCostume, 1, "Expected Clone 14 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).currentCostume, 0, "Expected Clone 20 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(26).currentCostume, 2, "Expected Clone 26 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 26, "Expected Sprite Luftballon to have 26 clones");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).direction, 90, 1, "Expected Clone 8 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).direction, 90, 1, "Expected Clone 14 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).direction, 90, 1, "Expected Clone 20 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(26).direction, 90, 1, "Expected Clone 26 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.color, 0, "Expected effect color of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.fisheye, 0, "Expected effect fisheye of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.whirl, 0, "Expected effect whirl of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.pixelate, 0, "Expected effect pixelate of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.mosaic, 0, "Expected effect mosaic of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.brightness, 0, "Expected effect brightness of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.ghost, 0, "Expected effect ghost of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.color, 0, "Expected effect color of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.fisheye, 0, "Expected effect fisheye of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.whirl, 0, "Expected effect whirl of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.pixelate, 0, "Expected effect pixelate of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.mosaic, 0, "Expected effect mosaic of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.brightness, 0, "Expected effect brightness of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.ghost, 0, "Expected effect ghost of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.color, 0, "Expected effect color of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.fisheye, 0, "Expected effect fisheye of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.whirl, 0, "Expected effect whirl of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.pixelate, 0, "Expected effect pixelate of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.mosaic, 0, "Expected effect mosaic of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.brightness, 0, "Expected effect brightness of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.ghost, 0, "Expected effect ghost of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(26).effects.color, 0, "Expected effect color of Clone 26 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(26).effects.fisheye, 0, "Expected effect fisheye of Clone 26 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(26).effects.whirl, 0, "Expected effect whirl of Clone 26 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(26).effects.pixelate, 0, "Expected effect pixelate of Clone 26 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(26).effects.mosaic, 0, "Expected effect mosaic of Clone 26 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(26).effects.brightness, 0, "Expected effect brightness of Clone 26 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(26).effects.ghost, 0, "Expected effect ghost of Clone 26 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 29, "Expected Sprite Einhorn to be at layer 29");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 27, "Expected Sprite Luftballon to be at layer 27");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).getLayerOrder(), 24, "Expected Clone 8 of Luftballon to be at layer 24");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).getLayerOrder(), 25, "Expected Clone 14 of Luftballon to be at layer 25");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).getLayerOrder(), 26, "Expected Clone 20 of Luftballon to be at layer 26");
  t.assert.equal(t.getSprite("Luftballon").getClone(26).getLayerOrder(), 14, "Expected Clone 26 of Luftballon to be at layer 14");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).x, -178, 5, "Expected Clone 8 of Luftballon to have x-position -178 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).y, 44, 5, "Expected Clone 8 of Luftballon to have y-position 44 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(14).x, 13, 5, "Expected Clone 14 of Luftballon to have x-position 13 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(14).y, 85, 5, "Expected Clone 14 of Luftballon to have y-position 85 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(20).x, -111, 5, "Expected Clone 20 of Luftballon to have x-position -111 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(20).y, 134, 5, "Expected Clone 20 of Luftballon to have y-position 134 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(26).x, -183, 5, "Expected Clone 26 of Luftballon to have x-position -183 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(26).y, 39, 5, "Expected Clone 26 of Luftballon to have y-position 39 +-5");
  t.assert.not(t.getSprite("Luftballon").getClone(8).sayText, "Expected Clone 8 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(14).sayText, "Expected Clone 14 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(20).sayText, "Expected Clone 20 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(26).sayText, "Expected Clone 26 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).size, 50, 1, "Expected Clone 8 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(14).size, 50, 1, "Expected Clone 14 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(20).size, 50, 1, "Expected Clone 20 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(26).size, 50, 1, "Expected Clone 26 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Luftballon").getClone(8).visible, "Expected Clone 8 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(14).visible, "Expected Clone 14 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(20).visible, "Expected Clone 20 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(26).visible, "Expected Clone 26 of Luftballon to be visible");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).volume, 100, "Expected Clone 8 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).volume, 100, "Expected Clone 14 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).volume, 100, "Expected Clone 20 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(26).volume, 100, "Expected Clone 26 of Luftballon to have volume 100");
  await t.runForSteps(36);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Luftballon").getClone(1).currentCostume, 0, "Expected Clone 1 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).currentCostume, 2, "Expected Clone 8 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).currentCostume, 1, "Expected Clone 15 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).direction, 90, 1, "Expected Clone 1 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).direction, 90, 1, "Expected Clone 8 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).direction, 90, 1, "Expected Clone 15 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.color, 0, "Expected effect color of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.fisheye, 0, "Expected effect fisheye of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.whirl, 0, "Expected effect whirl of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.pixelate, 0, "Expected effect pixelate of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.mosaic, 0, "Expected effect mosaic of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.brightness, 0, "Expected effect brightness of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.ghost, 0, "Expected effect ghost of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.color, 0, "Expected effect color of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.fisheye, 0, "Expected effect fisheye of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.whirl, 0, "Expected effect whirl of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.pixelate, 0, "Expected effect pixelate of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.mosaic, 0, "Expected effect mosaic of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.brightness, 0, "Expected effect brightness of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.ghost, 0, "Expected effect ghost of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).getLayerOrder(), 28, "Expected Clone 1 of Luftballon to be at layer 28");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).getLayerOrder(), 29, "Expected Clone 8 of Luftballon to be at layer 29");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).getLayerOrder(), 30, "Expected Clone 15 of Luftballon to be at layer 30");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 15, "Expected Clone 30 of Luftballon to be at layer 15");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).x, -23, 5, "Expected Clone 1 of Luftballon to have x-position -23 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).y, 126, 5, "Expected Clone 1 of Luftballon to have y-position 126 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).x, -48, 5, "Expected Clone 8 of Luftballon to have x-position -48 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).y, 153, 5, "Expected Clone 8 of Luftballon to have y-position 153 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(15).x, -67, 5, "Expected Clone 15 of Luftballon to have x-position -67 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(15).y, -37, 5, "Expected Clone 15 of Luftballon to have y-position -37 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, -155, 5, "Expected Clone 30 of Luftballon to have x-position -155 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, 175, 5, "Expected Clone 30 of Luftballon to have y-position 175 +-5");
  t.assert.not(t.getSprite("Luftballon").getClone(1).sayText, "Expected Clone 1 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(8).sayText, "Expected Clone 8 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(15).sayText, "Expected Clone 15 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).size, 50, 1, "Expected Clone 1 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).size, 50, 1, "Expected Clone 8 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(15).size, 50, 1, "Expected Clone 15 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(1).visible, "Expected Clone 1 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(8).visible, "Expected Clone 8 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(15).visible, "Expected Clone 15 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).volume, 100, "Expected Clone 1 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).volume, 100, "Expected Clone 8 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).volume, 100, "Expected Clone 15 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  t.end();
}

module.exports = [
  {
      test: test0,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687938089136',
      type: 'standard',
  },
  {
      test: test1,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687938089136',
      type: 'standard',
  },
  {
      test: test2,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687938089136',
      type: 'standard',
  }
]
