const test0 = async function (t) {
  await t.runForSteps(71);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).currentCostume, 2, "Expected Clone 2 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).currentCostume, 1, "Expected Clone 4 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).currentCostume, 0, "Expected Clone 6 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).currentCostume, 2, "Expected Clone 9 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).currentCostume, 2, "Expected Clone 10 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 10, "Expected Sprite Luftballon to have 10 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).direction, 90, 1, "Expected Clone 2 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).direction, 90, 1, "Expected Clone 4 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).direction, 90, 1, "Expected Clone 6 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).direction, 90, 1, "Expected Clone 9 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).direction, 90, 1, "Expected Clone 10 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.color, 0, "Expected effect color of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.fisheye, 0, "Expected effect fisheye of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.whirl, 0, "Expected effect whirl of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.pixelate, 0, "Expected effect pixelate of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.mosaic, 0, "Expected effect mosaic of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.brightness, 0, "Expected effect brightness of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.ghost, 0, "Expected effect ghost of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.color, 0, "Expected effect color of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.fisheye, 0, "Expected effect fisheye of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.whirl, 0, "Expected effect whirl of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.pixelate, 0, "Expected effect pixelate of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.mosaic, 0, "Expected effect mosaic of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.brightness, 0, "Expected effect brightness of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.ghost, 0, "Expected effect ghost of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 1, "Expected Sprite Einhorn to be at layer 1");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 12, "Expected Sprite Luftballon to be at layer 12");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).getLayerOrder(), 8, "Expected Clone 2 of Luftballon to be at layer 8");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).getLayerOrder(), 9, "Expected Clone 4 of Luftballon to be at layer 9");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).getLayerOrder(), 10, "Expected Clone 6 of Luftballon to be at layer 10");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).getLayerOrder(), 11, "Expected Clone 9 of Luftballon to be at layer 11");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).getLayerOrder(), 7, "Expected Clone 10 of Luftballon to be at layer 7");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).x, 211, 5, "Expected Clone 2 of Luftballon to have x-position 211 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).y, 128, 5, "Expected Clone 2 of Luftballon to have y-position 128 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).x, 87, 5, "Expected Clone 4 of Luftballon to have x-position 87 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).y, -126, 5, "Expected Clone 4 of Luftballon to have y-position -126 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(6).x, -235, 5, "Expected Clone 6 of Luftballon to have x-position -235 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(6).y, 69, 5, "Expected Clone 6 of Luftballon to have y-position 69 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(9).x, 34, 5, "Expected Clone 9 of Luftballon to have x-position 34 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(9).y, -69, 5, "Expected Clone 9 of Luftballon to have y-position -69 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(10).x, -13, 5, "Expected Clone 10 of Luftballon to have x-position -13 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(10).y, -69, 5, "Expected Clone 10 of Luftballon to have y-position -69 +-5");
  t.assert.not(t.getSprite("Einhorn").sayText, "Expected Sprite Einhorn not to say anything");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(2).sayText, "Expected Clone 2 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(4).sayText, "Expected Clone 4 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(6).sayText, "Expected Clone 6 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(9).sayText, "Expected Clone 9 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(10).sayText, "Expected Clone 10 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 100, 1, "Expected Sprite Einhorn to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).size, 50, 1, "Expected Clone 2 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).size, 50, 1, "Expected Clone 4 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(6).size, 50, 1, "Expected Clone 6 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(9).size, 50, 1, "Expected Clone 9 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(10).size, 50, 1, "Expected Clone 10 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.ok(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(2).visible, "Expected Clone 2 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(4).visible, "Expected Clone 4 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(6).visible, "Expected Clone 6 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(9).visible, "Expected Clone 9 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(10).visible, "Expected Clone 10 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).volume, 100, "Expected Clone 2 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).volume, 100, "Expected Clone 4 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).volume, 100, "Expected Clone 6 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).volume, 100, "Expected Clone 9 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).volume, 100, "Expected Clone 10 of Luftballon to have volume 100");
  t.end();
}
const test1 = async function (t) {
  await t.runForSteps(71);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).currentCostume, 2, "Expected Clone 2 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).currentCostume, 1, "Expected Clone 4 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).currentCostume, 0, "Expected Clone 6 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).currentCostume, 2, "Expected Clone 9 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).currentCostume, 2, "Expected Clone 10 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 10, "Expected Sprite Luftballon to have 10 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).direction, 90, 1, "Expected Clone 2 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).direction, 90, 1, "Expected Clone 4 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).direction, 90, 1, "Expected Clone 6 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).direction, 90, 1, "Expected Clone 9 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).direction, 90, 1, "Expected Clone 10 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.color, 0, "Expected effect color of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.fisheye, 0, "Expected effect fisheye of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.whirl, 0, "Expected effect whirl of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.pixelate, 0, "Expected effect pixelate of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.mosaic, 0, "Expected effect mosaic of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.brightness, 0, "Expected effect brightness of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.ghost, 0, "Expected effect ghost of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.color, 0, "Expected effect color of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.fisheye, 0, "Expected effect fisheye of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.whirl, 0, "Expected effect whirl of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.pixelate, 0, "Expected effect pixelate of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.mosaic, 0, "Expected effect mosaic of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.brightness, 0, "Expected effect brightness of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.ghost, 0, "Expected effect ghost of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 1, "Expected Sprite Einhorn to be at layer 1");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 12, "Expected Sprite Luftballon to be at layer 12");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).getLayerOrder(), 8, "Expected Clone 2 of Luftballon to be at layer 8");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).getLayerOrder(), 9, "Expected Clone 4 of Luftballon to be at layer 9");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).getLayerOrder(), 10, "Expected Clone 6 of Luftballon to be at layer 10");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).getLayerOrder(), 11, "Expected Clone 9 of Luftballon to be at layer 11");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).getLayerOrder(), 7, "Expected Clone 10 of Luftballon to be at layer 7");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).x, 211, 5, "Expected Clone 2 of Luftballon to have x-position 211 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).y, 128, 5, "Expected Clone 2 of Luftballon to have y-position 128 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).x, 87, 5, "Expected Clone 4 of Luftballon to have x-position 87 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).y, -126, 5, "Expected Clone 4 of Luftballon to have y-position -126 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(6).x, -235, 5, "Expected Clone 6 of Luftballon to have x-position -235 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(6).y, 69, 5, "Expected Clone 6 of Luftballon to have y-position 69 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(9).x, 34, 5, "Expected Clone 9 of Luftballon to have x-position 34 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(9).y, -69, 5, "Expected Clone 9 of Luftballon to have y-position -69 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(10).x, -13, 5, "Expected Clone 10 of Luftballon to have x-position -13 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(10).y, -69, 5, "Expected Clone 10 of Luftballon to have y-position -69 +-5");
  t.assert.not(t.getSprite("Einhorn").sayText, "Expected Sprite Einhorn not to say anything");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(2).sayText, "Expected Clone 2 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(4).sayText, "Expected Clone 4 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(6).sayText, "Expected Clone 6 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(9).sayText, "Expected Clone 9 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(10).sayText, "Expected Clone 10 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 100, 1, "Expected Sprite Einhorn to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).size, 50, 1, "Expected Clone 2 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).size, 50, 1, "Expected Clone 4 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(6).size, 50, 1, "Expected Clone 6 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(9).size, 50, 1, "Expected Clone 9 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(10).size, 50, 1, "Expected Clone 10 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.ok(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(2).visible, "Expected Clone 2 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(4).visible, "Expected Clone 4 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(6).visible, "Expected Clone 6 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(9).visible, "Expected Clone 9 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(10).visible, "Expected Clone 10 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).volume, 100, "Expected Clone 2 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).volume, 100, "Expected Clone 4 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).volume, 100, "Expected Clone 6 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).volume, 100, "Expected Clone 9 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).volume, 100, "Expected Clone 10 of Luftballon to have volume 100");
  await t.runForSteps(82);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).currentCostume, 0, "Expected Clone 1 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).currentCostume, 2, "Expected Clone 6 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).currentCostume, 1, "Expected Clone 11 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).currentCostume, 0, "Expected Clone 16 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).currentCostume, 2, "Expected Clone 21 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(22).currentCostume, 2, "Expected Clone 22 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 22, "Expected Sprite Luftballon to have 22 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).direction, 90, 1, "Expected Clone 1 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).direction, 90, 1, "Expected Clone 6 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).direction, 90, 1, "Expected Clone 11 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).direction, 90, 1, "Expected Clone 16 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).direction, 90, 1, "Expected Clone 21 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(22).direction, 90, 1, "Expected Clone 22 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.color, 0, "Expected effect color of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.fisheye, 0, "Expected effect fisheye of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.whirl, 0, "Expected effect whirl of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.pixelate, 0, "Expected effect pixelate of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.mosaic, 0, "Expected effect mosaic of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.brightness, 0, "Expected effect brightness of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.ghost, 0, "Expected effect ghost of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.color, 0, "Expected effect color of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.fisheye, 0, "Expected effect fisheye of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.whirl, 0, "Expected effect whirl of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.pixelate, 0, "Expected effect pixelate of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.mosaic, 0, "Expected effect mosaic of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.brightness, 0, "Expected effect brightness of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.ghost, 0, "Expected effect ghost of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.color, 0, "Expected effect color of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.fisheye, 0, "Expected effect fisheye of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.whirl, 0, "Expected effect whirl of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.pixelate, 0, "Expected effect pixelate of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.mosaic, 0, "Expected effect mosaic of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.brightness, 0, "Expected effect brightness of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.ghost, 0, "Expected effect ghost of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(22).effects.color, 0, "Expected effect color of Clone 22 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(22).effects.fisheye, 0, "Expected effect fisheye of Clone 22 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(22).effects.whirl, 0, "Expected effect whirl of Clone 22 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(22).effects.pixelate, 0, "Expected effect pixelate of Clone 22 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(22).effects.mosaic, 0, "Expected effect mosaic of Clone 22 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(22).effects.brightness, 0, "Expected effect brightness of Clone 22 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(22).effects.ghost, 0, "Expected effect ghost of Clone 22 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 25, "Expected Sprite Einhorn to be at layer 25");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 23, "Expected Sprite Luftballon to be at layer 23");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).getLayerOrder(), 18, "Expected Clone 1 of Luftballon to be at layer 18");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).getLayerOrder(), 19, "Expected Clone 6 of Luftballon to be at layer 19");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).getLayerOrder(), 20, "Expected Clone 11 of Luftballon to be at layer 20");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).getLayerOrder(), 21, "Expected Clone 16 of Luftballon to be at layer 21");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).getLayerOrder(), 22, "Expected Clone 21 of Luftballon to be at layer 22");
  t.assert.equal(t.getSprite("Luftballon").getClone(22).getLayerOrder(), 5, "Expected Clone 22 of Luftballon to be at layer 5");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).x, -86, 5, "Expected Clone 1 of Luftballon to have x-position -86 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).y, -157, 5, "Expected Clone 1 of Luftballon to have y-position -157 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(6).x, -88, 5, "Expected Clone 6 of Luftballon to have x-position -88 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(6).y, 128, 5, "Expected Clone 6 of Luftballon to have y-position 128 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(11).x, 82, 5, "Expected Clone 11 of Luftballon to have x-position 82 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(11).y, 160, 5, "Expected Clone 11 of Luftballon to have y-position 160 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(16).x, -76, 5, "Expected Clone 16 of Luftballon to have x-position -76 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(16).y, -72, 5, "Expected Clone 16 of Luftballon to have y-position -72 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(21).x, 189, 5, "Expected Clone 21 of Luftballon to have x-position 189 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(21).y, -98, 5, "Expected Clone 21 of Luftballon to have y-position -98 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(22).x, -197, 5, "Expected Clone 22 of Luftballon to have x-position -197 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(22).y, 36, 5, "Expected Clone 22 of Luftballon to have y-position 36 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(1).sayText, "Expected Clone 1 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(6).sayText, "Expected Clone 6 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(11).sayText, "Expected Clone 11 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(16).sayText, "Expected Clone 16 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(21).sayText, "Expected Clone 21 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(22).sayText, "Expected Clone 22 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).size, 50, 1, "Expected Clone 1 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(6).size, 50, 1, "Expected Clone 6 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(11).size, 50, 1, "Expected Clone 11 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(16).size, 50, 1, "Expected Clone 16 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(21).size, 50, 1, "Expected Clone 21 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(22).size, 50, 1, "Expected Clone 22 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.ok(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(1).visible, "Expected Clone 1 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(6).visible, "Expected Clone 6 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(11).visible, "Expected Clone 11 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(16).visible, "Expected Clone 16 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(21).visible, "Expected Clone 21 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(22).visible, "Expected Clone 22 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).volume, 100, "Expected Clone 1 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).volume, 100, "Expected Clone 6 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).volume, 100, "Expected Clone 11 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).volume, 100, "Expected Clone 16 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).volume, 100, "Expected Clone 21 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(22).volume, 100, "Expected Clone 22 of Luftballon to have volume 100");
  t.end();
}
const test2 = async function (t) {
  await t.runForSteps(71);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).currentCostume, 2, "Expected Clone 2 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).currentCostume, 1, "Expected Clone 4 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).currentCostume, 0, "Expected Clone 6 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).currentCostume, 2, "Expected Clone 9 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).currentCostume, 2, "Expected Clone 10 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 10, "Expected Sprite Luftballon to have 10 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).direction, 90, 1, "Expected Clone 2 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).direction, 90, 1, "Expected Clone 4 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).direction, 90, 1, "Expected Clone 6 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).direction, 90, 1, "Expected Clone 9 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).direction, 90, 1, "Expected Clone 10 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.color, 0, "Expected effect color of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.fisheye, 0, "Expected effect fisheye of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.whirl, 0, "Expected effect whirl of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.pixelate, 0, "Expected effect pixelate of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.mosaic, 0, "Expected effect mosaic of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.brightness, 0, "Expected effect brightness of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.ghost, 0, "Expected effect ghost of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.color, 0, "Expected effect color of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.fisheye, 0, "Expected effect fisheye of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.whirl, 0, "Expected effect whirl of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.pixelate, 0, "Expected effect pixelate of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.mosaic, 0, "Expected effect mosaic of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.brightness, 0, "Expected effect brightness of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.ghost, 0, "Expected effect ghost of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 1, "Expected Sprite Einhorn to be at layer 1");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 12, "Expected Sprite Luftballon to be at layer 12");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).getLayerOrder(), 8, "Expected Clone 2 of Luftballon to be at layer 8");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).getLayerOrder(), 9, "Expected Clone 4 of Luftballon to be at layer 9");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).getLayerOrder(), 10, "Expected Clone 6 of Luftballon to be at layer 10");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).getLayerOrder(), 11, "Expected Clone 9 of Luftballon to be at layer 11");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).getLayerOrder(), 7, "Expected Clone 10 of Luftballon to be at layer 7");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).x, 211, 5, "Expected Clone 2 of Luftballon to have x-position 211 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).y, 128, 5, "Expected Clone 2 of Luftballon to have y-position 128 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).x, 87, 5, "Expected Clone 4 of Luftballon to have x-position 87 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).y, -126, 5, "Expected Clone 4 of Luftballon to have y-position -126 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(6).x, -235, 5, "Expected Clone 6 of Luftballon to have x-position -235 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(6).y, 69, 5, "Expected Clone 6 of Luftballon to have y-position 69 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(9).x, 34, 5, "Expected Clone 9 of Luftballon to have x-position 34 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(9).y, -69, 5, "Expected Clone 9 of Luftballon to have y-position -69 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(10).x, -13, 5, "Expected Clone 10 of Luftballon to have x-position -13 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(10).y, -69, 5, "Expected Clone 10 of Luftballon to have y-position -69 +-5");
  t.assert.not(t.getSprite("Einhorn").sayText, "Expected Sprite Einhorn not to say anything");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(2).sayText, "Expected Clone 2 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(4).sayText, "Expected Clone 4 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(6).sayText, "Expected Clone 6 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(9).sayText, "Expected Clone 9 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(10).sayText, "Expected Clone 10 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 100, 1, "Expected Sprite Einhorn to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).size, 50, 1, "Expected Clone 2 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).size, 50, 1, "Expected Clone 4 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(6).size, 50, 1, "Expected Clone 6 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(9).size, 50, 1, "Expected Clone 9 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(10).size, 50, 1, "Expected Clone 10 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.ok(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(2).visible, "Expected Clone 2 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(4).visible, "Expected Clone 4 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(6).visible, "Expected Clone 6 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(9).visible, "Expected Clone 9 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(10).visible, "Expected Clone 10 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).volume, 100, "Expected Clone 2 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).volume, 100, "Expected Clone 4 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).volume, 100, "Expected Clone 6 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).volume, 100, "Expected Clone 9 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).volume, 100, "Expected Clone 10 of Luftballon to have volume 100");
  await t.runForSteps(82);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).currentCostume, 0, "Expected Clone 1 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).currentCostume, 2, "Expected Clone 6 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).currentCostume, 1, "Expected Clone 11 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).currentCostume, 0, "Expected Clone 16 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).currentCostume, 2, "Expected Clone 21 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(22).currentCostume, 2, "Expected Clone 22 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 22, "Expected Sprite Luftballon to have 22 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).direction, 90, 1, "Expected Clone 1 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).direction, 90, 1, "Expected Clone 6 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).direction, 90, 1, "Expected Clone 11 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).direction, 90, 1, "Expected Clone 16 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).direction, 90, 1, "Expected Clone 21 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(22).direction, 90, 1, "Expected Clone 22 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.color, 0, "Expected effect color of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.fisheye, 0, "Expected effect fisheye of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.whirl, 0, "Expected effect whirl of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.pixelate, 0, "Expected effect pixelate of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.mosaic, 0, "Expected effect mosaic of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.brightness, 0, "Expected effect brightness of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.ghost, 0, "Expected effect ghost of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.color, 0, "Expected effect color of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.fisheye, 0, "Expected effect fisheye of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.whirl, 0, "Expected effect whirl of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.pixelate, 0, "Expected effect pixelate of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.mosaic, 0, "Expected effect mosaic of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.brightness, 0, "Expected effect brightness of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.ghost, 0, "Expected effect ghost of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.color, 0, "Expected effect color of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.fisheye, 0, "Expected effect fisheye of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.whirl, 0, "Expected effect whirl of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.pixelate, 0, "Expected effect pixelate of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.mosaic, 0, "Expected effect mosaic of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.brightness, 0, "Expected effect brightness of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.ghost, 0, "Expected effect ghost of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(22).effects.color, 0, "Expected effect color of Clone 22 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(22).effects.fisheye, 0, "Expected effect fisheye of Clone 22 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(22).effects.whirl, 0, "Expected effect whirl of Clone 22 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(22).effects.pixelate, 0, "Expected effect pixelate of Clone 22 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(22).effects.mosaic, 0, "Expected effect mosaic of Clone 22 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(22).effects.brightness, 0, "Expected effect brightness of Clone 22 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(22).effects.ghost, 0, "Expected effect ghost of Clone 22 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 25, "Expected Sprite Einhorn to be at layer 25");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 23, "Expected Sprite Luftballon to be at layer 23");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).getLayerOrder(), 18, "Expected Clone 1 of Luftballon to be at layer 18");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).getLayerOrder(), 19, "Expected Clone 6 of Luftballon to be at layer 19");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).getLayerOrder(), 20, "Expected Clone 11 of Luftballon to be at layer 20");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).getLayerOrder(), 21, "Expected Clone 16 of Luftballon to be at layer 21");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).getLayerOrder(), 22, "Expected Clone 21 of Luftballon to be at layer 22");
  t.assert.equal(t.getSprite("Luftballon").getClone(22).getLayerOrder(), 5, "Expected Clone 22 of Luftballon to be at layer 5");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).x, -86, 5, "Expected Clone 1 of Luftballon to have x-position -86 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).y, -157, 5, "Expected Clone 1 of Luftballon to have y-position -157 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(6).x, -88, 5, "Expected Clone 6 of Luftballon to have x-position -88 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(6).y, 128, 5, "Expected Clone 6 of Luftballon to have y-position 128 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(11).x, 82, 5, "Expected Clone 11 of Luftballon to have x-position 82 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(11).y, 160, 5, "Expected Clone 11 of Luftballon to have y-position 160 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(16).x, -76, 5, "Expected Clone 16 of Luftballon to have x-position -76 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(16).y, -72, 5, "Expected Clone 16 of Luftballon to have y-position -72 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(21).x, 189, 5, "Expected Clone 21 of Luftballon to have x-position 189 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(21).y, -98, 5, "Expected Clone 21 of Luftballon to have y-position -98 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(22).x, -197, 5, "Expected Clone 22 of Luftballon to have x-position -197 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(22).y, 36, 5, "Expected Clone 22 of Luftballon to have y-position 36 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(1).sayText, "Expected Clone 1 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(6).sayText, "Expected Clone 6 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(11).sayText, "Expected Clone 11 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(16).sayText, "Expected Clone 16 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(21).sayText, "Expected Clone 21 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(22).sayText, "Expected Clone 22 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).size, 50, 1, "Expected Clone 1 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(6).size, 50, 1, "Expected Clone 6 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(11).size, 50, 1, "Expected Clone 11 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(16).size, 50, 1, "Expected Clone 16 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(21).size, 50, 1, "Expected Clone 21 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(22).size, 50, 1, "Expected Clone 22 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.ok(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(1).visible, "Expected Clone 1 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(6).visible, "Expected Clone 6 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(11).visible, "Expected Clone 11 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(16).visible, "Expected Clone 16 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(21).visible, "Expected Clone 21 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(22).visible, "Expected Clone 22 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).volume, 100, "Expected Clone 1 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).volume, 100, "Expected Clone 6 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).volume, 100, "Expected Clone 11 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).volume, 100, "Expected Clone 16 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).volume, 100, "Expected Clone 21 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(22).volume, 100, "Expected Clone 22 of Luftballon to have volume 100");
  await t.runForSteps(60);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).currentCostume, 0, "Expected Clone 3 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).currentCostume, 2, "Expected Clone 10 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).currentCostume, 1, "Expected Clone 17 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(24).currentCostume, 0, "Expected Clone 24 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).direction, 90, 1, "Expected Clone 3 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).direction, 90, 1, "Expected Clone 10 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).direction, 90, 1, "Expected Clone 17 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(24).direction, 90, 1, "Expected Clone 24 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.color, 0, "Expected effect color of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.fisheye, 0, "Expected effect fisheye of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.whirl, 0, "Expected effect whirl of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.pixelate, 0, "Expected effect pixelate of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.mosaic, 0, "Expected effect mosaic of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.brightness, 0, "Expected effect brightness of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.ghost, 0, "Expected effect ghost of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.color, 0, "Expected effect color of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.fisheye, 0, "Expected effect fisheye of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.whirl, 0, "Expected effect whirl of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.pixelate, 0, "Expected effect pixelate of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.mosaic, 0, "Expected effect mosaic of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.brightness, 0, "Expected effect brightness of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.ghost, 0, "Expected effect ghost of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(24).effects.color, 0, "Expected effect color of Clone 24 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(24).effects.fisheye, 0, "Expected effect fisheye of Clone 24 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(24).effects.whirl, 0, "Expected effect whirl of Clone 24 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(24).effects.pixelate, 0, "Expected effect pixelate of Clone 24 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(24).effects.mosaic, 0, "Expected effect mosaic of Clone 24 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(24).effects.brightness, 0, "Expected effect brightness of Clone 24 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(24).effects.ghost, 0, "Expected effect ghost of Clone 24 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).getLayerOrder(), 27, "Expected Clone 3 of Luftballon to be at layer 27");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).getLayerOrder(), 28, "Expected Clone 10 of Luftballon to be at layer 28");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).getLayerOrder(), 29, "Expected Clone 17 of Luftballon to be at layer 29");
  t.assert.equal(t.getSprite("Luftballon").getClone(24).getLayerOrder(), 30, "Expected Clone 24 of Luftballon to be at layer 30");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 18, "Expected Clone 30 of Luftballon to be at layer 18");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(3).x, 84, 5, "Expected Clone 3 of Luftballon to have x-position 84 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(3).y, 121, 5, "Expected Clone 3 of Luftballon to have y-position 121 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(10).x, -128, 5, "Expected Clone 10 of Luftballon to have x-position -128 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(10).y, -79, 5, "Expected Clone 10 of Luftballon to have y-position -79 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(17).x, 6, 5, "Expected Clone 17 of Luftballon to have x-position 6 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(17).y, -85, 5, "Expected Clone 17 of Luftballon to have y-position -85 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(24).x, -200, 5, "Expected Clone 24 of Luftballon to have x-position -200 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(24).y, -86, 5, "Expected Clone 24 of Luftballon to have y-position -86 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, -196, 5, "Expected Clone 30 of Luftballon to have x-position -196 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, -100, 5, "Expected Clone 30 of Luftballon to have y-position -100 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(3).sayText, "Expected Clone 3 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(10).sayText, "Expected Clone 10 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(17).sayText, "Expected Clone 17 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(24).sayText, "Expected Clone 24 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(3).size, 50, 1, "Expected Clone 3 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(10).size, 50, 1, "Expected Clone 10 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(17).size, 50, 1, "Expected Clone 17 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(24).size, 50, 1, "Expected Clone 24 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(3).visible, "Expected Clone 3 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(10).visible, "Expected Clone 10 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(17).visible, "Expected Clone 17 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(24).visible, "Expected Clone 24 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).volume, 100, "Expected Clone 3 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).volume, 100, "Expected Clone 10 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).volume, 100, "Expected Clone 17 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(24).volume, 100, "Expected Clone 24 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  t.end();
}

module.exports = [
  {
      test: test0,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687937730030',
      type: 'standard',
  },
  {
      test: test1,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687937730030',
      type: 'standard',
  },
  {
      test: test2,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687937730030',
      type: 'standard',
  }
]
