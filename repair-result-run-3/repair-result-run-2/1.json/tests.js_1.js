const test0 = async function (t) {
  await t.runForSteps(30);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).currentCostume, 2, "Expected Clone 1 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).currentCostume, 1, "Expected Clone 2 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).currentCostume, 0, "Expected Clone 3 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).currentCostume, 2, "Expected Clone 4 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 4, "Expected Sprite Luftballon to have 4 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).direction, 90, 1, "Expected Clone 1 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).direction, 90, 1, "Expected Clone 2 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).direction, 90, 1, "Expected Clone 3 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).direction, 90, 1, "Expected Clone 4 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 1, "Expected Sprite Einhorn to be at layer 1");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 6, "Expected Sprite Luftballon to be at layer 6");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Luftballon to be at layer 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).getLayerOrder(), 3, "Expected Clone 2 of Luftballon to be at layer 3");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).getLayerOrder(), 4, "Expected Clone 3 of Luftballon to be at layer 4");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).getLayerOrder(), 5, "Expected Clone 4 of Luftballon to be at layer 5");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).x, -135, 5, "Expected Clone 1 of Luftballon to have x-position -135 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).y, -51, 5, "Expected Clone 1 of Luftballon to have y-position -51 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).x, -47, 5, "Expected Clone 2 of Luftballon to have x-position -47 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).y, -142, 5, "Expected Clone 2 of Luftballon to have y-position -142 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(3).x, 81, 5, "Expected Clone 3 of Luftballon to have x-position 81 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(3).y, 60, 5, "Expected Clone 3 of Luftballon to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).x, 46, 5, "Expected Clone 4 of Luftballon to have x-position 46 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).y, -63, 5, "Expected Clone 4 of Luftballon to have y-position -63 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Nicht mehr lange bis Neujahr!", "Expected Sprite Einhorn to say Nicht mehr lange bis Neujahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(1).sayText, "Expected Clone 1 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(2).sayText, "Expected Clone 2 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(3).sayText, "Expected Clone 3 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(4).sayText, "Expected Clone 4 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 100, 1, "Expected Sprite Einhorn to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).size, 50, 1, "Expected Clone 1 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).size, 50, 1, "Expected Clone 2 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(3).size, 50, 1, "Expected Clone 3 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).size, 50, 1, "Expected Clone 4 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.ok(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(1).visible, "Expected Clone 1 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(2).visible, "Expected Clone 2 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(3).visible, "Expected Clone 3 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(4).visible, "Expected Clone 4 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).volume, 100, "Expected Clone 1 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).volume, 100, "Expected Clone 2 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).volume, 100, "Expected Clone 3 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).volume, 100, "Expected Clone 4 of Luftballon to have volume 100");
  await t.runForSteps(79);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).currentCostume, 0, "Expected Clone 1 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).currentCostume, 2, "Expected Clone 4 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).currentCostume, 1, "Expected Clone 8 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).currentCostume, 0, "Expected Clone 12 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).currentCostume, 2, "Expected Clone 15 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 15, "Expected Sprite Luftballon to have 15 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).direction, 90, 1, "Expected Clone 1 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).direction, 90, 1, "Expected Clone 4 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).direction, 90, 1, "Expected Clone 8 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).direction, 90, 1, "Expected Clone 12 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).direction, 90, 1, "Expected Clone 15 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.color, 0, "Expected effect color of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.fisheye, 0, "Expected effect fisheye of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.whirl, 0, "Expected effect whirl of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.pixelate, 0, "Expected effect pixelate of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.mosaic, 0, "Expected effect mosaic of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.brightness, 0, "Expected effect brightness of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.ghost, 0, "Expected effect ghost of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.color, 0, "Expected effect color of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.fisheye, 0, "Expected effect fisheye of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.whirl, 0, "Expected effect whirl of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.pixelate, 0, "Expected effect pixelate of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.mosaic, 0, "Expected effect mosaic of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.brightness, 0, "Expected effect brightness of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.ghost, 0, "Expected effect ghost of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.color, 0, "Expected effect color of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.fisheye, 0, "Expected effect fisheye of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.whirl, 0, "Expected effect whirl of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.pixelate, 0, "Expected effect pixelate of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.mosaic, 0, "Expected effect mosaic of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.brightness, 0, "Expected effect brightness of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.ghost, 0, "Expected effect ghost of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 18, "Expected Sprite Einhorn to be at layer 18");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 16, "Expected Sprite Luftballon to be at layer 16");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).getLayerOrder(), 12, "Expected Clone 1 of Luftballon to be at layer 12");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).getLayerOrder(), 13, "Expected Clone 4 of Luftballon to be at layer 13");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).getLayerOrder(), 14, "Expected Clone 8 of Luftballon to be at layer 14");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).getLayerOrder(), 15, "Expected Clone 12 of Luftballon to be at layer 15");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).getLayerOrder(), 3, "Expected Clone 15 of Luftballon to be at layer 3");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).x, -47, 5, "Expected Clone 1 of Luftballon to have x-position -47 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).y, 11, 5, "Expected Clone 1 of Luftballon to have y-position 11 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).x, -162, 5, "Expected Clone 4 of Luftballon to have x-position -162 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).y, -22, 5, "Expected Clone 4 of Luftballon to have y-position -22 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).x, 148, 5, "Expected Clone 8 of Luftballon to have x-position 148 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).y, -82, 5, "Expected Clone 8 of Luftballon to have y-position -82 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).x, -120, 5, "Expected Clone 12 of Luftballon to have x-position -120 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).y, 123, 5, "Expected Clone 12 of Luftballon to have y-position 123 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(15).x, -22, 5, "Expected Clone 15 of Luftballon to have x-position -22 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(15).y, 31, 5, "Expected Clone 15 of Luftballon to have y-position 31 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(1).sayText, "Expected Clone 1 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(4).sayText, "Expected Clone 4 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(8).sayText, "Expected Clone 8 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(12).sayText, "Expected Clone 12 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(15).sayText, "Expected Clone 15 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).size, 50, 1, "Expected Clone 1 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).size, 50, 1, "Expected Clone 4 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).size, 50, 1, "Expected Clone 8 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).size, 50, 1, "Expected Clone 12 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(15).size, 50, 1, "Expected Clone 15 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.ok(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(1).visible, "Expected Clone 1 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(4).visible, "Expected Clone 4 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(8).visible, "Expected Clone 8 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(12).visible, "Expected Clone 12 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(15).visible, "Expected Clone 15 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).volume, 100, "Expected Clone 1 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).volume, 100, "Expected Clone 4 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).volume, 100, "Expected Clone 8 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).volume, 100, "Expected Clone 12 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).volume, 100, "Expected Clone 15 of Luftballon to have volume 100");
  await t.runForSteps(41);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).currentCostume, 0, "Expected Clone 2 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).currentCostume, 2, "Expected Clone 7 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).currentCostume, 1, "Expected Clone 12 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).currentCostume, 0, "Expected Clone 17 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).currentCostume, 2, "Expected Clone 21 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 21, "Expected Sprite Luftballon to have 21 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).direction, 90, 1, "Expected Clone 2 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).direction, 90, 1, "Expected Clone 7 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).direction, 90, 1, "Expected Clone 12 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).direction, 90, 1, "Expected Clone 17 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).direction, 90, 1, "Expected Clone 21 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.color, 0, "Expected effect color of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.fisheye, 0, "Expected effect fisheye of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.whirl, 0, "Expected effect whirl of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.pixelate, 0, "Expected effect pixelate of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.mosaic, 0, "Expected effect mosaic of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.brightness, 0, "Expected effect brightness of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.ghost, 0, "Expected effect ghost of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.color, 0, "Expected effect color of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.fisheye, 0, "Expected effect fisheye of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.whirl, 0, "Expected effect whirl of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.pixelate, 0, "Expected effect pixelate of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.mosaic, 0, "Expected effect mosaic of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.brightness, 0, "Expected effect brightness of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.ghost, 0, "Expected effect ghost of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.color, 0, "Expected effect color of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.fisheye, 0, "Expected effect fisheye of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.whirl, 0, "Expected effect whirl of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.pixelate, 0, "Expected effect pixelate of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.mosaic, 0, "Expected effect mosaic of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.brightness, 0, "Expected effect brightness of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.ghost, 0, "Expected effect ghost of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.color, 0, "Expected effect color of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.fisheye, 0, "Expected effect fisheye of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.whirl, 0, "Expected effect whirl of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.pixelate, 0, "Expected effect pixelate of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.mosaic, 0, "Expected effect mosaic of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.brightness, 0, "Expected effect brightness of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.ghost, 0, "Expected effect ghost of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 24, "Expected Sprite Einhorn to be at layer 24");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 22, "Expected Sprite Luftballon to be at layer 22");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).getLayerOrder(), 18, "Expected Clone 2 of Luftballon to be at layer 18");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).getLayerOrder(), 19, "Expected Clone 7 of Luftballon to be at layer 19");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).getLayerOrder(), 20, "Expected Clone 12 of Luftballon to be at layer 20");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).getLayerOrder(), 21, "Expected Clone 17 of Luftballon to be at layer 21");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).getLayerOrder(), 9, "Expected Clone 21 of Luftballon to be at layer 9");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).x, 150, 5, "Expected Clone 2 of Luftballon to have x-position 150 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).y, 114, 5, "Expected Clone 2 of Luftballon to have y-position 114 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).x, 212, 5, "Expected Clone 7 of Luftballon to have x-position 212 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).y, 6, 5, "Expected Clone 7 of Luftballon to have y-position 6 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).x, 84, 5, "Expected Clone 12 of Luftballon to have x-position 84 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).y, 24, 5, "Expected Clone 12 of Luftballon to have y-position 24 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(17).x, 67, 5, "Expected Clone 17 of Luftballon to have x-position 67 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(17).y, 134, 5, "Expected Clone 17 of Luftballon to have y-position 134 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(21).x, -218, 5, "Expected Clone 21 of Luftballon to have x-position -218 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(21).y, 177, 5, "Expected Clone 21 of Luftballon to have y-position 177 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(2).sayText, "Expected Clone 2 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(7).sayText, "Expected Clone 7 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(12).sayText, "Expected Clone 12 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(17).sayText, "Expected Clone 17 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(21).sayText, "Expected Clone 21 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).size, 50, 1, "Expected Clone 2 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).size, 50, 1, "Expected Clone 7 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).size, 50, 1, "Expected Clone 12 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(17).size, 50, 1, "Expected Clone 17 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(21).size, 50, 1, "Expected Clone 21 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.ok(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(2).visible, "Expected Clone 2 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(7).visible, "Expected Clone 7 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(12).visible, "Expected Clone 12 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(17).visible, "Expected Clone 17 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(21).visible, "Expected Clone 21 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).volume, 100, "Expected Clone 2 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).volume, 100, "Expected Clone 7 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).volume, 100, "Expected Clone 12 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).volume, 100, "Expected Clone 17 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).volume, 100, "Expected Clone 21 of Luftballon to have volume 100");
  await t.runForSteps(51);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).currentCostume, 2, "Expected Clone 6 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).currentCostume, 1, "Expected Clone 13 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).currentCostume, 0, "Expected Clone 20 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(27).currentCostume, 2, "Expected Clone 27 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(29).currentCostume, 2, "Expected Clone 29 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 29, "Expected Sprite Luftballon to have 29 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).direction, 90, 1, "Expected Clone 6 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).direction, 90, 1, "Expected Clone 13 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).direction, 90, 1, "Expected Clone 20 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(27).direction, 90, 1, "Expected Clone 27 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(29).direction, 90, 1, "Expected Clone 29 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).effects.color, 0, "Expected effect color of Clone 13 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).effects.fisheye, 0, "Expected effect fisheye of Clone 13 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).effects.whirl, 0, "Expected effect whirl of Clone 13 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).effects.pixelate, 0, "Expected effect pixelate of Clone 13 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).effects.mosaic, 0, "Expected effect mosaic of Clone 13 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).effects.brightness, 0, "Expected effect brightness of Clone 13 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).effects.ghost, 0, "Expected effect ghost of Clone 13 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.color, 0, "Expected effect color of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.fisheye, 0, "Expected effect fisheye of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.whirl, 0, "Expected effect whirl of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.pixelate, 0, "Expected effect pixelate of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.mosaic, 0, "Expected effect mosaic of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.brightness, 0, "Expected effect brightness of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.ghost, 0, "Expected effect ghost of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(27).effects.color, 0, "Expected effect color of Clone 27 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(27).effects.fisheye, 0, "Expected effect fisheye of Clone 27 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(27).effects.whirl, 0, "Expected effect whirl of Clone 27 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(27).effects.pixelate, 0, "Expected effect pixelate of Clone 27 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(27).effects.mosaic, 0, "Expected effect mosaic of Clone 27 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(27).effects.brightness, 0, "Expected effect brightness of Clone 27 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(27).effects.ghost, 0, "Expected effect ghost of Clone 27 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(29).effects.color, 0, "Expected effect color of Clone 29 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(29).effects.fisheye, 0, "Expected effect fisheye of Clone 29 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(29).effects.whirl, 0, "Expected effect whirl of Clone 29 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(29).effects.pixelate, 0, "Expected effect pixelate of Clone 29 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(29).effects.mosaic, 0, "Expected effect mosaic of Clone 29 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(29).effects.brightness, 0, "Expected effect brightness of Clone 29 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(29).effects.ghost, 0, "Expected effect ghost of Clone 29 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 32, "Expected Sprite Einhorn to be at layer 32");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 30, "Expected Sprite Luftballon to be at layer 30");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).getLayerOrder(), 26, "Expected Clone 6 of Luftballon to be at layer 26");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).getLayerOrder(), 27, "Expected Clone 13 of Luftballon to be at layer 27");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).getLayerOrder(), 28, "Expected Clone 20 of Luftballon to be at layer 28");
  t.assert.equal(t.getSprite("Luftballon").getClone(27).getLayerOrder(), 29, "Expected Clone 27 of Luftballon to be at layer 29");
  t.assert.equal(t.getSprite("Luftballon").getClone(29).getLayerOrder(), 25, "Expected Clone 29 of Luftballon to be at layer 25");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(6).x, -167, 5, "Expected Clone 6 of Luftballon to have x-position -167 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(6).y, 13, 5, "Expected Clone 6 of Luftballon to have y-position 13 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(13).x, 37, 5, "Expected Clone 13 of Luftballon to have x-position 37 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(13).y, 37, 5, "Expected Clone 13 of Luftballon to have y-position 37 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(20).x, 133, 5, "Expected Clone 20 of Luftballon to have x-position 133 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(20).y, 106, 5, "Expected Clone 20 of Luftballon to have y-position 106 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(27).x, 64, 5, "Expected Clone 27 of Luftballon to have x-position 64 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(27).y, 163, 5, "Expected Clone 27 of Luftballon to have y-position 163 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(29).x, 176, 5, "Expected Clone 29 of Luftballon to have x-position 176 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(29).y, -78, 5, "Expected Clone 29 of Luftballon to have y-position -78 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(6).sayText, "Expected Clone 6 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(13).sayText, "Expected Clone 13 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(20).sayText, "Expected Clone 20 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(27).sayText, "Expected Clone 27 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(29).sayText, "Expected Clone 29 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(6).size, 50, 1, "Expected Clone 6 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(13).size, 50, 1, "Expected Clone 13 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(20).size, 50, 1, "Expected Clone 20 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(27).size, 50, 1, "Expected Clone 27 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(29).size, 50, 1, "Expected Clone 29 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.ok(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(6).visible, "Expected Clone 6 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(13).visible, "Expected Clone 13 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(20).visible, "Expected Clone 20 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(27).visible, "Expected Clone 27 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(29).visible, "Expected Clone 29 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(6).volume, 100, "Expected Clone 6 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).volume, 100, "Expected Clone 13 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).volume, 100, "Expected Clone 20 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(27).volume, 100, "Expected Clone 27 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(29).volume, 100, "Expected Clone 29 of Luftballon to have volume 100");
  await t.runForSteps(16);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).currentCostume, 2, "Expected Clone 4 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).currentCostume, 1, "Expected Clone 11 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(18).currentCostume, 0, "Expected Clone 18 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).direction, 90, 1, "Expected Clone 4 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).direction, 90, 1, "Expected Clone 11 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(18).direction, 90, 1, "Expected Clone 18 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.color, 0, "Expected effect color of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.fisheye, 0, "Expected effect fisheye of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.whirl, 0, "Expected effect whirl of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.pixelate, 0, "Expected effect pixelate of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.mosaic, 0, "Expected effect mosaic of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.brightness, 0, "Expected effect brightness of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.ghost, 0, "Expected effect ghost of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(18).effects.color, 0, "Expected effect color of Clone 18 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(18).effects.fisheye, 0, "Expected effect fisheye of Clone 18 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(18).effects.whirl, 0, "Expected effect whirl of Clone 18 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(18).effects.pixelate, 0, "Expected effect pixelate of Clone 18 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(18).effects.mosaic, 0, "Expected effect mosaic of Clone 18 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(18).effects.brightness, 0, "Expected effect brightness of Clone 18 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(18).effects.ghost, 0, "Expected effect ghost of Clone 18 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).getLayerOrder(), 28, "Expected Clone 4 of Luftballon to be at layer 28");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).getLayerOrder(), 29, "Expected Clone 11 of Luftballon to be at layer 29");
  t.assert.equal(t.getSprite("Luftballon").getClone(18).getLayerOrder(), 30, "Expected Clone 18 of Luftballon to be at layer 30");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 6, "Expected Clone 30 of Luftballon to be at layer 6");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).x, 133, 5, "Expected Clone 4 of Luftballon to have x-position 133 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).y, 106, 5, "Expected Clone 4 of Luftballon to have y-position 106 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(11).x, 64, 5, "Expected Clone 11 of Luftballon to have x-position 64 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(11).y, 163, 5, "Expected Clone 11 of Luftballon to have y-position 163 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(18).x, -26, 5, "Expected Clone 18 of Luftballon to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(18).y, 15, 5, "Expected Clone 18 of Luftballon to have y-position 15 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, -49, 5, "Expected Clone 30 of Luftballon to have x-position -49 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, 6, 5, "Expected Clone 30 of Luftballon to have y-position 6 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(4).sayText, "Expected Clone 4 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(11).sayText, "Expected Clone 11 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(18).sayText, "Expected Clone 18 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).size, 50, 1, "Expected Clone 4 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(11).size, 50, 1, "Expected Clone 11 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(18).size, 50, 1, "Expected Clone 18 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(4).visible, "Expected Clone 4 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(11).visible, "Expected Clone 11 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(18).visible, "Expected Clone 18 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).volume, 100, "Expected Clone 4 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).volume, 100, "Expected Clone 11 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(18).volume, 100, "Expected Clone 18 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(72);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 25, "Expected Clone 30 of Luftballon to be at layer 25");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, 227, 5, "Expected Clone 30 of Luftballon to have x-position 227 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, 126, 5, "Expected Clone 30 of Luftballon to have y-position 126 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(61);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 21, "Expected Clone 30 of Luftballon to be at layer 21");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, 39, 5, "Expected Clone 30 of Luftballon to have x-position 39 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, 20, 5, "Expected Clone 30 of Luftballon to have y-position 20 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(15);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 19, "Expected Clone 30 of Luftballon to be at layer 19");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, 62, 5, "Expected Clone 30 of Luftballon to have x-position 62 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, -66, 5, "Expected Clone 30 of Luftballon to have y-position -66 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(59);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 19, "Expected Clone 30 of Luftballon to be at layer 19");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, -62, 5, "Expected Clone 30 of Luftballon to have x-position -62 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, 86, 5, "Expected Clone 30 of Luftballon to have y-position 86 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(79);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 9, "Expected Clone 30 of Luftballon to be at layer 9");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, 161, 5, "Expected Clone 30 of Luftballon to have x-position 161 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, 108, 5, "Expected Clone 30 of Luftballon to have y-position 108 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(57);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 13, "Expected Clone 30 of Luftballon to be at layer 13");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, -200, 5, "Expected Clone 30 of Luftballon to have x-position -200 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, 5, 5, "Expected Clone 30 of Luftballon to have y-position 5 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(82);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 12, "Expected Clone 30 of Luftballon to be at layer 12");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, -151, 5, "Expected Clone 30 of Luftballon to have x-position -151 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, -136, 5, "Expected Clone 30 of Luftballon to have y-position -136 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(47);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 6, "Expected Clone 30 of Luftballon to be at layer 6");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, -192, 5, "Expected Clone 30 of Luftballon to have x-position -192 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, 88, 5, "Expected Clone 30 of Luftballon to have y-position 88 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(200);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 9, "Expected Clone 30 of Luftballon to be at layer 9");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, -188, 5, "Expected Clone 30 of Luftballon to have x-position -188 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, 172, 5, "Expected Clone 30 of Luftballon to have y-position 172 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(99);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 19, "Expected Clone 30 of Luftballon to be at layer 19");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, 216, 5, "Expected Clone 30 of Luftballon to have x-position 216 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, 93, 5, "Expected Clone 30 of Luftballon to have y-position 93 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(23);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 1, "Expected Clone 30 of Luftballon to be at layer 1");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, -132, 5, "Expected Clone 30 of Luftballon to have x-position -132 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, -162, 5, "Expected Clone 30 of Luftballon to have y-position -162 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(26);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 22, "Expected Clone 30 of Luftballon to be at layer 22");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, -129, 5, "Expected Clone 30 of Luftballon to have x-position -129 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, 113, 5, "Expected Clone 30 of Luftballon to have y-position 113 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(73);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 24, "Expected Clone 30 of Luftballon to be at layer 24");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, 102, 5, "Expected Clone 30 of Luftballon to have x-position 102 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, -136, 5, "Expected Clone 30 of Luftballon to have y-position -136 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(88);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 11, "Expected Clone 30 of Luftballon to be at layer 11");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, 195, 5, "Expected Clone 30 of Luftballon to have x-position 195 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, 126, 5, "Expected Clone 30 of Luftballon to have y-position 126 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(75);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 9, "Expected Clone 30 of Luftballon to be at layer 9");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, 117, 5, "Expected Clone 30 of Luftballon to have x-position 117 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, -14, 5, "Expected Clone 30 of Luftballon to have y-position -14 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(82);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 8, "Expected Clone 30 of Luftballon to be at layer 8");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, -47, 5, "Expected Clone 30 of Luftballon to have x-position -47 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, 179, 5, "Expected Clone 30 of Luftballon to have y-position 179 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 30, "Expected Clone 30 of Luftballon to be at layer 30");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, -115, 5, "Expected Clone 30 of Luftballon to have x-position -115 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, 150, 5, "Expected Clone 30 of Luftballon to have y-position 150 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(45);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 28, "Expected Clone 30 of Luftballon to be at layer 28");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, 16, 5, "Expected Clone 30 of Luftballon to have x-position 16 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, -142, 5, "Expected Clone 30 of Luftballon to have y-position -142 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(66);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 29, "Expected Clone 30 of Luftballon to be at layer 29");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, 29, 5, "Expected Clone 30 of Luftballon to have x-position 29 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, -78, 5, "Expected Clone 30 of Luftballon to have y-position -78 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(26);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 20, "Expected Clone 30 of Luftballon to be at layer 20");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, 52, 5, "Expected Clone 30 of Luftballon to have x-position 52 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, 84, 5, "Expected Clone 30 of Luftballon to have y-position 84 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(78);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 27, "Expected Clone 30 of Luftballon to be at layer 27");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, -61, 5, "Expected Clone 30 of Luftballon to have x-position -61 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, 33, 5, "Expected Clone 30 of Luftballon to have y-position 33 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(46);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 8, "Expected Clone 30 of Luftballon to be at layer 8");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, 26, 5, "Expected Clone 30 of Luftballon to have x-position 26 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, 170, 5, "Expected Clone 30 of Luftballon to have y-position 170 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(58);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 25, "Expected Clone 30 of Luftballon to be at layer 25");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, 27, 5, "Expected Clone 30 of Luftballon to have x-position 27 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, 145, 5, "Expected Clone 30 of Luftballon to have y-position 145 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(53);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 7, "Expected Clone 30 of Luftballon to be at layer 7");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, -182, 5, "Expected Clone 30 of Luftballon to have x-position -182 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, -122, 5, "Expected Clone 30 of Luftballon to have y-position -122 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(22);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 6, "Expected Clone 30 of Luftballon to be at layer 6");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, -32, 5, "Expected Clone 30 of Luftballon to have x-position -32 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, 77, 5, "Expected Clone 30 of Luftballon to have y-position 77 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(18);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 13, "Expected Clone 30 of Luftballon to be at layer 13");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, -215, 5, "Expected Clone 30 of Luftballon to have x-position -215 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, 166, 5, "Expected Clone 30 of Luftballon to have y-position 166 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  await t.runForSteps(50);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 16, "Expected Clone 30 of Luftballon to be at layer 16");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, -183, 5, "Expected Clone 30 of Luftballon to have x-position -183 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, -99, 5, "Expected Clone 30 of Luftballon to have y-position -99 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  t.end();
}

module.exports = [{
  "test": test0,
  "name": "Generated Test",
  "description": "",
  "categories": [],
  "generationAlgorithm": "mio",
  "seed": "1687849298528",
  "type": "standard"
}]