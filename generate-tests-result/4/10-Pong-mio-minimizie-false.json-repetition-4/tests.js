const test0 = async function (t) {
  t.dragSprite('Ball', -195.9185996995392, -23.88905779389978, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 28, 1, "Expected Sprite Ball to face in direction 28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -95.30528437214109, 5, "Expected Sprite Ball to have x-position -95.30528437214109 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 8.829475928589268, 5, "Expected Sprite Ball to have y-position 8.829475928589268 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 0, 5, "Expected Sprite Computer to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 28, 1, "Expected Sprite Ball to face in direction 28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -90.61056874428218, 5, "Expected Sprite Ball to have x-position -90.61056874428218 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 17.658951857178536, 5, "Expected Sprite Ball to have y-position 17.658951857178536 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 4.533333333333333, 5, "Expected Sprite Computer to have y-position 4.533333333333333 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.dragSprite('Aus-Linie Computer', -89.04162763897462, 180, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 28, 1, "Expected Sprite Ball to face in direction 28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -85.91585311642326, 5, "Expected Sprite Ball to have x-position -85.91585311642326 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 26.488427785767804, 5, "Expected Sprite Ball to have y-position 26.488427785767804 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 9.066666666666666, 5, "Expected Sprite Computer to have y-position 9.066666666666666 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.keyPress('up arrow', 2);
  await t.runForSteps(2);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 28, 1, "Expected Sprite Ball to face in direction 28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -71.83170623284653, 5, "Expected Sprite Ball to have x-position -71.83170623284653 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 52.97685557153561, 5, "Expected Sprite Ball to have y-position 52.97685557153561 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -59, 5, "Expected Sprite Spieler to have y-position -59 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 22.666666666666664, 5, "Expected Sprite Computer to have y-position 22.666666666666664 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.keyPress('up arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 28, 1, "Expected Sprite Ball to face in direction 28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -48.35812809355197, 5, "Expected Sprite Ball to have x-position -48.35812809355197 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 97.12423521448193, 5, "Expected Sprite Ball to have y-position 97.12423521448193 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 45.33333333333333, 5, "Expected Sprite Computer to have y-position 45.33333333333333 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.dragSprite('Ball', -210, 1, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -211.2732068387964, 5, "Expected Sprite Ball to have x-position -211.2732068387964 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 27.48842778576781, 5, "Expected Sprite Ball to have y-position 27.48842778576781 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 49.86666666666666, 5, "Expected Sprite Computer to have y-position 49.86666666666666 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -211.5464136775928, 5, "Expected Sprite Ball to have x-position -211.5464136775928 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 53.97685557153563, 5, "Expected Sprite Ball to have y-position 53.97685557153563 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 54.400000000000006, 5, "Expected Sprite Computer to have y-position 54.400000000000006 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -210.8196205163892, 5, "Expected Sprite Ball to have x-position -210.8196205163892 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 80.46528335730343, 5, "Expected Sprite Ball to have y-position 80.46528335730343 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 58.93333333333334, 5, "Expected Sprite Computer to have y-position 58.93333333333334 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.dragSprite('Ball', -143.24246282764142, -2.4932392089495163, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(30);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(86);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(12);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(39);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(44);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(99);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(26);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(37);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(28);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(92);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(32);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(18);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(53);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(27);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(57);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(44);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -147.93717845550032, 5, "Expected Sprite Ball to have x-position -147.93717845550032 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 6.336236719639755, 5, "Expected Sprite Ball to have y-position 6.336236719639755 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, 1, 5, "Expected Sprite Spieler to have y-position 1 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 63.46666666666667, 5, "Expected Sprite Computer to have y-position 63.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.end();
}
const test1 = async function (t) {
  await t.runForSteps(48);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 152, 1, "Expected Sprite Ball to face in direction 152 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 130.0410657650866, 5, "Expected Sprite Ball to have x-position 130.0410657650866 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -134.85514857239366, 5, "Expected Sprite Ball to have y-position -134.85514857239366 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -27.19999999999999, 5, "Expected Sprite Computer to have y-position -27.19999999999999 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.dragSprite('Aus-Linie Computer', 129.04162763897463, 180, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 152, 1, "Expected Sprite Ball to face in direction 152 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 134.7357813929455, 5, "Expected Sprite Ball to have x-position 134.7357813929455 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -143.68462450098292, 5, "Expected Sprite Ball to have y-position -143.68462450098292 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -36.26666666666665, 5, "Expected Sprite Computer to have y-position -36.26666666666665 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 129.04162763897463, 5, "Expected Sprite Aus-Linie Computer to have x-position 129.04162763897463 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.keyPress('down arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 28, 1, "Expected Sprite Ball to face in direction 28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 144.1252126486633, 5, "Expected Sprite Ball to have x-position 144.1252126486633 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -137.19770128320948, 5, "Expected Sprite Ball to have y-position -137.19770128320948 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -104, 5, "Expected Sprite Spieler to have y-position -104 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -54.39999999999998, 5, "Expected Sprite Computer to have y-position -54.39999999999998 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 129.04162763897463, 5, "Expected Sprite Aus-Linie Computer to have x-position 129.04162763897463 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.dragSprite('Aus-Linie Spieler', 144.12186934340514, -180, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 28, 1, "Expected Sprite Ball to face in direction 28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 148.8199282765222, 5, "Expected Sprite Ball to have x-position 148.8199282765222 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -128.36822535462022, 5, "Expected Sprite Ball to have y-position -128.36822535462022 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -104, 5, "Expected Sprite Spieler to have y-position -104 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, 144.12186934340514, 5, "Expected Sprite Aus-Linie Spieler to have x-position 144.12186934340514 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, -180, 5, "Expected Sprite Aus-Linie Spieler to have y-position -180 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -63.46666666666664, 5, "Expected Sprite Computer to have y-position -63.46666666666664 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 129.04162763897463, 5, "Expected Sprite Aus-Linie Computer to have x-position 129.04162763897463 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.dragSprite('Ball', -200.57411332866357, -169.91774038392603, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -205.2688289565225, 5, "Expected Sprite Ball to have x-position -205.2688289565225 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -119.94238938038478, 5, "Expected Sprite Ball to have y-position -119.94238938038478 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -104, 5, "Expected Sprite Spieler to have y-position -104 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, 144.12186934340514, 5, "Expected Sprite Aus-Linie Spieler to have x-position 144.12186934340514 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, -180, 5, "Expected Sprite Aus-Linie Spieler to have y-position -180 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -72.53333333333336, 5, "Expected Sprite Computer to have y-position -72.53333333333336 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 129.04162763897463, 5, "Expected Sprite Aus-Linie Computer to have x-position 129.04162763897463 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.keyPress('up arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -205.2688289565225, 5, "Expected Sprite Ball to have x-position -205.2688289565225 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -66.96553380884916, 5, "Expected Sprite Ball to have y-position -66.96553380884916 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, 144.12186934340514, 5, "Expected Sprite Aus-Linie Spieler to have x-position 144.12186934340514 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, -180, 5, "Expected Sprite Aus-Linie Spieler to have y-position -180 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -90.66666666666669, 5, "Expected Sprite Computer to have y-position -90.66666666666669 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 129.04162763897463, 5, "Expected Sprite Aus-Linie Computer to have x-position 129.04162763897463 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.keyPress('down arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28, 1, "Expected Sprite Ball to face in direction -28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -205.2688289565225, 5, "Expected Sprite Ball to have x-position -205.2688289565225 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -13.988678237313536, 5, "Expected Sprite Ball to have y-position -13.988678237313536 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -104, 5, "Expected Sprite Spieler to have y-position -104 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, 144.12186934340514, 5, "Expected Sprite Aus-Linie Spieler to have x-position 144.12186934340514 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, -180, 5, "Expected Sprite Aus-Linie Spieler to have y-position -180 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -108.80000000000001, 5, "Expected Sprite Computer to have y-position -108.80000000000001 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 129.04162763897463, 5, "Expected Sprite Aus-Linie Computer to have x-position 129.04162763897463 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.keyPress('up arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 27.99999999999997, 1, "Expected Sprite Ball to face in direction 27.99999999999997 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -201.84732016746, 5, "Expected Sprite Ball to have x-position -201.84732016746 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 3.670273619865007, 5, "Expected Sprite Ball to have y-position 3.670273619865007 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, 144.12186934340514, 5, "Expected Sprite Aus-Linie Spieler to have x-position 144.12186934340514 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, -180, 5, "Expected Sprite Aus-Linie Spieler to have y-position -180 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -126.93333333333334, 5, "Expected Sprite Computer to have y-position -126.93333333333334 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 129.04162763897463, 5, "Expected Sprite Aus-Linie Computer to have x-position 129.04162763897463 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.dragSprite('Aus-Linie Spieler', -200.00745384835867, -55.2535452178715, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 27.99999999999997, 1, "Expected Sprite Ball to face in direction 27.99999999999997 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -197.1526045396011, 5, "Expected Sprite Ball to have x-position -197.1526045396011 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 12.499749548454279, 5, "Expected Sprite Ball to have y-position 12.499749548454279 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -62, 5, "Expected Sprite Aus-Linie Spieler to have x-position -62 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, -55.2535452178715, 5, "Expected Sprite Aus-Linie Spieler to have y-position -55.2535452178715 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -136, 5, "Expected Sprite Computer to have y-position -136 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 129.04162763897463, 5, "Expected Sprite Aus-Linie Computer to have x-position 129.04162763897463 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.keyPress('up arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 27.99999999999997, 1, "Expected Sprite Ball to face in direction 27.99999999999997 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -187.7631732838833, 5, "Expected Sprite Ball to have x-position -187.7631732838833 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 30.158701405632822, 5, "Expected Sprite Ball to have y-position 30.158701405632822 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -74, 5, "Expected Sprite Spieler to have y-position -74 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -62, 5, "Expected Sprite Aus-Linie Spieler to have x-position -62 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, -55.2535452178715, 5, "Expected Sprite Aus-Linie Spieler to have y-position -55.2535452178715 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -126.93333333333334, 5, "Expected Sprite Computer to have y-position -126.93333333333334 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 129.04162763897463, 5, "Expected Sprite Aus-Linie Computer to have x-position 129.04162763897463 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.dragSprite('Ball', 207, -126, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 28, 1, "Expected Sprite Ball to face in direction 28 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 210.44740117473393, 5, "Expected Sprite Ball to have x-position 210.44740117473393 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -99.51157221423219, 5, "Expected Sprite Ball to have y-position -99.51157221423219 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -74, 5, "Expected Sprite Spieler to have y-position -74 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -62, 5, "Expected Sprite Aus-Linie Spieler to have x-position -62 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, -55.2535452178715, 5, "Expected Sprite Aus-Linie Spieler to have y-position -55.2535452178715 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -117.86666666666667, 5, "Expected Sprite Computer to have y-position -117.86666666666667 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 129.04162763897463, 5, "Expected Sprite Aus-Linie Computer to have x-position 129.04162763897463 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.keyPress('up arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28.000000000000014, 1, "Expected Sprite Ball to face in direction -28.000000000000014 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 200.8475746179518, 5, "Expected Sprite Ball to have x-position 200.8475746179518 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -11.216812928339507, 5, "Expected Sprite Ball to have y-position -11.216812928339507 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -29, 5, "Expected Sprite Spieler to have y-position -29 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -62, 5, "Expected Sprite Aus-Linie Spieler to have x-position -62 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, -55.2535452178715, 5, "Expected Sprite Aus-Linie Spieler to have y-position -55.2535452178715 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -81.6, 5, "Expected Sprite Computer to have y-position -81.6 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 129.04162763897463, 5, "Expected Sprite Aus-Linie Computer to have x-position 129.04162763897463 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.dragSprite('Aus-Linie Computer', 201.14756278874512, 156.70440269098071, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -28.000000000000014, 1, "Expected Sprite Ball to face in direction -28.000000000000014 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 196.1528589900929, 5, "Expected Sprite Ball to have x-position 196.1528589900929 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -2.3873369997502394, 5, "Expected Sprite Ball to have y-position -2.3873369997502394 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -29, 5, "Expected Sprite Spieler to have y-position -29 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -62, 5, "Expected Sprite Aus-Linie Spieler to have x-position -62 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, -55.2535452178715, 5, "Expected Sprite Aus-Linie Spieler to have y-position -55.2535452178715 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -72.53333333333333, 5, "Expected Sprite Computer to have y-position -72.53333333333333 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 201.14756278874512, 5, "Expected Sprite Aus-Linie Computer to have x-position 201.14756278874512 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 156.70440269098071, 5, "Expected Sprite Aus-Linie Computer to have y-position 156.70440269098071 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(73);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -152, 1, "Expected Sprite Ball to face in direction -152 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 8.364233875736694, 5, "Expected Sprite Ball to have x-position 8.364233875736694 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -56.851115789059385, 5, "Expected Sprite Ball to have y-position -56.851115789059385 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -29, 5, "Expected Sprite Spieler to have y-position -29 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -62, 5, "Expected Sprite Aus-Linie Spieler to have x-position -62 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, -55.2535452178715, 5, "Expected Sprite Aus-Linie Spieler to have y-position -55.2535452178715 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -18.133333333333326, 5, "Expected Sprite Computer to have y-position -18.133333333333326 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 201.14756278874512, 5, "Expected Sprite Aus-Linie Computer to have x-position 201.14756278874512 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 156.70440269098071, 5, "Expected Sprite Aus-Linie Computer to have y-position 156.70440269098071 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(65);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -152, 1, "Expected Sprite Ball to face in direction -152 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 8.364233875736694, 5, "Expected Sprite Ball to have x-position 8.364233875736694 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -56.851115789059385, 5, "Expected Sprite Ball to have y-position -56.851115789059385 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -29, 5, "Expected Sprite Spieler to have y-position -29 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -62, 5, "Expected Sprite Aus-Linie Spieler to have x-position -62 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, -55.2535452178715, 5, "Expected Sprite Aus-Linie Spieler to have y-position -55.2535452178715 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -18.133333333333326, 5, "Expected Sprite Computer to have y-position -18.133333333333326 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 201.14756278874512, 5, "Expected Sprite Aus-Linie Computer to have x-position 201.14756278874512 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 156.70440269098071, 5, "Expected Sprite Aus-Linie Computer to have y-position 156.70440269098071 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -152, 1, "Expected Sprite Ball to face in direction -152 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 8.364233875736694, 5, "Expected Sprite Ball to have x-position 8.364233875736694 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -56.851115789059385, 5, "Expected Sprite Ball to have y-position -56.851115789059385 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -29, 5, "Expected Sprite Spieler to have y-position -29 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -62, 5, "Expected Sprite Aus-Linie Spieler to have x-position -62 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, -55.2535452178715, 5, "Expected Sprite Aus-Linie Spieler to have y-position -55.2535452178715 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -18.133333333333326, 5, "Expected Sprite Computer to have y-position -18.133333333333326 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 201.14756278874512, 5, "Expected Sprite Aus-Linie Computer to have x-position 201.14756278874512 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 156.70440269098071, 5, "Expected Sprite Aus-Linie Computer to have y-position 156.70440269098071 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -152, 1, "Expected Sprite Ball to face in direction -152 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 8.364233875736694, 5, "Expected Sprite Ball to have x-position 8.364233875736694 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -56.851115789059385, 5, "Expected Sprite Ball to have y-position -56.851115789059385 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -29, 5, "Expected Sprite Spieler to have y-position -29 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -62, 5, "Expected Sprite Aus-Linie Spieler to have x-position -62 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, -55.2535452178715, 5, "Expected Sprite Aus-Linie Spieler to have y-position -55.2535452178715 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -18.133333333333326, 5, "Expected Sprite Computer to have y-position -18.133333333333326 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 201.14756278874512, 5, "Expected Sprite Aus-Linie Computer to have x-position 201.14756278874512 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 156.70440269098071, 5, "Expected Sprite Aus-Linie Computer to have y-position 156.70440269098071 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -152, 1, "Expected Sprite Ball to face in direction -152 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 8.364233875736694, 5, "Expected Sprite Ball to have x-position 8.364233875736694 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -56.851115789059385, 5, "Expected Sprite Ball to have y-position -56.851115789059385 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -29, 5, "Expected Sprite Spieler to have y-position -29 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -62, 5, "Expected Sprite Aus-Linie Spieler to have x-position -62 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, -55.2535452178715, 5, "Expected Sprite Aus-Linie Spieler to have y-position -55.2535452178715 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -18.133333333333326, 5, "Expected Sprite Computer to have y-position -18.133333333333326 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 201.14756278874512, 5, "Expected Sprite Aus-Linie Computer to have x-position 201.14756278874512 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 156.70440269098071, 5, "Expected Sprite Aus-Linie Computer to have y-position 156.70440269098071 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -152, 1, "Expected Sprite Ball to face in direction -152 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 8.364233875736694, 5, "Expected Sprite Ball to have x-position 8.364233875736694 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -56.851115789059385, 5, "Expected Sprite Ball to have y-position -56.851115789059385 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -29, 5, "Expected Sprite Spieler to have y-position -29 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -62, 5, "Expected Sprite Aus-Linie Spieler to have x-position -62 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, -55.2535452178715, 5, "Expected Sprite Aus-Linie Spieler to have y-position -55.2535452178715 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -18.133333333333326, 5, "Expected Sprite Computer to have y-position -18.133333333333326 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 201.14756278874512, 5, "Expected Sprite Aus-Linie Computer to have x-position 201.14756278874512 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 156.70440269098071, 5, "Expected Sprite Aus-Linie Computer to have y-position 156.70440269098071 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -152, 1, "Expected Sprite Ball to face in direction -152 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 8.364233875736694, 5, "Expected Sprite Ball to have x-position 8.364233875736694 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -56.851115789059385, 5, "Expected Sprite Ball to have y-position -56.851115789059385 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -29, 5, "Expected Sprite Spieler to have y-position -29 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -62, 5, "Expected Sprite Aus-Linie Spieler to have x-position -62 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, -55.2535452178715, 5, "Expected Sprite Aus-Linie Spieler to have y-position -55.2535452178715 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -18.133333333333326, 5, "Expected Sprite Computer to have y-position -18.133333333333326 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 201.14756278874512, 5, "Expected Sprite Aus-Linie Computer to have x-position 201.14756278874512 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 156.70440269098071, 5, "Expected Sprite Aus-Linie Computer to have y-position 156.70440269098071 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(66);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -152, 1, "Expected Sprite Ball to face in direction -152 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 8.364233875736694, 5, "Expected Sprite Ball to have x-position 8.364233875736694 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -56.851115789059385, 5, "Expected Sprite Ball to have y-position -56.851115789059385 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -29, 5, "Expected Sprite Spieler to have y-position -29 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -62, 5, "Expected Sprite Aus-Linie Spieler to have x-position -62 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, -55.2535452178715, 5, "Expected Sprite Aus-Linie Spieler to have y-position -55.2535452178715 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -18.133333333333326, 5, "Expected Sprite Computer to have y-position -18.133333333333326 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 201.14756278874512, 5, "Expected Sprite Aus-Linie Computer to have x-position 201.14756278874512 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 156.70440269098071, 5, "Expected Sprite Aus-Linie Computer to have y-position 156.70440269098071 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(97);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -152, 1, "Expected Sprite Ball to face in direction -152 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 8.364233875736694, 5, "Expected Sprite Ball to have x-position 8.364233875736694 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -56.851115789059385, 5, "Expected Sprite Ball to have y-position -56.851115789059385 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -29, 5, "Expected Sprite Spieler to have y-position -29 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -62, 5, "Expected Sprite Aus-Linie Spieler to have x-position -62 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, -55.2535452178715, 5, "Expected Sprite Aus-Linie Spieler to have y-position -55.2535452178715 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -18.133333333333326, 5, "Expected Sprite Computer to have y-position -18.133333333333326 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 201.14756278874512, 5, "Expected Sprite Aus-Linie Computer to have x-position 201.14756278874512 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 156.70440269098071, 5, "Expected Sprite Aus-Linie Computer to have y-position 156.70440269098071 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(29);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -152, 1, "Expected Sprite Ball to face in direction -152 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 8.364233875736694, 5, "Expected Sprite Ball to have x-position 8.364233875736694 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -56.851115789059385, 5, "Expected Sprite Ball to have y-position -56.851115789059385 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -29, 5, "Expected Sprite Spieler to have y-position -29 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -62, 5, "Expected Sprite Aus-Linie Spieler to have x-position -62 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, -55.2535452178715, 5, "Expected Sprite Aus-Linie Spieler to have y-position -55.2535452178715 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -18.133333333333326, 5, "Expected Sprite Computer to have y-position -18.133333333333326 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 201.14756278874512, 5, "Expected Sprite Aus-Linie Computer to have x-position 201.14756278874512 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 156.70440269098071, 5, "Expected Sprite Aus-Linie Computer to have y-position 156.70440269098071 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(9);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -152, 1, "Expected Sprite Ball to face in direction -152 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 8.364233875736694, 5, "Expected Sprite Ball to have x-position 8.364233875736694 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -56.851115789059385, 5, "Expected Sprite Ball to have y-position -56.851115789059385 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -29, 5, "Expected Sprite Spieler to have y-position -29 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -62, 5, "Expected Sprite Aus-Linie Spieler to have x-position -62 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, -55.2535452178715, 5, "Expected Sprite Aus-Linie Spieler to have y-position -55.2535452178715 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -18.133333333333326, 5, "Expected Sprite Computer to have y-position -18.133333333333326 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 201.14756278874512, 5, "Expected Sprite Aus-Linie Computer to have x-position 201.14756278874512 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 156.70440269098071, 5, "Expected Sprite Aus-Linie Computer to have y-position 156.70440269098071 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.end();
}

module.exports = [
  {
      test: test0,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687937430166',
      type: 'standard',
  },
  {
      test: test1,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687937430166',
      type: 'standard',
  }
]
