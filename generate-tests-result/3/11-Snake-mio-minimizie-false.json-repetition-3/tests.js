const test0 = async function (t) {
  t.dragSprite('Punkt', 80.79839438907021, 95.29771798166021, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 3, 5, "Expected Sprite Kopf to have x-position 3 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 100, 5, "Expected Sprite Kopf to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 75, 5, "Expected Sprite Körper to have x-position 75 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 100, 5, "Expected Sprite Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 75, 5, "Expected Clone 1 of Körper to have x-position 75 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 100, 5, "Expected Clone 1 of Körper to have y-position 100 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('left arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 3, 5, "Expected Sprite Kopf to have x-position 3 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 100, 5, "Expected Sprite Kopf to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 6, 5, "Expected Sprite Körper to have x-position 6 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 100, 5, "Expected Sprite Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 6, 5, "Expected Clone 1 of Körper to have x-position 6 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 100, 5, "Expected Clone 1 of Körper to have y-position 100 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('left arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, -9, 5, "Expected Sprite Kopf to have x-position -9 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 100, 5, "Expected Sprite Kopf to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -6, 5, "Expected Sprite Körper to have x-position -6 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 100, 5, "Expected Sprite Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, -6, 5, "Expected Clone 1 of Körper to have x-position -6 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 100, 5, "Expected Clone 1 of Körper to have y-position 100 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.dragSprite('Punkt', -16.035527797607394, 101.52647196301236, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, -12, 5, "Expected Sprite Kopf to have x-position -12 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 100, 5, "Expected Sprite Kopf to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -9, 5, "Expected Sprite Körper to have x-position -9 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 100, 5, "Expected Sprite Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 225, 5, "Expected Sprite Punkt to have x-position 225 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 23, 5, "Expected Sprite Punkt to have y-position 23 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, -9, 5, "Expected Clone 1 of Körper to have x-position -9 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 100, 5, "Expected Clone 1 of Körper to have y-position 100 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('left arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).currentCostume, 0, "Expected Clone 2 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).currentCostume, 0, "Expected Clone 3 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).currentCostume, 0, "Expected Clone 4 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).currentCostume, 0, "Expected Clone 5 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 5, "Expected Sprite Körper to have 5 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(2).direction, 90, 1, "Expected Clone 2 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(3).direction, 90, 1, "Expected Clone 3 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(4).direction, 90, 1, "Expected Clone 4 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(5).direction, 90, 1, "Expected Clone 5 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 7, "Expected Sprite Körper to be at layer 7");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 9, "Expected Sprite Punkt to be at layer 9");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 8, "Expected Sprite Goodie to be at layer 8");
  t.assert.equal(t.getSprite("Körper").getClone(2).getLayerOrder(), 3, "Expected Clone 2 of Körper to be at layer 3");
  t.assert.equal(t.getSprite("Körper").getClone(3).getLayerOrder(), 4, "Expected Clone 3 of Körper to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(4).getLayerOrder(), 5, "Expected Clone 4 of Körper to be at layer 5");
  t.assert.equal(t.getSprite("Körper").getClone(5).getLayerOrder(), 6, "Expected Clone 5 of Körper to be at layer 6");
  t.assert.withinRange(t.getSprite("Kopf").x, -24, 5, "Expected Sprite Kopf to have x-position -24 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 100, 5, "Expected Sprite Kopf to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -21, 5, "Expected Sprite Körper to have x-position -21 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 100, 5, "Expected Sprite Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 225, 5, "Expected Sprite Punkt to have x-position 225 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 23, 5, "Expected Sprite Punkt to have y-position 23 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).x, -12, 5, "Expected Clone 2 of Körper to have x-position -12 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).y, 100, 5, "Expected Clone 2 of Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).x, -15, 5, "Expected Clone 3 of Körper to have x-position -15 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).y, 100, 5, "Expected Clone 3 of Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).x, -18, 5, "Expected Clone 4 of Körper to have x-position -18 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).y, 100, 5, "Expected Clone 4 of Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).x, -21, 5, "Expected Clone 5 of Körper to have x-position -21 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).y, 100, 5, "Expected Clone 5 of Körper to have y-position 100 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(2).sayText, "Expected Clone 2 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(3).sayText, "Expected Clone 3 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(4).sayText, "Expected Clone 4 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(5).sayText, "Expected Clone 5 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).size, 90, 1, "Expected Clone 2 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).size, 90, 1, "Expected Clone 3 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).size, 90, 1, "Expected Clone 4 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).size, 90, 1, "Expected Clone 5 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(2).visible, "Expected Clone 2 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(3).visible, "Expected Clone 3 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(4).visible, "Expected Clone 4 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(5).visible, "Expected Clone 5 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(2).volume, 100, "Expected Clone 2 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(3).volume, 100, "Expected Clone 3 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(4).volume, 100, "Expected Clone 4 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(5).volume, 100, "Expected Clone 5 of Körper to have volume 100");
  t.keyPress('down arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).currentCostume, 0, "Expected Clone 2 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).currentCostume, 0, "Expected Clone 3 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).currentCostume, 0, "Expected Clone 4 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).currentCostume, 0, "Expected Clone 5 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(2).direction, 90, 1, "Expected Clone 2 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(3).direction, 90, 1, "Expected Clone 3 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(4).direction, 90, 1, "Expected Clone 4 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(5).direction, 90, 1, "Expected Clone 5 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.equal(t.getSprite("Körper").getClone(2).getLayerOrder(), 3, "Expected Clone 2 of Körper to be at layer 3");
  t.assert.equal(t.getSprite("Körper").getClone(3).getLayerOrder(), 4, "Expected Clone 3 of Körper to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(4).getLayerOrder(), 5, "Expected Clone 4 of Körper to be at layer 5");
  t.assert.equal(t.getSprite("Körper").getClone(5).getLayerOrder(), 6, "Expected Clone 5 of Körper to be at layer 6");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, -27, 5, "Expected Sprite Kopf to have x-position -27 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 97, 5, "Expected Sprite Kopf to have y-position 97 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -27, 5, "Expected Sprite Körper to have x-position -27 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 100, 5, "Expected Sprite Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 225, 5, "Expected Sprite Punkt to have x-position 225 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 23, 5, "Expected Sprite Punkt to have y-position 23 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, -12, 5, "Expected Clone 1 of Körper to have x-position -12 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 100, 5, "Expected Clone 1 of Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).x, -15, 5, "Expected Clone 2 of Körper to have x-position -15 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).y, 100, 5, "Expected Clone 2 of Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).x, -18, 5, "Expected Clone 3 of Körper to have x-position -18 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).y, 100, 5, "Expected Clone 3 of Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).x, -21, 5, "Expected Clone 4 of Körper to have x-position -21 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).y, 100, 5, "Expected Clone 4 of Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).x, -24, 5, "Expected Clone 5 of Körper to have x-position -24 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).y, 100, 5, "Expected Clone 5 of Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, -27, 5, "Expected Clone 6 of Körper to have x-position -27 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 100, 5, "Expected Clone 6 of Körper to have y-position 100 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(2).sayText, "Expected Clone 2 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(3).sayText, "Expected Clone 3 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(4).sayText, "Expected Clone 4 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(5).sayText, "Expected Clone 5 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).size, 90, 1, "Expected Clone 2 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).size, 90, 1, "Expected Clone 3 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).size, 90, 1, "Expected Clone 4 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).size, 90, 1, "Expected Clone 5 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(2).visible, "Expected Clone 2 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(3).visible, "Expected Clone 3 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(4).visible, "Expected Clone 4 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(5).visible, "Expected Clone 5 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(2).volume, 100, "Expected Clone 2 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(3).volume, 100, "Expected Clone 3 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(4).volume, 100, "Expected Clone 4 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(5).volume, 100, "Expected Clone 5 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.dragSprite('Kopf', -33.85301933988658, 104.74515870696573, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).currentCostume, 0, "Expected Clone 2 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).currentCostume, 0, "Expected Clone 3 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).currentCostume, 0, "Expected Clone 4 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(2).direction, 90, 1, "Expected Clone 2 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(3).direction, 90, 1, "Expected Clone 3 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(4).direction, 90, 1, "Expected Clone 4 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.equal(t.getSprite("Körper").getClone(2).getLayerOrder(), 3, "Expected Clone 2 of Körper to be at layer 3");
  t.assert.equal(t.getSprite("Körper").getClone(3).getLayerOrder(), 4, "Expected Clone 3 of Körper to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(4).getLayerOrder(), 5, "Expected Clone 4 of Körper to be at layer 5");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, -33.85301933988658, 5, "Expected Sprite Kopf to have x-position -33.85301933988658 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 101.74515870696573, 5, "Expected Sprite Kopf to have y-position 101.74515870696573 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -33.85301933988658, 5, "Expected Sprite Körper to have x-position -33.85301933988658 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 104.74515870696573, 5, "Expected Sprite Körper to have y-position 104.74515870696573 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 225, 5, "Expected Sprite Punkt to have x-position 225 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 23, 5, "Expected Sprite Punkt to have y-position 23 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, -15, 5, "Expected Clone 1 of Körper to have x-position -15 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 100, 5, "Expected Clone 1 of Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).x, -18, 5, "Expected Clone 2 of Körper to have x-position -18 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).y, 100, 5, "Expected Clone 2 of Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).x, -21, 5, "Expected Clone 3 of Körper to have x-position -21 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).y, 100, 5, "Expected Clone 3 of Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).x, -24, 5, "Expected Clone 4 of Körper to have x-position -24 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).y, 100, 5, "Expected Clone 4 of Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, -33.85301933988658, 5, "Expected Clone 6 of Körper to have x-position -33.85301933988658 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 104.74515870696573, 5, "Expected Clone 6 of Körper to have y-position 104.74515870696573 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(2).sayText, "Expected Clone 2 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(3).sayText, "Expected Clone 3 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(4).sayText, "Expected Clone 4 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).size, 90, 1, "Expected Clone 2 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).size, 90, 1, "Expected Clone 3 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).size, 90, 1, "Expected Clone 4 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(2).visible, "Expected Clone 2 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(3).visible, "Expected Clone 3 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(4).visible, "Expected Clone 4 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(2).volume, 100, "Expected Clone 2 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(3).volume, 100, "Expected Clone 3 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(4).volume, 100, "Expected Clone 4 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  await t.runForSteps(0);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).currentCostume, 0, "Expected Clone 2 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).currentCostume, 0, "Expected Clone 3 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(2).direction, 90, 1, "Expected Clone 2 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(3).direction, 90, 1, "Expected Clone 3 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.equal(t.getSprite("Körper").getClone(2).getLayerOrder(), 3, "Expected Clone 2 of Körper to be at layer 3");
  t.assert.equal(t.getSprite("Körper").getClone(3).getLayerOrder(), 4, "Expected Clone 3 of Körper to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, -33.85301933988658, 5, "Expected Sprite Kopf to have x-position -33.85301933988658 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 98.74515870696573, 5, "Expected Sprite Kopf to have y-position 98.74515870696573 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -33.85301933988658, 5, "Expected Sprite Körper to have x-position -33.85301933988658 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 101.74515870696573, 5, "Expected Sprite Körper to have y-position 101.74515870696573 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 225, 5, "Expected Sprite Punkt to have x-position 225 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 23, 5, "Expected Sprite Punkt to have y-position 23 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, -18, 5, "Expected Clone 1 of Körper to have x-position -18 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 100, 5, "Expected Clone 1 of Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).x, -21, 5, "Expected Clone 2 of Körper to have x-position -21 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).y, 100, 5, "Expected Clone 2 of Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).x, -24, 5, "Expected Clone 3 of Körper to have x-position -24 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).y, 100, 5, "Expected Clone 3 of Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, -33.85301933988658, 5, "Expected Clone 6 of Körper to have x-position -33.85301933988658 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 101.74515870696573, 5, "Expected Clone 6 of Körper to have y-position 101.74515870696573 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(2).sayText, "Expected Clone 2 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(3).sayText, "Expected Clone 3 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).size, 90, 1, "Expected Clone 2 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).size, 90, 1, "Expected Clone 3 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(2).visible, "Expected Clone 2 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(3).visible, "Expected Clone 3 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(2).volume, 100, "Expected Clone 2 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(3).volume, 100, "Expected Clone 3 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  await t.runForSteps(15);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, -33.85301933988658, 5, "Expected Sprite Kopf to have x-position -33.85301933988658 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 50.745158706965725, 5, "Expected Sprite Kopf to have y-position 50.745158706965725 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -33.85301933988658, 5, "Expected Sprite Körper to have x-position -33.85301933988658 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 53.745158706965725, 5, "Expected Sprite Körper to have y-position 53.745158706965725 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 225, 5, "Expected Sprite Punkt to have x-position 225 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 23, 5, "Expected Sprite Punkt to have y-position 23 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, -33.85301933988658, 5, "Expected Clone 6 of Körper to have x-position -33.85301933988658 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 53.745158706965725, 5, "Expected Clone 6 of Körper to have y-position 53.745158706965725 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.keyPress('up arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, -33.85301933988658, 5, "Expected Sprite Kopf to have x-position -33.85301933988658 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 50.745158706965725, 5, "Expected Sprite Kopf to have y-position 50.745158706965725 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -33.85301933988658, 5, "Expected Sprite Körper to have x-position -33.85301933988658 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 47.745158706965725, 5, "Expected Sprite Körper to have y-position 47.745158706965725 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 225, 5, "Expected Sprite Punkt to have x-position 225 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 23, 5, "Expected Sprite Punkt to have y-position 23 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, -33.85301933988658, 5, "Expected Clone 6 of Körper to have x-position -33.85301933988658 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 47.745158706965725, 5, "Expected Clone 6 of Körper to have y-position 47.745158706965725 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.keyPress('right arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, -30.85301933988658, 5, "Expected Sprite Kopf to have x-position -30.85301933988658 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 53.745158706965725, 5, "Expected Sprite Kopf to have y-position 53.745158706965725 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -33.85301933988658, 5, "Expected Sprite Körper to have x-position -33.85301933988658 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 53.745158706965725, 5, "Expected Sprite Körper to have y-position 53.745158706965725 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 225, 5, "Expected Sprite Punkt to have x-position 225 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 23, 5, "Expected Sprite Punkt to have y-position 23 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, -33.85301933988658, 5, "Expected Clone 6 of Körper to have x-position -33.85301933988658 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 53.745158706965725, 5, "Expected Clone 6 of Körper to have y-position 53.745158706965725 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.dragSprite('Kopf', 220.36909209473478, -180, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, 223.36909209473478, 5, "Expected Sprite Kopf to have x-position 223.36909209473478 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -180, 5, "Expected Sprite Kopf to have y-position -180 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 220.36909209473478, 5, "Expected Sprite Körper to have x-position 220.36909209473478 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -180, 5, "Expected Sprite Körper to have y-position -180 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 225, 5, "Expected Sprite Punkt to have x-position 225 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 23, 5, "Expected Sprite Punkt to have y-position 23 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, 220.36909209473478, 5, "Expected Clone 6 of Körper to have x-position 220.36909209473478 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, -180, 5, "Expected Clone 6 of Körper to have y-position -180 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.dragSprite('Punkt', 228.1556563967448, -180, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, 226.36909209473478, 5, "Expected Sprite Kopf to have x-position 226.36909209473478 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -180, 5, "Expected Sprite Kopf to have y-position -180 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 223.36909209473478, 5, "Expected Sprite Körper to have x-position 223.36909209473478 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -180, 5, "Expected Sprite Körper to have y-position -180 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -149, 5, "Expected Sprite Punkt to have x-position -149 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 39, 5, "Expected Sprite Punkt to have y-position 39 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, 223.36909209473478, 5, "Expected Clone 6 of Körper to have x-position 223.36909209473478 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, -180, 5, "Expected Clone 6 of Körper to have y-position -180 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.keyPress('right arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, 232.36909209473478, 5, "Expected Sprite Kopf to have x-position 232.36909209473478 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -180, 5, "Expected Sprite Kopf to have y-position -180 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 229.36909209473478, 5, "Expected Sprite Körper to have x-position 229.36909209473478 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -180, 5, "Expected Sprite Körper to have y-position -180 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -149, 5, "Expected Sprite Punkt to have x-position -149 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 39, 5, "Expected Sprite Punkt to have y-position 39 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, 229.36909209473478, 5, "Expected Clone 6 of Körper to have x-position 229.36909209473478 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, -180, 5, "Expected Clone 6 of Körper to have y-position -180 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.dragSprite('Punkt', 227.20420323009003, -174.05484139618085, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, 233, 5, "Expected Sprite Kopf to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -180, 5, "Expected Sprite Kopf to have y-position -180 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 232.36909209473478, 5, "Expected Sprite Körper to have x-position 232.36909209473478 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -180, 5, "Expected Sprite Körper to have y-position -180 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 227.20420323009003, 5, "Expected Sprite Punkt to have x-position 227.20420323009003 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -174.05484139618085, 5, "Expected Sprite Punkt to have y-position -174.05484139618085 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, 232.36909209473478, 5, "Expected Clone 6 of Körper to have x-position 232.36909209473478 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, -180, 5, "Expected Clone 6 of Körper to have y-position -180 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.dragSprite('Punkt', 236.90354005641035, -180, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, 233, 5, "Expected Sprite Kopf to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -180, 5, "Expected Sprite Kopf to have y-position -180 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 233, 5, "Expected Sprite Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -180, 5, "Expected Sprite Körper to have y-position -180 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -163, 5, "Expected Sprite Punkt to have x-position -163 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -105, 5, "Expected Sprite Punkt to have y-position -105 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, 233, 5, "Expected Clone 6 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, -180, 5, "Expected Clone 6 of Körper to have y-position -180 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.keyPress('down arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).currentCostume, 0, "Expected Clone 7 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).currentCostume, 0, "Expected Clone 8 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).currentCostume, 0, "Expected Clone 9 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).currentCostume, 0, "Expected Clone 10 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 10, "Expected Sprite Körper to have 10 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(7).direction, 90, 1, "Expected Clone 7 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(8).direction, 90, 1, "Expected Clone 8 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(9).direction, 90, 1, "Expected Clone 9 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(10).direction, 90, 1, "Expected Clone 10 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.color, 0, "Expected effect color of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.fisheye, 0, "Expected effect fisheye of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.whirl, 0, "Expected effect whirl of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.pixelate, 0, "Expected effect pixelate of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.mosaic, 0, "Expected effect mosaic of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.brightness, 0, "Expected effect brightness of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.ghost, 0, "Expected effect ghost of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.color, 0, "Expected effect color of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.fisheye, 0, "Expected effect fisheye of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.whirl, 0, "Expected effect whirl of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.pixelate, 0, "Expected effect pixelate of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.mosaic, 0, "Expected effect mosaic of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.brightness, 0, "Expected effect brightness of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.ghost, 0, "Expected effect ghost of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.color, 0, "Expected effect color of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.fisheye, 0, "Expected effect fisheye of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.whirl, 0, "Expected effect whirl of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.pixelate, 0, "Expected effect pixelate of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.mosaic, 0, "Expected effect mosaic of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.brightness, 0, "Expected effect brightness of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.ghost, 0, "Expected effect ghost of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.color, 0, "Expected effect color of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.fisheye, 0, "Expected effect fisheye of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.whirl, 0, "Expected effect whirl of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.pixelate, 0, "Expected effect pixelate of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.mosaic, 0, "Expected effect mosaic of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.brightness, 0, "Expected effect brightness of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.ghost, 0, "Expected effect ghost of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 12, "Expected Sprite Körper to be at layer 12");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 14, "Expected Sprite Punkt to be at layer 14");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 13, "Expected Sprite Goodie to be at layer 13");
  t.assert.equal(t.getSprite("Körper").getClone(7).getLayerOrder(), 8, "Expected Clone 7 of Körper to be at layer 8");
  t.assert.equal(t.getSprite("Körper").getClone(8).getLayerOrder(), 9, "Expected Clone 8 of Körper to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(9).getLayerOrder(), 10, "Expected Clone 9 of Körper to be at layer 10");
  t.assert.equal(t.getSprite("Körper").getClone(10).getLayerOrder(), 11, "Expected Clone 10 of Körper to be at layer 11");
  t.assert.withinRange(t.getSprite("Kopf").x, 233, 5, "Expected Sprite Kopf to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -173, 5, "Expected Sprite Kopf to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 233, 5, "Expected Sprite Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -173, 5, "Expected Sprite Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -163, 5, "Expected Sprite Punkt to have x-position -163 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -105, 5, "Expected Sprite Punkt to have y-position -105 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).x, 233, 5, "Expected Clone 7 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).y, -180, 5, "Expected Clone 7 of Körper to have y-position -180 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).x, 233, 5, "Expected Clone 8 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).y, -173, 5, "Expected Clone 8 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).x, 233, 5, "Expected Clone 9 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).y, -173, 5, "Expected Clone 9 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(10).x, 233, 5, "Expected Clone 10 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(10).y, -173, 5, "Expected Clone 10 of Körper to have y-position -173 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(7).sayText, "Expected Clone 7 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(8).sayText, "Expected Clone 8 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(9).sayText, "Expected Clone 9 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(10).sayText, "Expected Clone 10 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).size, 90, 1, "Expected Clone 7 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).size, 90, 1, "Expected Clone 8 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).size, 90, 1, "Expected Clone 9 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(10).size, 90, 1, "Expected Clone 10 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(7).visible, "Expected Clone 7 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(8).visible, "Expected Clone 8 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(9).visible, "Expected Clone 9 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(10).visible, "Expected Clone 10 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(7).volume, 100, "Expected Clone 7 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(8).volume, 100, "Expected Clone 8 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(9).volume, 100, "Expected Clone 9 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(10).volume, 100, "Expected Clone 10 of Körper to have volume 100");
  t.keyPress('down arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).currentCostume, 0, "Expected Clone 5 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).currentCostume, 0, "Expected Clone 7 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).currentCostume, 0, "Expected Clone 8 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).currentCostume, 0, "Expected Clone 9 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).currentCostume, 0, "Expected Clone 10 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).currentCostume, 0, "Expected Clone 12 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 12, "Expected Sprite Körper to have 12 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(5).direction, 90, 1, "Expected Clone 5 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(7).direction, 90, 1, "Expected Clone 7 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(8).direction, 90, 1, "Expected Clone 8 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(9).direction, 90, 1, "Expected Clone 9 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(10).direction, 90, 1, "Expected Clone 10 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(12).direction, 90, 1, "Expected Clone 12 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.color, 0, "Expected effect color of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.fisheye, 0, "Expected effect fisheye of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.whirl, 0, "Expected effect whirl of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.pixelate, 0, "Expected effect pixelate of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.mosaic, 0, "Expected effect mosaic of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.brightness, 0, "Expected effect brightness of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.ghost, 0, "Expected effect ghost of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.color, 0, "Expected effect color of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.fisheye, 0, "Expected effect fisheye of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.whirl, 0, "Expected effect whirl of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.pixelate, 0, "Expected effect pixelate of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.mosaic, 0, "Expected effect mosaic of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.brightness, 0, "Expected effect brightness of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.ghost, 0, "Expected effect ghost of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.color, 0, "Expected effect color of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.fisheye, 0, "Expected effect fisheye of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.whirl, 0, "Expected effect whirl of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.pixelate, 0, "Expected effect pixelate of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.mosaic, 0, "Expected effect mosaic of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.brightness, 0, "Expected effect brightness of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.ghost, 0, "Expected effect ghost of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.color, 0, "Expected effect color of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.fisheye, 0, "Expected effect fisheye of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.whirl, 0, "Expected effect whirl of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.pixelate, 0, "Expected effect pixelate of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.mosaic, 0, "Expected effect mosaic of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.brightness, 0, "Expected effect brightness of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.ghost, 0, "Expected effect ghost of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.color, 0, "Expected effect color of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.fisheye, 0, "Expected effect fisheye of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.whirl, 0, "Expected effect whirl of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.pixelate, 0, "Expected effect pixelate of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.mosaic, 0, "Expected effect mosaic of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.brightness, 0, "Expected effect brightness of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.ghost, 0, "Expected effect ghost of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 14, "Expected Sprite Körper to be at layer 14");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 16, "Expected Sprite Punkt to be at layer 16");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 15, "Expected Sprite Goodie to be at layer 15");
  t.assert.equal(t.getSprite("Körper").getClone(5).getLayerOrder(), 6, "Expected Clone 5 of Körper to be at layer 6");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.equal(t.getSprite("Körper").getClone(7).getLayerOrder(), 8, "Expected Clone 7 of Körper to be at layer 8");
  t.assert.equal(t.getSprite("Körper").getClone(8).getLayerOrder(), 9, "Expected Clone 8 of Körper to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(9).getLayerOrder(), 10, "Expected Clone 9 of Körper to be at layer 10");
  t.assert.equal(t.getSprite("Körper").getClone(10).getLayerOrder(), 11, "Expected Clone 10 of Körper to be at layer 11");
  t.assert.equal(t.getSprite("Körper").getClone(12).getLayerOrder(), 13, "Expected Clone 12 of Körper to be at layer 13");
  t.assert.withinRange(t.getSprite("Kopf").x, 233, 5, "Expected Sprite Kopf to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -173, 5, "Expected Sprite Kopf to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 233, 5, "Expected Sprite Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -173, 5, "Expected Sprite Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -163, 5, "Expected Sprite Punkt to have x-position -163 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -105, 5, "Expected Sprite Punkt to have y-position -105 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).x, 233, 5, "Expected Clone 5 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).y, -180, 5, "Expected Clone 5 of Körper to have y-position -180 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, 233, 5, "Expected Clone 6 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, -173, 5, "Expected Clone 6 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).x, 233, 5, "Expected Clone 7 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).y, -173, 5, "Expected Clone 7 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).x, 233, 5, "Expected Clone 8 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).y, -173, 5, "Expected Clone 8 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).x, 233, 5, "Expected Clone 9 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).y, -173, 5, "Expected Clone 9 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(10).x, 233, 5, "Expected Clone 10 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(10).y, -173, 5, "Expected Clone 10 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).x, 233, 5, "Expected Clone 12 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).y, -173, 5, "Expected Clone 12 of Körper to have y-position -173 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(5).sayText, "Expected Clone 5 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(7).sayText, "Expected Clone 7 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(8).sayText, "Expected Clone 8 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(9).sayText, "Expected Clone 9 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(10).sayText, "Expected Clone 10 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(12).sayText, "Expected Clone 12 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).size, 90, 1, "Expected Clone 5 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).size, 90, 1, "Expected Clone 7 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).size, 90, 1, "Expected Clone 8 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).size, 90, 1, "Expected Clone 9 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(10).size, 90, 1, "Expected Clone 10 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).size, 90, 1, "Expected Clone 12 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(5).visible, "Expected Clone 5 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(7).visible, "Expected Clone 7 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(8).visible, "Expected Clone 8 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(9).visible, "Expected Clone 9 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(10).visible, "Expected Clone 10 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(12).visible, "Expected Clone 12 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(5).volume, 100, "Expected Clone 5 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(7).volume, 100, "Expected Clone 7 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(8).volume, 100, "Expected Clone 8 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(9).volume, 100, "Expected Clone 9 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(10).volume, 100, "Expected Clone 10 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(12).volume, 100, "Expected Clone 12 of Körper to have volume 100");
  t.keyPress('up arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).currentCostume, 0, "Expected Clone 3 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).currentCostume, 0, "Expected Clone 4 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).currentCostume, 0, "Expected Clone 5 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).currentCostume, 0, "Expected Clone 7 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).currentCostume, 0, "Expected Clone 8 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).currentCostume, 0, "Expected Clone 12 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 12, "Expected Sprite Körper to have 12 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(3).direction, 90, 1, "Expected Clone 3 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(4).direction, 90, 1, "Expected Clone 4 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(5).direction, 90, 1, "Expected Clone 5 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(7).direction, 90, 1, "Expected Clone 7 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(8).direction, 90, 1, "Expected Clone 8 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(12).direction, 90, 1, "Expected Clone 12 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.color, 0, "Expected effect color of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.fisheye, 0, "Expected effect fisheye of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.whirl, 0, "Expected effect whirl of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.pixelate, 0, "Expected effect pixelate of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.mosaic, 0, "Expected effect mosaic of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.brightness, 0, "Expected effect brightness of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.ghost, 0, "Expected effect ghost of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.color, 0, "Expected effect color of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.fisheye, 0, "Expected effect fisheye of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.whirl, 0, "Expected effect whirl of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.pixelate, 0, "Expected effect pixelate of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.mosaic, 0, "Expected effect mosaic of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.brightness, 0, "Expected effect brightness of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.ghost, 0, "Expected effect ghost of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.color, 0, "Expected effect color of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.fisheye, 0, "Expected effect fisheye of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.whirl, 0, "Expected effect whirl of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.pixelate, 0, "Expected effect pixelate of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.mosaic, 0, "Expected effect mosaic of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.brightness, 0, "Expected effect brightness of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.ghost, 0, "Expected effect ghost of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 14, "Expected Sprite Körper to be at layer 14");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 16, "Expected Sprite Punkt to be at layer 16");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 15, "Expected Sprite Goodie to be at layer 15");
  t.assert.equal(t.getSprite("Körper").getClone(3).getLayerOrder(), 4, "Expected Clone 3 of Körper to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(4).getLayerOrder(), 5, "Expected Clone 4 of Körper to be at layer 5");
  t.assert.equal(t.getSprite("Körper").getClone(5).getLayerOrder(), 6, "Expected Clone 5 of Körper to be at layer 6");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.equal(t.getSprite("Körper").getClone(7).getLayerOrder(), 8, "Expected Clone 7 of Körper to be at layer 8");
  t.assert.equal(t.getSprite("Körper").getClone(8).getLayerOrder(), 9, "Expected Clone 8 of Körper to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(12).getLayerOrder(), 13, "Expected Clone 12 of Körper to be at layer 13");
  t.assert.withinRange(t.getSprite("Kopf").x, 233, 5, "Expected Sprite Kopf to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -170, 5, "Expected Sprite Kopf to have y-position -170 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 233, 5, "Expected Sprite Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -173, 5, "Expected Sprite Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -163, 5, "Expected Sprite Punkt to have x-position -163 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -105, 5, "Expected Sprite Punkt to have y-position -105 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).x, 233, 5, "Expected Clone 3 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).y, -180, 5, "Expected Clone 3 of Körper to have y-position -180 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).x, 233, 5, "Expected Clone 4 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).y, -173, 5, "Expected Clone 4 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).x, 233, 5, "Expected Clone 5 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).y, -173, 5, "Expected Clone 5 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, 233, 5, "Expected Clone 6 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, -173, 5, "Expected Clone 6 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).x, 233, 5, "Expected Clone 7 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).y, -173, 5, "Expected Clone 7 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).x, 233, 5, "Expected Clone 8 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).y, -173, 5, "Expected Clone 8 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).x, 233, 5, "Expected Clone 12 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).y, -173, 5, "Expected Clone 12 of Körper to have y-position -173 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(3).sayText, "Expected Clone 3 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(4).sayText, "Expected Clone 4 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(5).sayText, "Expected Clone 5 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(7).sayText, "Expected Clone 7 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(8).sayText, "Expected Clone 8 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(12).sayText, "Expected Clone 12 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).size, 90, 1, "Expected Clone 3 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).size, 90, 1, "Expected Clone 4 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).size, 90, 1, "Expected Clone 5 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).size, 90, 1, "Expected Clone 7 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).size, 90, 1, "Expected Clone 8 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).size, 90, 1, "Expected Clone 12 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(3).visible, "Expected Clone 3 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(4).visible, "Expected Clone 4 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(5).visible, "Expected Clone 5 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(7).visible, "Expected Clone 7 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(8).visible, "Expected Clone 8 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(12).visible, "Expected Clone 12 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(3).volume, 100, "Expected Clone 3 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(4).volume, 100, "Expected Clone 4 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(5).volume, 100, "Expected Clone 5 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(7).volume, 100, "Expected Clone 7 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(8).volume, 100, "Expected Clone 8 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(12).volume, 100, "Expected Clone 12 of Körper to have volume 100");
  t.dragSprite('Kopf', 235, -179, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).currentCostume, 0, "Expected Clone 3 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).currentCostume, 0, "Expected Clone 4 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).currentCostume, 0, "Expected Clone 5 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).currentCostume, 0, "Expected Clone 7 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).currentCostume, 0, "Expected Clone 8 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).currentCostume, 0, "Expected Clone 13 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 13, "Expected Sprite Körper to have 13 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(3).direction, 90, 1, "Expected Clone 3 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(4).direction, 90, 1, "Expected Clone 4 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(5).direction, 90, 1, "Expected Clone 5 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(7).direction, 90, 1, "Expected Clone 7 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(8).direction, 90, 1, "Expected Clone 8 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(13).direction, 90, 1, "Expected Clone 13 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.color, 0, "Expected effect color of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.fisheye, 0, "Expected effect fisheye of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.whirl, 0, "Expected effect whirl of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.pixelate, 0, "Expected effect pixelate of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.mosaic, 0, "Expected effect mosaic of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.brightness, 0, "Expected effect brightness of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.ghost, 0, "Expected effect ghost of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.color, 0, "Expected effect color of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.fisheye, 0, "Expected effect fisheye of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.whirl, 0, "Expected effect whirl of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.pixelate, 0, "Expected effect pixelate of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.mosaic, 0, "Expected effect mosaic of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.brightness, 0, "Expected effect brightness of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.ghost, 0, "Expected effect ghost of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).effects.color, 0, "Expected effect color of Clone 13 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).effects.fisheye, 0, "Expected effect fisheye of Clone 13 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).effects.whirl, 0, "Expected effect whirl of Clone 13 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).effects.pixelate, 0, "Expected effect pixelate of Clone 13 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).effects.mosaic, 0, "Expected effect mosaic of Clone 13 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).effects.brightness, 0, "Expected effect brightness of Clone 13 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).effects.ghost, 0, "Expected effect ghost of Clone 13 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 15, "Expected Sprite Körper to be at layer 15");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 17, "Expected Sprite Punkt to be at layer 17");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 16, "Expected Sprite Goodie to be at layer 16");
  t.assert.equal(t.getSprite("Körper").getClone(3).getLayerOrder(), 4, "Expected Clone 3 of Körper to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(4).getLayerOrder(), 5, "Expected Clone 4 of Körper to be at layer 5");
  t.assert.equal(t.getSprite("Körper").getClone(5).getLayerOrder(), 6, "Expected Clone 5 of Körper to be at layer 6");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.equal(t.getSprite("Körper").getClone(7).getLayerOrder(), 8, "Expected Clone 7 of Körper to be at layer 8");
  t.assert.equal(t.getSprite("Körper").getClone(8).getLayerOrder(), 9, "Expected Clone 8 of Körper to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(13).getLayerOrder(), 14, "Expected Clone 13 of Körper to be at layer 14");
  t.assert.withinRange(t.getSprite("Kopf").x, 235, 5, "Expected Sprite Kopf to have x-position 235 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -176, 5, "Expected Sprite Kopf to have y-position -176 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 235, 5, "Expected Sprite Körper to have x-position 235 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -179, 5, "Expected Sprite Körper to have y-position -179 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -163, 5, "Expected Sprite Punkt to have x-position -163 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -105, 5, "Expected Sprite Punkt to have y-position -105 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).x, 233, 5, "Expected Clone 3 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).y, -180, 5, "Expected Clone 3 of Körper to have y-position -180 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).x, 233, 5, "Expected Clone 4 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).y, -173, 5, "Expected Clone 4 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).x, 233, 5, "Expected Clone 5 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).y, -173, 5, "Expected Clone 5 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, 233, 5, "Expected Clone 6 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, -173, 5, "Expected Clone 6 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).x, 233, 5, "Expected Clone 7 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).y, -173, 5, "Expected Clone 7 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).x, 233, 5, "Expected Clone 8 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).y, -173, 5, "Expected Clone 8 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(13).x, 235, 5, "Expected Clone 13 of Körper to have x-position 235 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(13).y, -179, 5, "Expected Clone 13 of Körper to have y-position -179 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(3).sayText, "Expected Clone 3 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(4).sayText, "Expected Clone 4 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(5).sayText, "Expected Clone 5 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(7).sayText, "Expected Clone 7 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(8).sayText, "Expected Clone 8 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(13).sayText, "Expected Clone 13 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).size, 90, 1, "Expected Clone 3 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).size, 90, 1, "Expected Clone 4 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).size, 90, 1, "Expected Clone 5 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).size, 90, 1, "Expected Clone 7 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).size, 90, 1, "Expected Clone 8 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(13).size, 90, 1, "Expected Clone 13 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(3).visible, "Expected Clone 3 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(4).visible, "Expected Clone 4 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(5).visible, "Expected Clone 5 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(7).visible, "Expected Clone 7 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(8).visible, "Expected Clone 8 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(13).visible, "Expected Clone 13 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(3).volume, 100, "Expected Clone 3 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(4).volume, 100, "Expected Clone 4 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(5).volume, 100, "Expected Clone 5 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(7).volume, 100, "Expected Clone 7 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(8).volume, 100, "Expected Clone 8 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(13).volume, 100, "Expected Clone 13 of Körper to have volume 100");
  t.keyPress('down arrow', 2);
  await t.runForSteps(2);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).currentCostume, 0, "Expected Clone 3 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).currentCostume, 0, "Expected Clone 4 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).currentCostume, 0, "Expected Clone 5 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).currentCostume, 0, "Expected Clone 7 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).currentCostume, 0, "Expected Clone 8 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).currentCostume, 0, "Expected Clone 13 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(14).currentCostume, 0, "Expected Clone 14 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(15).currentCostume, 0, "Expected Clone 15 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(16).currentCostume, 0, "Expected Clone 16 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 16, "Expected Sprite Körper to have 16 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(3).direction, 90, 1, "Expected Clone 3 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(4).direction, 90, 1, "Expected Clone 4 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(5).direction, 90, 1, "Expected Clone 5 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(7).direction, 90, 1, "Expected Clone 7 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(8).direction, 90, 1, "Expected Clone 8 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(13).direction, 90, 1, "Expected Clone 13 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(14).direction, 90, 1, "Expected Clone 14 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(15).direction, 90, 1, "Expected Clone 15 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(16).direction, 90, 1, "Expected Clone 16 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.color, 0, "Expected effect color of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.fisheye, 0, "Expected effect fisheye of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.whirl, 0, "Expected effect whirl of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.pixelate, 0, "Expected effect pixelate of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.mosaic, 0, "Expected effect mosaic of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.brightness, 0, "Expected effect brightness of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.ghost, 0, "Expected effect ghost of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.color, 0, "Expected effect color of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.fisheye, 0, "Expected effect fisheye of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.whirl, 0, "Expected effect whirl of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.pixelate, 0, "Expected effect pixelate of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.mosaic, 0, "Expected effect mosaic of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.brightness, 0, "Expected effect brightness of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.ghost, 0, "Expected effect ghost of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).effects.color, 0, "Expected effect color of Clone 13 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).effects.fisheye, 0, "Expected effect fisheye of Clone 13 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).effects.whirl, 0, "Expected effect whirl of Clone 13 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).effects.pixelate, 0, "Expected effect pixelate of Clone 13 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).effects.mosaic, 0, "Expected effect mosaic of Clone 13 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).effects.brightness, 0, "Expected effect brightness of Clone 13 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).effects.ghost, 0, "Expected effect ghost of Clone 13 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(14).effects.color, 0, "Expected effect color of Clone 14 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(14).effects.fisheye, 0, "Expected effect fisheye of Clone 14 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(14).effects.whirl, 0, "Expected effect whirl of Clone 14 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(14).effects.pixelate, 0, "Expected effect pixelate of Clone 14 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(14).effects.mosaic, 0, "Expected effect mosaic of Clone 14 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(14).effects.brightness, 0, "Expected effect brightness of Clone 14 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(14).effects.ghost, 0, "Expected effect ghost of Clone 14 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(15).effects.color, 0, "Expected effect color of Clone 15 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(15).effects.fisheye, 0, "Expected effect fisheye of Clone 15 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(15).effects.whirl, 0, "Expected effect whirl of Clone 15 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(15).effects.pixelate, 0, "Expected effect pixelate of Clone 15 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(15).effects.mosaic, 0, "Expected effect mosaic of Clone 15 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(15).effects.brightness, 0, "Expected effect brightness of Clone 15 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(15).effects.ghost, 0, "Expected effect ghost of Clone 15 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(16).effects.color, 0, "Expected effect color of Clone 16 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(16).effects.fisheye, 0, "Expected effect fisheye of Clone 16 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(16).effects.whirl, 0, "Expected effect whirl of Clone 16 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(16).effects.pixelate, 0, "Expected effect pixelate of Clone 16 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(16).effects.mosaic, 0, "Expected effect mosaic of Clone 16 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(16).effects.brightness, 0, "Expected effect brightness of Clone 16 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(16).effects.ghost, 0, "Expected effect ghost of Clone 16 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 18, "Expected Sprite Körper to be at layer 18");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 20, "Expected Sprite Punkt to be at layer 20");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 19, "Expected Sprite Goodie to be at layer 19");
  t.assert.equal(t.getSprite("Körper").getClone(3).getLayerOrder(), 4, "Expected Clone 3 of Körper to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(4).getLayerOrder(), 5, "Expected Clone 4 of Körper to be at layer 5");
  t.assert.equal(t.getSprite("Körper").getClone(5).getLayerOrder(), 6, "Expected Clone 5 of Körper to be at layer 6");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.equal(t.getSprite("Körper").getClone(7).getLayerOrder(), 8, "Expected Clone 7 of Körper to be at layer 8");
  t.assert.equal(t.getSprite("Körper").getClone(8).getLayerOrder(), 9, "Expected Clone 8 of Körper to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(13).getLayerOrder(), 14, "Expected Clone 13 of Körper to be at layer 14");
  t.assert.equal(t.getSprite("Körper").getClone(14).getLayerOrder(), 15, "Expected Clone 14 of Körper to be at layer 15");
  t.assert.equal(t.getSprite("Körper").getClone(15).getLayerOrder(), 16, "Expected Clone 15 of Körper to be at layer 16");
  t.assert.equal(t.getSprite("Körper").getClone(16).getLayerOrder(), 17, "Expected Clone 16 of Körper to be at layer 17");
  t.assert.withinRange(t.getSprite("Kopf").x, 235, 5, "Expected Sprite Kopf to have x-position 235 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -173, 5, "Expected Sprite Kopf to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 235, 5, "Expected Sprite Körper to have x-position 235 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -173, 5, "Expected Sprite Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -163, 5, "Expected Sprite Punkt to have x-position -163 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -105, 5, "Expected Sprite Punkt to have y-position -105 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).x, 233, 5, "Expected Clone 3 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).y, -180, 5, "Expected Clone 3 of Körper to have y-position -180 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).x, 233, 5, "Expected Clone 4 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).y, -173, 5, "Expected Clone 4 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).x, 233, 5, "Expected Clone 5 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).y, -173, 5, "Expected Clone 5 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, 233, 5, "Expected Clone 6 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, -173, 5, "Expected Clone 6 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).x, 233, 5, "Expected Clone 7 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).y, -173, 5, "Expected Clone 7 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).x, 233, 5, "Expected Clone 8 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).y, -173, 5, "Expected Clone 8 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(13).x, 235, 5, "Expected Clone 13 of Körper to have x-position 235 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(13).y, -179, 5, "Expected Clone 13 of Körper to have y-position -179 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(14).x, 235, 5, "Expected Clone 14 of Körper to have x-position 235 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(14).y, -176, 5, "Expected Clone 14 of Körper to have y-position -176 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(15).x, 235, 5, "Expected Clone 15 of Körper to have x-position 235 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(15).y, -173, 5, "Expected Clone 15 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(16).x, 235, 5, "Expected Clone 16 of Körper to have x-position 235 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(16).y, -173, 5, "Expected Clone 16 of Körper to have y-position -173 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(3).sayText, "Expected Clone 3 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(4).sayText, "Expected Clone 4 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(5).sayText, "Expected Clone 5 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(7).sayText, "Expected Clone 7 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(8).sayText, "Expected Clone 8 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(13).sayText, "Expected Clone 13 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(14).sayText, "Expected Clone 14 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(15).sayText, "Expected Clone 15 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(16).sayText, "Expected Clone 16 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).size, 90, 1, "Expected Clone 3 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).size, 90, 1, "Expected Clone 4 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).size, 90, 1, "Expected Clone 5 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).size, 90, 1, "Expected Clone 7 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).size, 90, 1, "Expected Clone 8 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(13).size, 90, 1, "Expected Clone 13 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(14).size, 90, 1, "Expected Clone 14 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(15).size, 90, 1, "Expected Clone 15 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(16).size, 90, 1, "Expected Clone 16 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(3).visible, "Expected Clone 3 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(4).visible, "Expected Clone 4 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(5).visible, "Expected Clone 5 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(7).visible, "Expected Clone 7 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(8).visible, "Expected Clone 8 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(13).visible, "Expected Clone 13 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(14).visible, "Expected Clone 14 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(15).visible, "Expected Clone 15 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(16).visible, "Expected Clone 16 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(3).volume, 100, "Expected Clone 3 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(4).volume, 100, "Expected Clone 4 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(5).volume, 100, "Expected Clone 5 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(7).volume, 100, "Expected Clone 7 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(8).volume, 100, "Expected Clone 8 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(13).volume, 100, "Expected Clone 13 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(14).volume, 100, "Expected Clone 14 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(15).volume, 100, "Expected Clone 15 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(16).volume, 100, "Expected Clone 16 of Körper to have volume 100");
  t.keyPress('left arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).currentCostume, 0, "Expected Clone 2 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).currentCostume, 0, "Expected Clone 3 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).currentCostume, 0, "Expected Clone 4 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).currentCostume, 0, "Expected Clone 5 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).currentCostume, 0, "Expected Clone 11 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).currentCostume, 0, "Expected Clone 12 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).currentCostume, 0, "Expected Clone 13 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(14).currentCostume, 0, "Expected Clone 14 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(15).currentCostume, 0, "Expected Clone 15 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(16).currentCostume, 0, "Expected Clone 16 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(18).currentCostume, 0, "Expected Clone 18 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 18, "Expected Sprite Körper to have 18 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(2).direction, 90, 1, "Expected Clone 2 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(3).direction, 90, 1, "Expected Clone 3 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(4).direction, 90, 1, "Expected Clone 4 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(5).direction, 90, 1, "Expected Clone 5 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(11).direction, 90, 1, "Expected Clone 11 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(12).direction, 90, 1, "Expected Clone 12 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(13).direction, 90, 1, "Expected Clone 13 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(14).direction, 90, 1, "Expected Clone 14 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(15).direction, 90, 1, "Expected Clone 15 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(16).direction, 90, 1, "Expected Clone 16 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(18).direction, 90, 1, "Expected Clone 18 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.color, 0, "Expected effect color of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.fisheye, 0, "Expected effect fisheye of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.whirl, 0, "Expected effect whirl of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.pixelate, 0, "Expected effect pixelate of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.mosaic, 0, "Expected effect mosaic of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.brightness, 0, "Expected effect brightness of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.ghost, 0, "Expected effect ghost of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.color, 0, "Expected effect color of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.fisheye, 0, "Expected effect fisheye of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.whirl, 0, "Expected effect whirl of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.pixelate, 0, "Expected effect pixelate of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.mosaic, 0, "Expected effect mosaic of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.brightness, 0, "Expected effect brightness of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.ghost, 0, "Expected effect ghost of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).effects.color, 0, "Expected effect color of Clone 13 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).effects.fisheye, 0, "Expected effect fisheye of Clone 13 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).effects.whirl, 0, "Expected effect whirl of Clone 13 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).effects.pixelate, 0, "Expected effect pixelate of Clone 13 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).effects.mosaic, 0, "Expected effect mosaic of Clone 13 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).effects.brightness, 0, "Expected effect brightness of Clone 13 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(13).effects.ghost, 0, "Expected effect ghost of Clone 13 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(14).effects.color, 0, "Expected effect color of Clone 14 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(14).effects.fisheye, 0, "Expected effect fisheye of Clone 14 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(14).effects.whirl, 0, "Expected effect whirl of Clone 14 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(14).effects.pixelate, 0, "Expected effect pixelate of Clone 14 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(14).effects.mosaic, 0, "Expected effect mosaic of Clone 14 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(14).effects.brightness, 0, "Expected effect brightness of Clone 14 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(14).effects.ghost, 0, "Expected effect ghost of Clone 14 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(15).effects.color, 0, "Expected effect color of Clone 15 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(15).effects.fisheye, 0, "Expected effect fisheye of Clone 15 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(15).effects.whirl, 0, "Expected effect whirl of Clone 15 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(15).effects.pixelate, 0, "Expected effect pixelate of Clone 15 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(15).effects.mosaic, 0, "Expected effect mosaic of Clone 15 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(15).effects.brightness, 0, "Expected effect brightness of Clone 15 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(15).effects.ghost, 0, "Expected effect ghost of Clone 15 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(16).effects.color, 0, "Expected effect color of Clone 16 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(16).effects.fisheye, 0, "Expected effect fisheye of Clone 16 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(16).effects.whirl, 0, "Expected effect whirl of Clone 16 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(16).effects.pixelate, 0, "Expected effect pixelate of Clone 16 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(16).effects.mosaic, 0, "Expected effect mosaic of Clone 16 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(16).effects.brightness, 0, "Expected effect brightness of Clone 16 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(16).effects.ghost, 0, "Expected effect ghost of Clone 16 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(18).effects.color, 0, "Expected effect color of Clone 18 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(18).effects.fisheye, 0, "Expected effect fisheye of Clone 18 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(18).effects.whirl, 0, "Expected effect whirl of Clone 18 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(18).effects.pixelate, 0, "Expected effect pixelate of Clone 18 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(18).effects.mosaic, 0, "Expected effect mosaic of Clone 18 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(18).effects.brightness, 0, "Expected effect brightness of Clone 18 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(18).effects.ghost, 0, "Expected effect ghost of Clone 18 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 20, "Expected Sprite Körper to be at layer 20");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 22, "Expected Sprite Punkt to be at layer 22");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 21, "Expected Sprite Goodie to be at layer 21");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.equal(t.getSprite("Körper").getClone(2).getLayerOrder(), 3, "Expected Clone 2 of Körper to be at layer 3");
  t.assert.equal(t.getSprite("Körper").getClone(3).getLayerOrder(), 4, "Expected Clone 3 of Körper to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(4).getLayerOrder(), 5, "Expected Clone 4 of Körper to be at layer 5");
  t.assert.equal(t.getSprite("Körper").getClone(5).getLayerOrder(), 6, "Expected Clone 5 of Körper to be at layer 6");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.equal(t.getSprite("Körper").getClone(11).getLayerOrder(), 12, "Expected Clone 11 of Körper to be at layer 12");
  t.assert.equal(t.getSprite("Körper").getClone(12).getLayerOrder(), 13, "Expected Clone 12 of Körper to be at layer 13");
  t.assert.equal(t.getSprite("Körper").getClone(13).getLayerOrder(), 14, "Expected Clone 13 of Körper to be at layer 14");
  t.assert.equal(t.getSprite("Körper").getClone(14).getLayerOrder(), 15, "Expected Clone 14 of Körper to be at layer 15");
  t.assert.equal(t.getSprite("Körper").getClone(15).getLayerOrder(), 16, "Expected Clone 15 of Körper to be at layer 16");
  t.assert.equal(t.getSprite("Körper").getClone(16).getLayerOrder(), 17, "Expected Clone 16 of Körper to be at layer 17");
  t.assert.equal(t.getSprite("Körper").getClone(18).getLayerOrder(), 19, "Expected Clone 18 of Körper to be at layer 19");
  t.assert.withinRange(t.getSprite("Kopf").x, 226, 5, "Expected Sprite Kopf to have x-position 226 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -173, 5, "Expected Sprite Kopf to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 229, 5, "Expected Sprite Körper to have x-position 229 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -173, 5, "Expected Sprite Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -163, 5, "Expected Sprite Punkt to have x-position -163 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -105, 5, "Expected Sprite Punkt to have y-position -105 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 233, 5, "Expected Clone 1 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, -180, 5, "Expected Clone 1 of Körper to have y-position -180 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).x, 233, 5, "Expected Clone 2 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).y, -173, 5, "Expected Clone 2 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).x, 233, 5, "Expected Clone 3 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).y, -173, 5, "Expected Clone 3 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).x, 233, 5, "Expected Clone 4 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).y, -173, 5, "Expected Clone 4 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).x, 233, 5, "Expected Clone 5 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).y, -173, 5, "Expected Clone 5 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, 233, 5, "Expected Clone 6 of Körper to have x-position 233 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, -173, 5, "Expected Clone 6 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(11).x, 235, 5, "Expected Clone 11 of Körper to have x-position 235 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(11).y, -179, 5, "Expected Clone 11 of Körper to have y-position -179 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).x, 235, 5, "Expected Clone 12 of Körper to have x-position 235 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).y, -176, 5, "Expected Clone 12 of Körper to have y-position -176 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(13).x, 235, 5, "Expected Clone 13 of Körper to have x-position 235 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(13).y, -173, 5, "Expected Clone 13 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(14).x, 235, 5, "Expected Clone 14 of Körper to have x-position 235 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(14).y, -173, 5, "Expected Clone 14 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(15).x, 235, 5, "Expected Clone 15 of Körper to have x-position 235 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(15).y, -173, 5, "Expected Clone 15 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(16).x, 235, 5, "Expected Clone 16 of Körper to have x-position 235 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(16).y, -173, 5, "Expected Clone 16 of Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(18).x, 229, 5, "Expected Clone 18 of Körper to have x-position 229 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(18).y, -173, 5, "Expected Clone 18 of Körper to have y-position -173 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(2).sayText, "Expected Clone 2 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(3).sayText, "Expected Clone 3 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(4).sayText, "Expected Clone 4 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(5).sayText, "Expected Clone 5 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(11).sayText, "Expected Clone 11 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(12).sayText, "Expected Clone 12 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(13).sayText, "Expected Clone 13 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(14).sayText, "Expected Clone 14 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(15).sayText, "Expected Clone 15 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(16).sayText, "Expected Clone 16 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(18).sayText, "Expected Clone 18 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).size, 90, 1, "Expected Clone 2 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).size, 90, 1, "Expected Clone 3 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).size, 90, 1, "Expected Clone 4 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).size, 90, 1, "Expected Clone 5 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(11).size, 90, 1, "Expected Clone 11 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).size, 90, 1, "Expected Clone 12 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(13).size, 90, 1, "Expected Clone 13 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(14).size, 90, 1, "Expected Clone 14 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(15).size, 90, 1, "Expected Clone 15 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(16).size, 90, 1, "Expected Clone 16 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(18).size, 90, 1, "Expected Clone 18 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(2).visible, "Expected Clone 2 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(3).visible, "Expected Clone 3 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(4).visible, "Expected Clone 4 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(5).visible, "Expected Clone 5 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(11).visible, "Expected Clone 11 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(12).visible, "Expected Clone 12 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(13).visible, "Expected Clone 13 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(14).visible, "Expected Clone 14 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(15).visible, "Expected Clone 15 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(16).visible, "Expected Clone 16 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(18).visible, "Expected Clone 18 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(2).volume, 100, "Expected Clone 2 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(3).volume, 100, "Expected Clone 3 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(4).volume, 100, "Expected Clone 4 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(5).volume, 100, "Expected Clone 5 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(11).volume, 100, "Expected Clone 11 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(12).volume, 100, "Expected Clone 12 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(13).volume, 100, "Expected Clone 13 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(14).volume, 100, "Expected Clone 14 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(15).volume, 100, "Expected Clone 15 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(16).volume, 100, "Expected Clone 16 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(18).volume, 100, "Expected Clone 18 of Körper to have volume 100");
  t.keyPress('right arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 229, 5, "Expected Sprite Kopf to have x-position 229 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, -173, 5, "Expected Sprite Kopf to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 226, 5, "Expected Sprite Körper to have x-position 226 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, -173, 5, "Expected Sprite Körper to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -163, 5, "Expected Sprite Punkt to have x-position -163 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -105, 5, "Expected Sprite Punkt to have y-position -105 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.end();
}
const test1 = async function (t) {
  t.keyPress('left arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, -6, 5, "Expected Sprite Kopf to have x-position -6 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 100, 5, "Expected Sprite Kopf to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -3, 5, "Expected Sprite Körper to have x-position -3 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 100, 5, "Expected Sprite Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, -3, 5, "Expected Clone 1 of Körper to have x-position -3 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 100, 5, "Expected Clone 1 of Körper to have y-position 100 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  await t.runForSteps(22);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, -75, 5, "Expected Sprite Kopf to have x-position -75 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 100, 5, "Expected Sprite Kopf to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -72, 5, "Expected Sprite Körper to have x-position -72 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 100, 5, "Expected Sprite Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, -72, 5, "Expected Clone 1 of Körper to have x-position -72 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 100, 5, "Expected Clone 1 of Körper to have y-position 100 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('right arrow', 2);
  await t.runForSteps(2);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, -72, 5, "Expected Sprite Kopf to have x-position -72 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 100, 5, "Expected Sprite Kopf to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, -75, 5, "Expected Sprite Körper to have x-position -75 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 100, 5, "Expected Sprite Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, -75, 5, "Expected Clone 1 of Körper to have x-position -75 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 100, 5, "Expected Clone 1 of Körper to have y-position 100 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  await t.runForSteps(59);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 108, 5, "Expected Sprite Kopf to have x-position 108 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 100, 5, "Expected Sprite Kopf to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 105, 5, "Expected Sprite Körper to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 100, 5, "Expected Sprite Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 0, 5, "Expected Sprite Punkt to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -100, 5, "Expected Sprite Punkt to have y-position -100 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 105, 5, "Expected Clone 1 of Körper to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 100, 5, "Expected Clone 1 of Körper to have y-position 100 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.dragSprite('Punkt', 104.85810209730401, 92.80964762960667, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 111, 5, "Expected Sprite Kopf to have x-position 111 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 100, 5, "Expected Sprite Kopf to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 108, 5, "Expected Sprite Körper to have x-position 108 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 100, 5, "Expected Sprite Körper to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 104.85810209730401, 5, "Expected Sprite Punkt to have x-position 104.85810209730401 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 92.80964762960667, 5, "Expected Sprite Punkt to have y-position 92.80964762960667 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 108, 5, "Expected Clone 1 of Körper to have x-position 108 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 100, 5, "Expected Clone 1 of Körper to have y-position 100 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('up arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 114, 5, "Expected Sprite Kopf to have x-position 114 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 112, 5, "Expected Sprite Kopf to have y-position 112 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 114, 5, "Expected Sprite Körper to have x-position 114 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 109, 5, "Expected Sprite Körper to have y-position 109 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 104.85810209730401, 5, "Expected Sprite Punkt to have x-position 104.85810209730401 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 92.80964762960667, 5, "Expected Sprite Punkt to have y-position 92.80964762960667 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 114, 5, "Expected Clone 1 of Körper to have x-position 114 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 109, 5, "Expected Clone 1 of Körper to have y-position 109 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 114, 5, "Expected Sprite Kopf to have x-position 114 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 124, 5, "Expected Sprite Kopf to have y-position 124 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 114, 5, "Expected Sprite Körper to have x-position 114 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 121, 5, "Expected Sprite Körper to have y-position 121 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 104.85810209730401, 5, "Expected Sprite Punkt to have x-position 104.85810209730401 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 92.80964762960667, 5, "Expected Sprite Punkt to have y-position 92.80964762960667 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 114, 5, "Expected Clone 1 of Körper to have x-position 114 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 121, 5, "Expected Clone 1 of Körper to have y-position 121 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('right arrow', 2);
  await t.runForSteps(2);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 120, 5, "Expected Sprite Kopf to have x-position 120 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 127, 5, "Expected Sprite Kopf to have y-position 127 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 117, 5, "Expected Sprite Körper to have x-position 117 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 127, 5, "Expected Sprite Körper to have y-position 127 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 104.85810209730401, 5, "Expected Sprite Punkt to have x-position 104.85810209730401 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 92.80964762960667, 5, "Expected Sprite Punkt to have y-position 92.80964762960667 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 117, 5, "Expected Clone 1 of Körper to have x-position 117 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 127, 5, "Expected Clone 1 of Körper to have y-position 127 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('right arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 126, 5, "Expected Sprite Kopf to have x-position 126 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 127, 5, "Expected Sprite Kopf to have y-position 127 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 123, 5, "Expected Sprite Körper to have x-position 123 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 127, 5, "Expected Sprite Körper to have y-position 127 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 104.85810209730401, 5, "Expected Sprite Punkt to have x-position 104.85810209730401 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 92.80964762960667, 5, "Expected Sprite Punkt to have y-position 92.80964762960667 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 123, 5, "Expected Clone 1 of Körper to have x-position 123 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 127, 5, "Expected Clone 1 of Körper to have y-position 127 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  await t.runForSteps(9);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 156, 5, "Expected Sprite Kopf to have x-position 156 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 127, 5, "Expected Sprite Kopf to have y-position 127 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 153, 5, "Expected Sprite Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 127, 5, "Expected Sprite Körper to have y-position 127 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 104.85810209730401, 5, "Expected Sprite Punkt to have x-position 104.85810209730401 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 92.80964762960667, 5, "Expected Sprite Punkt to have y-position 92.80964762960667 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 153, 5, "Expected Clone 1 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 127, 5, "Expected Clone 1 of Körper to have y-position 127 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('up arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 159, 5, "Expected Sprite Kopf to have x-position 159 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 130, 5, "Expected Sprite Kopf to have y-position 130 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 159, 5, "Expected Sprite Körper to have x-position 159 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 127, 5, "Expected Sprite Körper to have y-position 127 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 104.85810209730401, 5, "Expected Sprite Punkt to have x-position 104.85810209730401 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 92.80964762960667, 5, "Expected Sprite Punkt to have y-position 92.80964762960667 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 159, 5, "Expected Clone 1 of Körper to have x-position 159 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 127, 5, "Expected Clone 1 of Körper to have y-position 127 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  await t.runForSteps(11);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 159, 5, "Expected Sprite Kopf to have x-position 159 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 166, 5, "Expected Sprite Kopf to have y-position 166 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 159, 5, "Expected Sprite Körper to have x-position 159 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 163, 5, "Expected Sprite Körper to have y-position 163 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 104.85810209730401, 5, "Expected Sprite Punkt to have x-position 104.85810209730401 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 92.80964762960667, 5, "Expected Sprite Punkt to have y-position 92.80964762960667 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 159, 5, "Expected Clone 1 of Körper to have x-position 159 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 163, 5, "Expected Clone 1 of Körper to have y-position 163 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('left arrow', 2);
  await t.runForSteps(2);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 153, 5, "Expected Sprite Kopf to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 169, 5, "Expected Sprite Kopf to have y-position 169 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 156, 5, "Expected Sprite Körper to have x-position 156 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 169, 5, "Expected Sprite Körper to have y-position 169 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 104.85810209730401, 5, "Expected Sprite Punkt to have x-position 104.85810209730401 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 92.80964762960667, 5, "Expected Sprite Punkt to have y-position 92.80964762960667 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 156, 5, "Expected Clone 1 of Körper to have x-position 156 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 169, 5, "Expected Clone 1 of Körper to have y-position 169 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.dragSprite('Punkt', 147.2016086970847, 173.7022820183398, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 1, "Expected Sprite Körper to have 1 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, -90, 1, "Expected Sprite Kopf to face in direction -90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 3, "Expected Sprite Körper to be at layer 3");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 5, "Expected Sprite Punkt to be at layer 5");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 4, "Expected Sprite Goodie to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.withinRange(t.getSprite("Kopf").x, 150, 5, "Expected Sprite Kopf to have x-position 150 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 169, 5, "Expected Sprite Kopf to have y-position 169 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 153, 5, "Expected Sprite Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 169, 5, "Expected Sprite Körper to have y-position 169 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -142, 5, "Expected Sprite Punkt to have x-position -142 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 157, 5, "Expected Sprite Punkt to have y-position 157 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 153, 5, "Expected Clone 1 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 169, 5, "Expected Clone 1 of Körper to have y-position 169 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.keyPress('right arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).currentCostume, 0, "Expected Clone 2 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).currentCostume, 0, "Expected Clone 3 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 3, "Expected Sprite Körper to have 3 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(2).direction, 90, 1, "Expected Clone 2 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(3).direction, 90, 1, "Expected Clone 3 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 5, "Expected Sprite Körper to be at layer 5");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 7, "Expected Sprite Punkt to be at layer 7");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 6, "Expected Sprite Goodie to be at layer 6");
  t.assert.equal(t.getSprite("Körper").getClone(2).getLayerOrder(), 3, "Expected Clone 2 of Körper to be at layer 3");
  t.assert.equal(t.getSprite("Körper").getClone(3).getLayerOrder(), 4, "Expected Clone 3 of Körper to be at layer 4");
  t.assert.withinRange(t.getSprite("Kopf").x, 150, 5, "Expected Sprite Kopf to have x-position 150 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 169, 5, "Expected Sprite Kopf to have y-position 169 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 147, 5, "Expected Sprite Körper to have x-position 147 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 169, 5, "Expected Sprite Körper to have y-position 169 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -142, 5, "Expected Sprite Punkt to have x-position -142 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 157, 5, "Expected Sprite Punkt to have y-position 157 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).x, 150, 5, "Expected Clone 2 of Körper to have x-position 150 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).y, 169, 5, "Expected Clone 2 of Körper to have y-position 169 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).x, 147, 5, "Expected Clone 3 of Körper to have x-position 147 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).y, 169, 5, "Expected Clone 3 of Körper to have y-position 169 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(2).sayText, "Expected Clone 2 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(3).sayText, "Expected Clone 3 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).size, 90, 1, "Expected Clone 2 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).size, 90, 1, "Expected Clone 3 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(2).visible, "Expected Clone 2 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(3).visible, "Expected Clone 3 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(2).volume, 100, "Expected Clone 2 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(3).volume, 100, "Expected Clone 3 of Körper to have volume 100");
  t.keyPress('up arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).currentCostume, 0, "Expected Clone 2 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).currentCostume, 0, "Expected Clone 3 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).currentCostume, 0, "Expected Clone 4 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).currentCostume, 0, "Expected Clone 5 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(2).direction, 90, 1, "Expected Clone 2 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(3).direction, 90, 1, "Expected Clone 3 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(4).direction, 90, 1, "Expected Clone 4 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(5).direction, 90, 1, "Expected Clone 5 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.equal(t.getSprite("Körper").getClone(2).getLayerOrder(), 3, "Expected Clone 2 of Körper to be at layer 3");
  t.assert.equal(t.getSprite("Körper").getClone(3).getLayerOrder(), 4, "Expected Clone 3 of Körper to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(4).getLayerOrder(), 5, "Expected Clone 4 of Körper to be at layer 5");
  t.assert.equal(t.getSprite("Körper").getClone(5).getLayerOrder(), 6, "Expected Clone 5 of Körper to be at layer 6");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, 153, 5, "Expected Sprite Kopf to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 173, 5, "Expected Sprite Kopf to have y-position 173 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 153, 5, "Expected Sprite Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 173, 5, "Expected Sprite Körper to have y-position 173 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -142, 5, "Expected Sprite Punkt to have x-position -142 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 157, 5, "Expected Sprite Punkt to have y-position 157 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 150, 5, "Expected Clone 1 of Körper to have x-position 150 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 169, 5, "Expected Clone 1 of Körper to have y-position 169 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).x, 147, 5, "Expected Clone 2 of Körper to have x-position 147 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).y, 169, 5, "Expected Clone 2 of Körper to have y-position 169 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).x, 150, 5, "Expected Clone 3 of Körper to have x-position 150 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).y, 169, 5, "Expected Clone 3 of Körper to have y-position 169 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).x, 153, 5, "Expected Clone 4 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).y, 169, 5, "Expected Clone 4 of Körper to have y-position 169 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).x, 153, 5, "Expected Clone 5 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).y, 172, 5, "Expected Clone 5 of Körper to have y-position 172 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, 153, 5, "Expected Clone 6 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 173, 5, "Expected Clone 6 of Körper to have y-position 173 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(2).sayText, "Expected Clone 2 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(3).sayText, "Expected Clone 3 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(4).sayText, "Expected Clone 4 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(5).sayText, "Expected Clone 5 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).size, 90, 1, "Expected Clone 2 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).size, 90, 1, "Expected Clone 3 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).size, 90, 1, "Expected Clone 4 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).size, 90, 1, "Expected Clone 5 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(2).visible, "Expected Clone 2 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(3).visible, "Expected Clone 3 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(4).visible, "Expected Clone 4 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(5).visible, "Expected Clone 5 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(2).volume, 100, "Expected Clone 2 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(3).volume, 100, "Expected Clone 3 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(4).volume, 100, "Expected Clone 4 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(5).volume, 100, "Expected Clone 5 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.dragSprite('Punkt', 157.7021100846425, 179.03767664178218, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).currentCostume, 0, "Expected Clone 1 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).currentCostume, 0, "Expected Clone 2 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).currentCostume, 0, "Expected Clone 3 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).currentCostume, 0, "Expected Clone 4 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(1).direction, 90, 1, "Expected Clone 1 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(2).direction, 90, 1, "Expected Clone 2 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(3).direction, 90, 1, "Expected Clone 3 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(4).direction, 90, 1, "Expected Clone 4 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(1).getLayerOrder(), 2, "Expected Clone 1 of Körper to be at layer 2");
  t.assert.equal(t.getSprite("Körper").getClone(2).getLayerOrder(), 3, "Expected Clone 2 of Körper to be at layer 3");
  t.assert.equal(t.getSprite("Körper").getClone(3).getLayerOrder(), 4, "Expected Clone 3 of Körper to be at layer 4");
  t.assert.equal(t.getSprite("Körper").getClone(4).getLayerOrder(), 5, "Expected Clone 4 of Körper to be at layer 5");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, 153, 5, "Expected Sprite Kopf to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 173, 5, "Expected Sprite Kopf to have y-position 173 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 153, 5, "Expected Sprite Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 173, 5, "Expected Sprite Körper to have y-position 173 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -211, 5, "Expected Sprite Punkt to have x-position -211 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -49, 5, "Expected Sprite Punkt to have y-position -49 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).x, 147, 5, "Expected Clone 1 of Körper to have x-position 147 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).y, 169, 5, "Expected Clone 1 of Körper to have y-position 169 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).x, 150, 5, "Expected Clone 2 of Körper to have x-position 150 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).y, 169, 5, "Expected Clone 2 of Körper to have y-position 169 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).x, 153, 5, "Expected Clone 3 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).y, 169, 5, "Expected Clone 3 of Körper to have y-position 169 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).x, 153, 5, "Expected Clone 4 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).y, 172, 5, "Expected Clone 4 of Körper to have y-position 172 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, 153, 5, "Expected Clone 6 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 173, 5, "Expected Clone 6 of Körper to have y-position 173 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(1).sayText, "Expected Clone 1 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(2).sayText, "Expected Clone 2 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(3).sayText, "Expected Clone 3 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(4).sayText, "Expected Clone 4 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(1).size, 90, 1, "Expected Clone 1 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(2).size, 90, 1, "Expected Clone 2 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(3).size, 90, 1, "Expected Clone 3 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).size, 90, 1, "Expected Clone 4 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(1).visible, "Expected Clone 1 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(2).visible, "Expected Clone 2 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(3).visible, "Expected Clone 3 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(4).visible, "Expected Clone 4 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(1).volume, 100, "Expected Clone 1 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(2).volume, 100, "Expected Clone 2 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(3).volume, 100, "Expected Clone 3 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(4).volume, 100, "Expected Clone 4 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.keyPress('up arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 6, "Expected Sprite Körper to have 6 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 0, 1, "Expected Sprite Kopf to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 8, "Expected Sprite Körper to be at layer 8");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 10, "Expected Sprite Punkt to be at layer 10");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 9, "Expected Sprite Goodie to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.withinRange(t.getSprite("Kopf").x, 153, 5, "Expected Sprite Kopf to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 173, 5, "Expected Sprite Kopf to have y-position 173 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 153, 5, "Expected Sprite Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 173, 5, "Expected Sprite Körper to have y-position 173 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -211, 5, "Expected Sprite Punkt to have x-position -211 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -49, 5, "Expected Sprite Punkt to have y-position -49 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, 153, 5, "Expected Clone 6 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 173, 5, "Expected Clone 6 of Körper to have y-position 173 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.keyPress('down arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).currentCostume, 0, "Expected Clone 7 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 7, "Expected Sprite Körper to have 7 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(7).direction, 90, 1, "Expected Clone 7 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.color, 0, "Expected effect color of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.fisheye, 0, "Expected effect fisheye of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.whirl, 0, "Expected effect whirl of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.pixelate, 0, "Expected effect pixelate of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.mosaic, 0, "Expected effect mosaic of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.brightness, 0, "Expected effect brightness of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.ghost, 0, "Expected effect ghost of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 9, "Expected Sprite Körper to be at layer 9");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 11, "Expected Sprite Punkt to be at layer 11");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 10, "Expected Sprite Goodie to be at layer 10");
  t.assert.equal(t.getSprite("Körper").getClone(7).getLayerOrder(), 8, "Expected Clone 7 of Körper to be at layer 8");
  t.assert.withinRange(t.getSprite("Kopf").x, 153, 5, "Expected Sprite Kopf to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 170, 5, "Expected Sprite Kopf to have y-position 170 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 153, 5, "Expected Sprite Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 173, 5, "Expected Sprite Körper to have y-position 173 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -211, 5, "Expected Sprite Punkt to have x-position -211 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -49, 5, "Expected Sprite Punkt to have y-position -49 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).x, 153, 5, "Expected Clone 7 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).y, 173, 5, "Expected Clone 7 of Körper to have y-position 173 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(7).sayText, "Expected Clone 7 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).size, 90, 1, "Expected Clone 7 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(7).visible, "Expected Clone 7 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(7).volume, 100, "Expected Clone 7 of Körper to have volume 100");
  t.keyPress('down arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).currentCostume, 0, "Expected Clone 7 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).currentCostume, 0, "Expected Clone 8 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).currentCostume, 0, "Expected Clone 9 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).currentCostume, 0, "Expected Clone 10 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).currentCostume, 0, "Expected Clone 11 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).currentCostume, 0, "Expected Clone 12 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 12, "Expected Sprite Körper to have 12 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 180, 1, "Expected Sprite Kopf to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(7).direction, 90, 1, "Expected Clone 7 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(8).direction, 90, 1, "Expected Clone 8 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(9).direction, 90, 1, "Expected Clone 9 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(10).direction, 90, 1, "Expected Clone 10 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(11).direction, 90, 1, "Expected Clone 11 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(12).direction, 90, 1, "Expected Clone 12 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.color, 0, "Expected effect color of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.fisheye, 0, "Expected effect fisheye of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.whirl, 0, "Expected effect whirl of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.pixelate, 0, "Expected effect pixelate of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.mosaic, 0, "Expected effect mosaic of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.brightness, 0, "Expected effect brightness of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.ghost, 0, "Expected effect ghost of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.color, 0, "Expected effect color of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.fisheye, 0, "Expected effect fisheye of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.whirl, 0, "Expected effect whirl of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.pixelate, 0, "Expected effect pixelate of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.mosaic, 0, "Expected effect mosaic of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.brightness, 0, "Expected effect brightness of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.ghost, 0, "Expected effect ghost of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.color, 0, "Expected effect color of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.fisheye, 0, "Expected effect fisheye of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.whirl, 0, "Expected effect whirl of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.pixelate, 0, "Expected effect pixelate of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.mosaic, 0, "Expected effect mosaic of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.brightness, 0, "Expected effect brightness of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.ghost, 0, "Expected effect ghost of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.color, 0, "Expected effect color of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.fisheye, 0, "Expected effect fisheye of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.whirl, 0, "Expected effect whirl of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.pixelate, 0, "Expected effect pixelate of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.mosaic, 0, "Expected effect mosaic of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.brightness, 0, "Expected effect brightness of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.ghost, 0, "Expected effect ghost of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.color, 0, "Expected effect color of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.fisheye, 0, "Expected effect fisheye of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.whirl, 0, "Expected effect whirl of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.pixelate, 0, "Expected effect pixelate of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.mosaic, 0, "Expected effect mosaic of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.brightness, 0, "Expected effect brightness of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(11).effects.ghost, 0, "Expected effect ghost of Clone 11 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.color, 0, "Expected effect color of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.fisheye, 0, "Expected effect fisheye of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.whirl, 0, "Expected effect whirl of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.pixelate, 0, "Expected effect pixelate of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.mosaic, 0, "Expected effect mosaic of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.brightness, 0, "Expected effect brightness of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.ghost, 0, "Expected effect ghost of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 14, "Expected Sprite Körper to be at layer 14");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 16, "Expected Sprite Punkt to be at layer 16");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 15, "Expected Sprite Goodie to be at layer 15");
  t.assert.equal(t.getSprite("Körper").getClone(7).getLayerOrder(), 8, "Expected Clone 7 of Körper to be at layer 8");
  t.assert.equal(t.getSprite("Körper").getClone(8).getLayerOrder(), 9, "Expected Clone 8 of Körper to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(9).getLayerOrder(), 10, "Expected Clone 9 of Körper to be at layer 10");
  t.assert.equal(t.getSprite("Körper").getClone(10).getLayerOrder(), 11, "Expected Clone 10 of Körper to be at layer 11");
  t.assert.equal(t.getSprite("Körper").getClone(11).getLayerOrder(), 12, "Expected Clone 11 of Körper to be at layer 12");
  t.assert.equal(t.getSprite("Körper").getClone(12).getLayerOrder(), 13, "Expected Clone 12 of Körper to be at layer 13");
  t.assert.withinRange(t.getSprite("Kopf").x, 153, 5, "Expected Sprite Kopf to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 155, 5, "Expected Sprite Kopf to have y-position 155 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 153, 5, "Expected Sprite Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 158, 5, "Expected Sprite Körper to have y-position 158 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -211, 5, "Expected Sprite Punkt to have x-position -211 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -49, 5, "Expected Sprite Punkt to have y-position -49 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).x, 153, 5, "Expected Clone 7 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).y, 173, 5, "Expected Clone 7 of Körper to have y-position 173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).x, 153, 5, "Expected Clone 8 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).y, 170, 5, "Expected Clone 8 of Körper to have y-position 170 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).x, 153, 5, "Expected Clone 9 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).y, 167, 5, "Expected Clone 9 of Körper to have y-position 167 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(10).x, 153, 5, "Expected Clone 10 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(10).y, 164, 5, "Expected Clone 10 of Körper to have y-position 164 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(11).x, 153, 5, "Expected Clone 11 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(11).y, 161, 5, "Expected Clone 11 of Körper to have y-position 161 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).x, 153, 5, "Expected Clone 12 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).y, 158, 5, "Expected Clone 12 of Körper to have y-position 158 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(7).sayText, "Expected Clone 7 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(8).sayText, "Expected Clone 8 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(9).sayText, "Expected Clone 9 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(10).sayText, "Expected Clone 10 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(11).sayText, "Expected Clone 11 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(12).sayText, "Expected Clone 12 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).size, 90, 1, "Expected Clone 7 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).size, 90, 1, "Expected Clone 8 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).size, 90, 1, "Expected Clone 9 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(10).size, 90, 1, "Expected Clone 10 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(11).size, 90, 1, "Expected Clone 11 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).size, 90, 1, "Expected Clone 12 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(7).visible, "Expected Clone 7 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(8).visible, "Expected Clone 8 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(9).visible, "Expected Clone 9 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(10).visible, "Expected Clone 10 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(11).visible, "Expected Clone 11 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(12).visible, "Expected Clone 12 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(7).volume, 100, "Expected Clone 7 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(8).volume, 100, "Expected Clone 8 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(9).volume, 100, "Expected Clone 9 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(10).volume, 100, "Expected Clone 10 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(11).volume, 100, "Expected Clone 11 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(12).volume, 100, "Expected Clone 12 of Körper to have volume 100");
  t.keyPress('right arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).currentCostume, 0, "Expected Clone 5 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).currentCostume, 0, "Expected Clone 7 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).currentCostume, 0, "Expected Clone 8 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).currentCostume, 0, "Expected Clone 9 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).currentCostume, 0, "Expected Clone 10 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).currentCostume, 0, "Expected Clone 12 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 12, "Expected Sprite Körper to have 12 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(5).direction, 90, 1, "Expected Clone 5 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(7).direction, 90, 1, "Expected Clone 7 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(8).direction, 90, 1, "Expected Clone 8 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(9).direction, 90, 1, "Expected Clone 9 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(10).direction, 90, 1, "Expected Clone 10 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(12).direction, 90, 1, "Expected Clone 12 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.color, 0, "Expected effect color of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.fisheye, 0, "Expected effect fisheye of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.whirl, 0, "Expected effect whirl of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.pixelate, 0, "Expected effect pixelate of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.mosaic, 0, "Expected effect mosaic of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.brightness, 0, "Expected effect brightness of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.ghost, 0, "Expected effect ghost of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.color, 0, "Expected effect color of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.fisheye, 0, "Expected effect fisheye of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.whirl, 0, "Expected effect whirl of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.pixelate, 0, "Expected effect pixelate of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.mosaic, 0, "Expected effect mosaic of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.brightness, 0, "Expected effect brightness of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.ghost, 0, "Expected effect ghost of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.color, 0, "Expected effect color of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.fisheye, 0, "Expected effect fisheye of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.whirl, 0, "Expected effect whirl of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.pixelate, 0, "Expected effect pixelate of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.mosaic, 0, "Expected effect mosaic of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.brightness, 0, "Expected effect brightness of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.ghost, 0, "Expected effect ghost of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.color, 0, "Expected effect color of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.fisheye, 0, "Expected effect fisheye of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.whirl, 0, "Expected effect whirl of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.pixelate, 0, "Expected effect pixelate of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.mosaic, 0, "Expected effect mosaic of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.brightness, 0, "Expected effect brightness of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(10).effects.ghost, 0, "Expected effect ghost of Clone 10 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.color, 0, "Expected effect color of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.fisheye, 0, "Expected effect fisheye of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.whirl, 0, "Expected effect whirl of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.pixelate, 0, "Expected effect pixelate of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.mosaic, 0, "Expected effect mosaic of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.brightness, 0, "Expected effect brightness of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.ghost, 0, "Expected effect ghost of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 14, "Expected Sprite Körper to be at layer 14");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 16, "Expected Sprite Punkt to be at layer 16");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 15, "Expected Sprite Goodie to be at layer 15");
  t.assert.equal(t.getSprite("Körper").getClone(5).getLayerOrder(), 6, "Expected Clone 5 of Körper to be at layer 6");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.equal(t.getSprite("Körper").getClone(7).getLayerOrder(), 8, "Expected Clone 7 of Körper to be at layer 8");
  t.assert.equal(t.getSprite("Körper").getClone(8).getLayerOrder(), 9, "Expected Clone 8 of Körper to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(9).getLayerOrder(), 10, "Expected Clone 9 of Körper to be at layer 10");
  t.assert.equal(t.getSprite("Körper").getClone(10).getLayerOrder(), 11, "Expected Clone 10 of Körper to be at layer 11");
  t.assert.equal(t.getSprite("Körper").getClone(12).getLayerOrder(), 13, "Expected Clone 12 of Körper to be at layer 13");
  t.assert.withinRange(t.getSprite("Kopf").x, 156, 5, "Expected Sprite Kopf to have x-position 156 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 152, 5, "Expected Sprite Kopf to have y-position 152 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 153, 5, "Expected Sprite Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 152, 5, "Expected Sprite Körper to have y-position 152 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, -211, 5, "Expected Sprite Punkt to have x-position -211 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, -49, 5, "Expected Sprite Punkt to have y-position -49 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).x, 153, 5, "Expected Clone 5 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).y, 173, 5, "Expected Clone 5 of Körper to have y-position 173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, 153, 5, "Expected Clone 6 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 170, 5, "Expected Clone 6 of Körper to have y-position 170 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).x, 153, 5, "Expected Clone 7 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).y, 167, 5, "Expected Clone 7 of Körper to have y-position 167 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).x, 153, 5, "Expected Clone 8 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).y, 164, 5, "Expected Clone 8 of Körper to have y-position 164 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).x, 153, 5, "Expected Clone 9 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).y, 161, 5, "Expected Clone 9 of Körper to have y-position 161 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(10).x, 153, 5, "Expected Clone 10 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(10).y, 158, 5, "Expected Clone 10 of Körper to have y-position 158 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).x, 153, 5, "Expected Clone 12 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).y, 152, 5, "Expected Clone 12 of Körper to have y-position 152 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(5).sayText, "Expected Clone 5 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(7).sayText, "Expected Clone 7 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(8).sayText, "Expected Clone 8 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(9).sayText, "Expected Clone 9 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(10).sayText, "Expected Clone 10 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(12).sayText, "Expected Clone 12 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).size, 90, 1, "Expected Clone 5 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).size, 90, 1, "Expected Clone 7 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).size, 90, 1, "Expected Clone 8 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).size, 90, 1, "Expected Clone 9 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(10).size, 90, 1, "Expected Clone 10 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).size, 90, 1, "Expected Clone 12 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(5).visible, "Expected Clone 5 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(7).visible, "Expected Clone 7 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(8).visible, "Expected Clone 8 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(9).visible, "Expected Clone 9 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(10).visible, "Expected Clone 10 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(12).visible, "Expected Clone 12 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(5).volume, 100, "Expected Clone 5 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(7).volume, 100, "Expected Clone 7 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(8).volume, 100, "Expected Clone 8 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(9).volume, 100, "Expected Clone 9 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(10).volume, 100, "Expected Clone 10 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(12).volume, 100, "Expected Clone 12 of Körper to have volume 100");
  t.dragSprite('Punkt', 154.144990636061, 144.27259338968744, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).currentCostume, 0, "Expected Clone 4 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).currentCostume, 0, "Expected Clone 5 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).currentCostume, 0, "Expected Clone 6 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).currentCostume, 0, "Expected Clone 7 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).currentCostume, 0, "Expected Clone 8 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).currentCostume, 0, "Expected Clone 9 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).currentCostume, 0, "Expected Clone 12 of Körper to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 12, "Expected Sprite Körper to have 12 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(4).direction, 90, 1, "Expected Clone 4 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(5).direction, 90, 1, "Expected Clone 5 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(6).direction, 90, 1, "Expected Clone 6 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(7).direction, 90, 1, "Expected Clone 7 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(8).direction, 90, 1, "Expected Clone 8 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(9).direction, 90, 1, "Expected Clone 9 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").getClone(12).direction, 90, 1, "Expected Clone 12 of Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.color, 0, "Expected effect color of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.fisheye, 0, "Expected effect fisheye of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.whirl, 0, "Expected effect whirl of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.pixelate, 0, "Expected effect pixelate of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.mosaic, 0, "Expected effect mosaic of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.brightness, 0, "Expected effect brightness of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(7).effects.ghost, 0, "Expected effect ghost of Clone 7 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.color, 0, "Expected effect color of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.fisheye, 0, "Expected effect fisheye of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.whirl, 0, "Expected effect whirl of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.pixelate, 0, "Expected effect pixelate of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.mosaic, 0, "Expected effect mosaic of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.brightness, 0, "Expected effect brightness of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(8).effects.ghost, 0, "Expected effect ghost of Clone 8 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.color, 0, "Expected effect color of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.fisheye, 0, "Expected effect fisheye of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.whirl, 0, "Expected effect whirl of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.pixelate, 0, "Expected effect pixelate of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.mosaic, 0, "Expected effect mosaic of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.brightness, 0, "Expected effect brightness of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(9).effects.ghost, 0, "Expected effect ghost of Clone 9 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.color, 0, "Expected effect color of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.fisheye, 0, "Expected effect fisheye of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.whirl, 0, "Expected effect whirl of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.pixelate, 0, "Expected effect pixelate of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.mosaic, 0, "Expected effect mosaic of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.brightness, 0, "Expected effect brightness of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Körper").getClone(12).effects.ghost, 0, "Expected effect ghost of Clone 12 of Körper to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 14, "Expected Sprite Körper to be at layer 14");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 16, "Expected Sprite Punkt to be at layer 16");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 15, "Expected Sprite Goodie to be at layer 15");
  t.assert.equal(t.getSprite("Körper").getClone(4).getLayerOrder(), 5, "Expected Clone 4 of Körper to be at layer 5");
  t.assert.equal(t.getSprite("Körper").getClone(5).getLayerOrder(), 6, "Expected Clone 5 of Körper to be at layer 6");
  t.assert.equal(t.getSprite("Körper").getClone(6).getLayerOrder(), 7, "Expected Clone 6 of Körper to be at layer 7");
  t.assert.equal(t.getSprite("Körper").getClone(7).getLayerOrder(), 8, "Expected Clone 7 of Körper to be at layer 8");
  t.assert.equal(t.getSprite("Körper").getClone(8).getLayerOrder(), 9, "Expected Clone 8 of Körper to be at layer 9");
  t.assert.equal(t.getSprite("Körper").getClone(9).getLayerOrder(), 10, "Expected Clone 9 of Körper to be at layer 10");
  t.assert.equal(t.getSprite("Körper").getClone(12).getLayerOrder(), 13, "Expected Clone 12 of Körper to be at layer 13");
  t.assert.withinRange(t.getSprite("Kopf").x, 159, 5, "Expected Sprite Kopf to have x-position 159 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 152, 5, "Expected Sprite Kopf to have y-position 152 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 156, 5, "Expected Sprite Körper to have x-position 156 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 152, 5, "Expected Sprite Körper to have y-position 152 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 154.144990636061, 5, "Expected Sprite Punkt to have x-position 154.144990636061 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 144.27259338968744, 5, "Expected Sprite Punkt to have y-position 144.27259338968744 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).x, 153, 5, "Expected Clone 4 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).y, 173, 5, "Expected Clone 4 of Körper to have y-position 173 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).x, 153, 5, "Expected Clone 5 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).y, 170, 5, "Expected Clone 5 of Körper to have y-position 170 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).x, 153, 5, "Expected Clone 6 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).y, 167, 5, "Expected Clone 6 of Körper to have y-position 167 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).x, 153, 5, "Expected Clone 7 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).y, 164, 5, "Expected Clone 7 of Körper to have y-position 164 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).x, 153, 5, "Expected Clone 8 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).y, 161, 5, "Expected Clone 8 of Körper to have y-position 161 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).x, 153, 5, "Expected Clone 9 of Körper to have x-position 153 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).y, 158, 5, "Expected Clone 9 of Körper to have y-position 158 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).x, 156, 5, "Expected Clone 12 of Körper to have x-position 156 +-5");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).y, 152, 5, "Expected Clone 12 of Körper to have y-position 152 +-5");
  t.assert.equal(t.getSprite("Kopf").sayText, "Verloren!", "Expected Sprite Kopf to say Verloren!");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(4).sayText, "Expected Clone 4 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(5).sayText, "Expected Clone 5 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(6).sayText, "Expected Clone 6 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(7).sayText, "Expected Clone 7 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(8).sayText, "Expected Clone 8 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(9).sayText, "Expected Clone 9 of Körper not to say anything");
  t.assert.not(t.getSprite("Körper").getClone(12).sayText, "Expected Clone 12 of Körper not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(4).size, 90, 1, "Expected Clone 4 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(5).size, 90, 1, "Expected Clone 5 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(6).size, 90, 1, "Expected Clone 6 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(7).size, 90, 1, "Expected Clone 7 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(8).size, 90, 1, "Expected Clone 8 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(9).size, 90, 1, "Expected Clone 9 of Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Körper").getClone(12).size, 90, 1, "Expected Clone 12 of Körper to have size 90 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(4).visible, "Expected Clone 4 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(5).visible, "Expected Clone 5 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(6).visible, "Expected Clone 6 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(7).visible, "Expected Clone 7 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(8).visible, "Expected Clone 8 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(9).visible, "Expected Clone 9 of Körper to be visible");
  t.assert.ok(t.getSprite("Körper").getClone(12).visible, "Expected Clone 12 of Körper to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(4).volume, 100, "Expected Clone 4 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(5).volume, 100, "Expected Clone 5 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(6).volume, 100, "Expected Clone 6 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(7).volume, 100, "Expected Clone 7 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(8).volume, 100, "Expected Clone 8 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(9).volume, 100, "Expected Clone 9 of Körper to have volume 100");
  t.assert.equal(t.getSprite("Körper").getClone(12).volume, 100, "Expected Clone 12 of Körper to have volume 100");
  await t.runForSteps(100);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Kopf").currentCostume, 0, "Expected Sprite Kopf to have costume 0");
  t.assert.equal(t.getSprite("Körper").currentCostume, 0, "Expected Sprite Körper to have costume 0");
  t.assert.equal(t.getSprite("Punkt").currentCostume, 0, "Expected Sprite Punkt to have costume 0");
  t.assert.equal(t.getSprite("Goodie").currentCostume, 0, "Expected Sprite Goodie to have costume 0");
  t.assert.equal(t.getSprite("Kopf").getCloneCount(), 0, "Expected Sprite Kopf to have 0 clones");
  t.assert.equal(t.getSprite("Körper").getCloneCount(), 0, "Expected Sprite Körper to have 0 clones");
  t.assert.equal(t.getSprite("Punkt").getCloneCount(), 0, "Expected Sprite Punkt to have 0 clones");
  t.assert.equal(t.getSprite("Goodie").getCloneCount(), 0, "Expected Sprite Goodie to have 0 clones");
  t.assert.equal(t.getSprite("Kopf").direction, 90, 1, "Expected Sprite Kopf to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Körper").direction, 90, 1, "Expected Sprite Körper to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Punkt").direction, 90, 1, "Expected Sprite Punkt to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Goodie").direction, 90, 1, "Expected Sprite Goodie to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kopf").effects.color, 0, "Expected effect color of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.fisheye, 0, "Expected effect fisheye of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.whirl, 0, "Expected effect whirl of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.pixelate, 0, "Expected effect pixelate of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.mosaic, 0, "Expected effect mosaic of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.brightness, 0, "Expected effect brightness of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Kopf").effects.ghost, 0, "Expected effect ghost of Sprite Kopf to be 0");
  t.assert.equal(t.getSprite("Körper").effects.color, 0, "Expected effect color of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.fisheye, 0, "Expected effect fisheye of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.whirl, 0, "Expected effect whirl of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.pixelate, 0, "Expected effect pixelate of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.mosaic, 0, "Expected effect mosaic of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.brightness, 0, "Expected effect brightness of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Körper").effects.ghost, 0, "Expected effect ghost of Sprite Körper to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.color, 0, "Expected effect color of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.fisheye, 0, "Expected effect fisheye of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.whirl, 0, "Expected effect whirl of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.pixelate, 0, "Expected effect pixelate of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.mosaic, 0, "Expected effect mosaic of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.brightness, 0, "Expected effect brightness of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Punkt").effects.ghost, 0, "Expected effect ghost of Sprite Punkt to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.color, 0, "Expected effect color of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.fisheye, 0, "Expected effect fisheye of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.whirl, 0, "Expected effect whirl of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.pixelate, 0, "Expected effect pixelate of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.mosaic, 0, "Expected effect mosaic of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.brightness, 0, "Expected effect brightness of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Goodie").effects.ghost, 0, "Expected effect ghost of Sprite Goodie to be 0");
  t.assert.equal(t.getSprite("Kopf").layerOrder, 1, "Expected Sprite Kopf to be at layer 1");
  t.assert.equal(t.getSprite("Körper").layerOrder, 2, "Expected Sprite Körper to be at layer 2");
  t.assert.equal(t.getSprite("Punkt").layerOrder, 4, "Expected Sprite Punkt to be at layer 4");
  t.assert.equal(t.getSprite("Goodie").layerOrder, 3, "Expected Sprite Goodie to be at layer 3");
  t.assert.withinRange(t.getSprite("Kopf").x, 177, 5, "Expected Sprite Kopf to have x-position 177 +-5");
  t.assert.withinRange(t.getSprite("Kopf").y, 152, 5, "Expected Sprite Kopf to have y-position 152 +-5");
  t.assert.withinRange(t.getSprite("Körper").x, 174, 5, "Expected Sprite Körper to have x-position 174 +-5");
  t.assert.withinRange(t.getSprite("Körper").y, 152, 5, "Expected Sprite Körper to have y-position 152 +-5");
  t.assert.withinRange(t.getSprite("Punkt").x, 154.144990636061, 5, "Expected Sprite Punkt to have x-position 154.144990636061 +-5");
  t.assert.withinRange(t.getSprite("Punkt").y, 144.27259338968744, 5, "Expected Sprite Punkt to have y-position 144.27259338968744 +-5");
  t.assert.withinRange(t.getSprite("Goodie").x, 0, 5, "Expected Sprite Goodie to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Goodie").y, 0, 5, "Expected Sprite Goodie to have y-position 0 +-5");
  t.assert.not(t.getSprite("Kopf").sayText, "Expected Sprite Kopf not to say anything");
  t.assert.not(t.getSprite("Körper").sayText, "Expected Sprite Körper not to say anything");
  t.assert.not(t.getSprite("Punkt").sayText, "Expected Sprite Punkt not to say anything");
  t.assert.not(t.getSprite("Goodie").sayText, "Expected Sprite Goodie not to say anything");
  t.assert.withinRange(t.getSprite("Kopf").size, 100, 1, "Expected Sprite Kopf to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Körper").size, 90, 1, "Expected Sprite Körper to have size 90 +-1");
  t.assert.withinRange(t.getSprite("Punkt").size, 100, 1, "Expected Sprite Punkt to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Goodie").size, 100, 1, "Expected Sprite Goodie to have size 100 +-1");
  t.assert.ok(t.getSprite("Kopf").visible, "Expected Sprite Kopf to be visible");
  t.assert.ok(t.getSprite("Körper").visible, "Expected Sprite Körper to be visible");
  t.assert.ok(t.getSprite("Punkt").visible, "Expected Sprite Punkt to be visible");
  t.assert.not(t.getSprite("Goodie").visible, "Expected Sprite Goodie not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Kopf").volume, 100, "Expected Sprite Kopf to have volume 100");
  t.assert.equal(t.getSprite("Körper").volume, 100, "Expected Sprite Körper to have volume 100");
  t.assert.equal(t.getSprite("Punkt").volume, 100, "Expected Sprite Punkt to have volume 100");
  t.assert.equal(t.getSprite("Goodie").volume, 100, "Expected Sprite Goodie to have volume 100");
  t.end();
}

module.exports = [
  {
      test: test0,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687936747021',
      type: 'standard',
  },
  {
      test: test1,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687936747021',
      type: 'standard',
  }
]
