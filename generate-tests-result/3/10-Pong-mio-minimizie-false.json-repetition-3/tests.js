const test0 = async function (t) {
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 56, 1, "Expected Sprite Ball to face in direction 56 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -91.70962427444958, 5, "Expected Sprite Ball to have x-position -91.70962427444958 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 5.591929034707469, 5, "Expected Sprite Ball to have y-position 5.591929034707469 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 0, 5, "Expected Sprite Computer to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.dragSprite('Ball', -143.22599716817643, -79.71556108458832, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 56, 1, "Expected Sprite Ball to face in direction 56 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -134.93562144262603, 5, "Expected Sprite Ball to have x-position -134.93562144262603 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -74.12363204988085, 5, "Expected Sprite Ball to have y-position -74.12363204988085 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 4.533333333333333, 5, "Expected Sprite Computer to have y-position 4.533333333333333 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.dragSprite('Ball', -207.64671893883903, -155.6708098573872, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -56, 1, "Expected Sprite Ball to face in direction -56 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -214.9748449085301, 5, "Expected Sprite Ball to have x-position -214.9748449085301 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -128.79149186947575, 5, "Expected Sprite Ball to have y-position -128.79149186947575 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 9.066666666666666, 5, "Expected Sprite Computer to have y-position 9.066666666666666 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.keyPress('up arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -56, 1, "Expected Sprite Ball to face in direction -56 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -214.95922281760326, 5, "Expected Sprite Ball to have x-position -214.95922281760326 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -78.46413055710853, 5, "Expected Sprite Ball to have y-position -78.46413055710853 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -44, 5, "Expected Sprite Spieler to have y-position -44 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 22.666666666666664, 5, "Expected Sprite Computer to have y-position 22.666666666666664 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.end();
}
const test1 = async function (t) {
  t.dragSprite('Aus-Linie Spieler', -57.83867056794542, 180, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 56, 1, "Expected Sprite Ball to face in direction 56 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -91.70962427444958, 5, "Expected Sprite Ball to have x-position -91.70962427444958 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 5.591929034707469, 5, "Expected Sprite Ball to have y-position 5.591929034707469 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 0, 5, "Expected Sprite Computer to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.keyPress('down arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 56, 1, "Expected Sprite Ball to face in direction 56 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -75.12887282334874, 5, "Expected Sprite Ball to have x-position -75.12887282334874 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 16.775787104122408, 5, "Expected Sprite Ball to have y-position 16.775787104122408 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -104, 5, "Expected Sprite Spieler to have y-position -104 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 9.066666666666666, 5, "Expected Sprite Computer to have y-position 9.066666666666666 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.dragSprite('Ball', 240, -43.56933894019654, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 56, 1, "Expected Sprite Ball to face in direction 56 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 214.04898168258168, 5, "Expected Sprite Ball to have x-position 214.04898168258168 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -26.79355183607413, 5, "Expected Sprite Ball to have y-position -26.79355183607413 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -104, 5, "Expected Sprite Spieler to have y-position -104 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 13.600000000000001, 5, "Expected Sprite Computer to have y-position 13.600000000000001 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.keyPress('up arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 56, 1, "Expected Sprite Ball to face in direction 56 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 214.19588095395954, 5, "Expected Sprite Ball to have x-position 214.19588095395954 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 23.533809476293094, 5, "Expected Sprite Ball to have y-position 23.533809476293094 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -59, 5, "Expected Sprite Spieler to have y-position -59 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 27.200000000000003, 5, "Expected Sprite Computer to have y-position 27.200000000000003 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(100);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 56, 1, "Expected Sprite Ball to face in direction 56 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 214.19588095395954, 5, "Expected Sprite Ball to have x-position 214.19588095395954 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 23.533809476293094, 5, "Expected Sprite Ball to have y-position 23.533809476293094 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -59, 5, "Expected Sprite Spieler to have y-position -59 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 27.200000000000003, 5, "Expected Sprite Computer to have y-position 27.200000000000003 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 56, 1, "Expected Sprite Ball to face in direction 56 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 214.19588095395954, 5, "Expected Sprite Ball to have x-position 214.19588095395954 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 23.533809476293094, 5, "Expected Sprite Ball to have y-position 23.533809476293094 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -59, 5, "Expected Sprite Spieler to have y-position -59 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 27.200000000000003, 5, "Expected Sprite Computer to have y-position 27.200000000000003 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.end();
}
const test2 = async function (t) {
  t.keyPress('down arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 56, 1, "Expected Sprite Ball to face in direction 56 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -83.41924854889916, 5, "Expected Sprite Ball to have x-position -83.41924854889916 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 11.183858069414939, 5, "Expected Sprite Ball to have y-position 11.183858069414939 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -104, 5, "Expected Sprite Spieler to have y-position -104 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 4.533333333333333, 5, "Expected Sprite Computer to have y-position 4.533333333333333 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(68);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 124, 1, "Expected Sprite Ball to face in direction 124 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -108.29037572555045, 5, "Expected Sprite Ball to have x-position -108.29037572555045 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -121.74755684799729, 5, "Expected Sprite Ball to have y-position -121.74755684799729 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -104, 5, "Expected Sprite Spieler to have y-position -104 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -54.400000000000006, 5, "Expected Sprite Computer to have y-position -54.400000000000006 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.keyPress('up arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 124, 1, "Expected Sprite Ball to face in direction 124 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -91.70962427444961, 5, "Expected Sprite Ball to have x-position -91.70962427444961 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -132.93141491741224, 5, "Expected Sprite Ball to have y-position -132.93141491741224 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -36.26666666666668, 5, "Expected Sprite Computer to have y-position -36.26666666666668 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.dragSprite('Ball', -240, -55.343864440917976, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -124, 1, "Expected Sprite Ball to face in direction -124 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -214.04898168258168, 5, "Expected Sprite Ball to have x-position -214.04898168258168 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -72.11965154504038, 5, "Expected Sprite Ball to have y-position -72.11965154504038 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -27.19999999999999, 5, "Expected Sprite Computer to have y-position -27.19999999999999 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -124, 1, "Expected Sprite Ball to face in direction -124 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -214.09794810637428, 5, "Expected Sprite Ball to have x-position -214.09794810637428 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -88.89543864916278, 5, "Expected Sprite Ball to have y-position -88.89543864916278 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -18.133333333333326, 5, "Expected Sprite Computer to have y-position -18.133333333333326 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.dragSprite('Aus-Linie Computer', -213.1367834585902, 180, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -124, 1, "Expected Sprite Ball to face in direction -124 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -214.14691453016687, 5, "Expected Sprite Ball to have x-position -214.14691453016687 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -105.67122575328519, 5, "Expected Sprite Ball to have y-position -105.67122575328519 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -9.066666666666663, 5, "Expected Sprite Computer to have y-position -9.066666666666663 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(5);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -124, 1, "Expected Sprite Ball to face in direction -124 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -214.19588095395946, 5, "Expected Sprite Ball to have x-position -214.19588095395946 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -122.44701285740759, 5, "Expected Sprite Ball to have y-position -122.44701285740759 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 0, 5, "Expected Sprite Computer to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(7);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -124, 1, "Expected Sprite Ball to face in direction -124 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -214.19588095395946, 5, "Expected Sprite Ball to have x-position -214.19588095395946 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -122.44701285740759, 5, "Expected Sprite Ball to have y-position -122.44701285740759 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 0, 5, "Expected Sprite Computer to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.end();
}

module.exports = [
  {
      test: test0,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687936708556',
      type: 'standard',
  },
  {
      test: test1,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687936708556',
      type: 'standard',
  },
  {
      test: test2,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687936708556',
      type: 'standard',
  }
]
