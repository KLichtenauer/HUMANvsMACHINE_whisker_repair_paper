const test0 = async function (t) {
  t.keyPress('right arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.dragSprite('Raumschiff', -143.38812453390096, -8.426523191222245, null);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Stern").getClone(3).currentCostume, 0, "Expected Clone 3 of Stern to have costume 0");
  t.assert.equal(t.getSprite("Stern").getCloneCount(), 3, "Expected Sprite Stern to have 3 clones");
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, 120, 1, "Expected Sprite Schwarzes Loch to face in direction 120 +-1");
  t.assert.equal(t.getSprite("Stern").getClone(3).direction, 90, 1, "Expected Clone 3 of Stern to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Stern").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Stern to be 0");
  t.assert.equal(t.getSprite("Raumschiff").layerOrder, 7, "Expected Sprite Raumschiff to be at layer 7");
  t.assert.equal(t.getSprite("Stern").layerOrder, 6, "Expected Sprite Stern to be at layer 6");
  t.assert.equal(t.getSprite("Stern").getClone(3).getLayerOrder(), 5, "Expected Clone 3 of Stern to be at layer 5");
  t.assert.withinRange(t.getSprite("Raumschiff").x, -143.38812453390096, 5, "Expected Sprite Raumschiff to have x-position -143.38812453390096 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, -7.426523191222245, 5, "Expected Sprite Raumschiff to have y-position -7.426523191222245 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, 4.622501868990582, 5, "Expected Sprite Schwarzes Loch to have x-position 4.622501868990582 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -72.578341604963, 5, "Expected Sprite Schwarzes Loch to have y-position -72.578341604963 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).x, 140.16666666666666, 5, "Expected Clone 1 of Stern to have x-position 140.16666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).y, 19.4, 5, "Expected Clone 1 of Stern to have y-position 19.4 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).x, 140.08333333333334, 5, "Expected Clone 2 of Stern to have x-position 140.08333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).y, 20.333333333333332, 5, "Expected Clone 2 of Stern to have y-position 20.333333333333332 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).x, 140, 5, "Expected Clone 3 of Stern to have x-position 140 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).y, 20, 5, "Expected Clone 3 of Stern to have y-position 20 +-5");
  t.assert.not(t.getSprite("Stern").getClone(3).sayText, "Expected Clone 3 of Stern not to say anything");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).size, 50, 1, "Expected Clone 3 of Stern to have size 50 +-1");
  t.assert.ok(t.getSprite("Stern").getClone(3).visible, "Expected Clone 3 of Stern to be visible");
  t.assert.equal(t.getSprite("Stern").getClone(3).volume, 100, "Expected Clone 3 of Stern to have volume 100");
  t.dragSprite('Raumschiff', 240, -180, null);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, 130, 1, "Expected Sprite Schwarzes Loch to face in direction 130 +-1");
  t.assert.withinRange(t.getSprite("Raumschiff").x, 239, 5, "Expected Sprite Raumschiff to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, -179, 5, "Expected Sprite Raumschiff to have y-position -179 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, 8.952628887912777, 5, "Expected Sprite Schwarzes Loch to have x-position 8.952628887912777 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -75.078341604963, 5, "Expected Sprite Schwarzes Loch to have y-position -75.078341604963 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).x, 140.25, 5, "Expected Clone 1 of Stern to have x-position 140.25 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).y, 19.1, 5, "Expected Clone 1 of Stern to have y-position 19.1 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).x, 140.16666666666666, 5, "Expected Clone 2 of Stern to have x-position 140.16666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).y, 20.666666666666668, 5, "Expected Clone 2 of Stern to have y-position 20.666666666666668 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).x, 139.76666666666668, 5, "Expected Clone 3 of Stern to have x-position 139.76666666666668 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).y, 20.1, 5, "Expected Clone 3 of Stern to have y-position 20.1 +-5");
  t.assert.equal(t.getSprite("Raumschiff").sayText, "Überstanden!", "Expected Sprite Raumschiff to say Überstanden!");
  t.assert.equal(t.getSprite("Stern").getVariable("xPosition").value, "-210", "Expected xPosition to have value -210 in Sprite Stern");
  t.assert.equal(t.getSprite("Stern").getVariable("yPosition").value, "150", "Expected yPosition to have value 150 in Sprite Stern");
  t.dragSprite('Raumschiff', -113.7911284364028, -17.95586265338016, null);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Stern").getClone(4).currentCostume, 0, "Expected Clone 4 of Stern to have costume 0");
  t.assert.equal(t.getSprite("Stern").getCloneCount(), 4, "Expected Sprite Stern to have 4 clones");
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, 140, 1, "Expected Sprite Schwarzes Loch to face in direction 140 +-1");
  t.assert.equal(t.getSprite("Stern").getClone(4).direction, 90, 1, "Expected Clone 4 of Stern to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Stern").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Stern to be 0");
  t.assert.equal(t.getSprite("Raumschiff").layerOrder, 8, "Expected Sprite Raumschiff to be at layer 8");
  t.assert.equal(t.getSprite("Stern").layerOrder, 7, "Expected Sprite Stern to be at layer 7");
  t.assert.equal(t.getSprite("Stern").getClone(4).getLayerOrder(), 6, "Expected Clone 4 of Stern to be at layer 6");
  t.assert.withinRange(t.getSprite("Raumschiff").x, -99.69809082185604, 5, "Expected Sprite Raumschiff to have x-position -99.69809082185604 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, -24.59066723160082, 5, "Expected Sprite Raumschiff to have y-position -24.59066723160082 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, 12.782851103507667, 5, "Expected Sprite Schwarzes Loch to have x-position 12.782851103507667 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -78.2922796533957, 5, "Expected Sprite Schwarzes Loch to have y-position -78.2922796533957 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).x, 140.33333333333334, 5, "Expected Clone 1 of Stern to have x-position 140.33333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).y, 18.8, 5, "Expected Clone 1 of Stern to have y-position 18.8 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).x, 140.25, 5, "Expected Clone 2 of Stern to have x-position 140.25 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).y, 21, 5, "Expected Clone 2 of Stern to have y-position 21 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).x, 139.53333333333333, 5, "Expected Clone 3 of Stern to have x-position 139.53333333333333 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).y, 20.2, 5, "Expected Clone 3 of Stern to have y-position 20.2 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).x, -210, 5, "Expected Clone 4 of Stern to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).y, 150, 5, "Expected Clone 4 of Stern to have y-position 150 +-5");
  t.assert.not(t.getSprite("Stern").getClone(4).sayText, "Expected Clone 4 of Stern not to say anything");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).size, 50, 1, "Expected Clone 4 of Stern to have size 50 +-1");
  t.assert.ok(t.getSprite("Stern").getClone(4).visible, "Expected Clone 4 of Stern to be visible");
  t.assert.equal(t.getSprite("Stern").getClone(4).volume, 100, "Expected Clone 4 of Stern to have volume 100");
  t.dragSprite('Raumschiff', 309, -217, null);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Stern").getClone(5).currentCostume, 0, "Expected Clone 5 of Stern to have costume 0");
  t.assert.equal(t.getSprite("Stern").getCloneCount(), 5, "Expected Sprite Stern to have 5 clones");
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, 150, 1, "Expected Sprite Schwarzes Loch to face in direction 150 +-1");
  t.assert.equal(t.getSprite("Stern").getClone(5).direction, 90, 1, "Expected Clone 5 of Stern to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Stern").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Stern to be 0");
  t.assert.equal(t.getSprite("Raumschiff").layerOrder, 9, "Expected Sprite Raumschiff to be at layer 9");
  t.assert.equal(t.getSprite("Stern").layerOrder, 8, "Expected Sprite Stern to be at layer 8");
  t.assert.equal(t.getSprite("Stern").getClone(5).getLayerOrder(), 7, "Expected Clone 5 of Stern to be at layer 7");
  t.assert.withinRange(t.getSprite("Raumschiff").x, 239, 5, "Expected Sprite Raumschiff to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, -195, 5, "Expected Sprite Raumschiff to have y-position -195 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, 15.996789151940364, 5, "Expected Sprite Schwarzes Loch to have x-position 15.996789151940364 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -82.12250186899058, 5, "Expected Sprite Schwarzes Loch to have y-position -82.12250186899058 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).x, 140.41666666666666, 5, "Expected Clone 1 of Stern to have x-position 140.41666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).y, 18.5, 5, "Expected Clone 1 of Stern to have y-position 18.5 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).x, 140.33333333333334, 5, "Expected Clone 2 of Stern to have x-position 140.33333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).y, 21.333333333333332, 5, "Expected Clone 2 of Stern to have y-position 21.333333333333332 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).x, 139.3, 5, "Expected Clone 3 of Stern to have x-position 139.3 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).y, 20.3, 5, "Expected Clone 3 of Stern to have y-position 20.3 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).x, -209.81666666666666, 5, "Expected Clone 4 of Stern to have x-position -209.81666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).y, 150.1, 5, "Expected Clone 4 of Stern to have y-position 150.1 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).x, -210, 5, "Expected Clone 5 of Stern to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).y, 150, 5, "Expected Clone 5 of Stern to have y-position 150 +-5");
  t.assert.not(t.getSprite("Stern").getClone(5).sayText, "Expected Clone 5 of Stern not to say anything");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).size, 50, 1, "Expected Clone 5 of Stern to have size 50 +-1");
  t.assert.ok(t.getSprite("Stern").getClone(5).visible, "Expected Clone 5 of Stern to be visible");
  t.assert.equal(t.getSprite("Stern").getClone(5).volume, 100, "Expected Clone 5 of Stern to have volume 100");
  t.dragSprite('Raumschiff', 104, 44, null);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Stern").getClone(6).currentCostume, 0, "Expected Clone 6 of Stern to have costume 0");
  t.assert.equal(t.getSprite("Stern").getCloneCount(), 6, "Expected Sprite Stern to have 6 clones");
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, 160, 1, "Expected Sprite Schwarzes Loch to face in direction 160 +-1");
  t.assert.equal(t.getSprite("Stern").getClone(6).direction, 90, 1, "Expected Clone 6 of Stern to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Stern").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Stern to be 0");
  t.assert.equal(t.getSprite("Stern").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Stern to be 0");
  t.assert.equal(t.getSprite("Raumschiff").layerOrder, 10, "Expected Sprite Raumschiff to be at layer 10");
  t.assert.equal(t.getSprite("Stern").layerOrder, 9, "Expected Sprite Stern to be at layer 9");
  t.assert.equal(t.getSprite("Stern").getClone(6).getLayerOrder(), 8, "Expected Clone 6 of Stern to be at layer 8");
  t.assert.withinRange(t.getSprite("Raumschiff").x, 124.5, 5, "Expected Sprite Raumschiff to have x-position 124.5 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, 17.9, 5, "Expected Sprite Raumschiff to have y-position 17.9 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, 18.496789151940366, 5, "Expected Sprite Schwarzes Loch to have x-position 18.496789151940366 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -86.45262888791278, 5, "Expected Sprite Schwarzes Loch to have y-position -86.45262888791278 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).x, 140.5, 5, "Expected Clone 1 of Stern to have x-position 140.5 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).y, 18.2, 5, "Expected Clone 1 of Stern to have y-position 18.2 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).x, 140.41666666666666, 5, "Expected Clone 2 of Stern to have x-position 140.41666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).y, 21.666666666666668, 5, "Expected Clone 2 of Stern to have y-position 21.666666666666668 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).x, 139.06666666666666, 5, "Expected Clone 3 of Stern to have x-position 139.06666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).y, 20.4, 5, "Expected Clone 3 of Stern to have y-position 20.4 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).x, -209.63333333333333, 5, "Expected Clone 4 of Stern to have x-position -209.63333333333333 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).y, 150.2, 5, "Expected Clone 4 of Stern to have y-position 150.2 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).x, -210.2, 5, "Expected Clone 5 of Stern to have x-position -210.2 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).y, 149.8, 5, "Expected Clone 5 of Stern to have y-position 149.8 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).x, -210, 5, "Expected Clone 6 of Stern to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).y, 150, 5, "Expected Clone 6 of Stern to have y-position 150 +-5");
  t.assert.not(t.getSprite("Stern").getClone(6).sayText, "Expected Clone 6 of Stern not to say anything");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).size, 50, 1, "Expected Clone 6 of Stern to have size 50 +-1");
  t.assert.ok(t.getSprite("Stern").getClone(6).visible, "Expected Clone 6 of Stern to be visible");
  t.assert.equal(t.getSprite("Stern").getClone(6).volume, 100, "Expected Clone 6 of Stern to have volume 100");
  t.dragSprite('Raumschiff', 240, -180, null);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, 170, 1, "Expected Sprite Schwarzes Loch to face in direction 170 +-1");
  t.assert.withinRange(t.getSprite("Raumschiff").x, 239, 5, "Expected Sprite Raumschiff to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, -184.93333333333334, 5, "Expected Sprite Raumschiff to have y-position -184.93333333333334 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, 20.20688986856871, 5, "Expected Sprite Schwarzes Loch to have x-position 20.20688986856871 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -91.15109199184232, 5, "Expected Sprite Schwarzes Loch to have y-position -91.15109199184232 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).x, 140.58333333333334, 5, "Expected Clone 1 of Stern to have x-position 140.58333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).y, 17.9, 5, "Expected Clone 1 of Stern to have y-position 17.9 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).x, 140.5, 5, "Expected Clone 2 of Stern to have x-position 140.5 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).y, 22, 5, "Expected Clone 2 of Stern to have y-position 22 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).x, 138.83333333333334, 5, "Expected Clone 3 of Stern to have x-position 138.83333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).y, 20.5, 5, "Expected Clone 3 of Stern to have y-position 20.5 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).x, -209.45, 5, "Expected Clone 4 of Stern to have x-position -209.45 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).y, 150.3, 5, "Expected Clone 4 of Stern to have y-position 150.3 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).x, -210.4, 5, "Expected Clone 5 of Stern to have x-position -210.4 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).y, 149.6, 5, "Expected Clone 5 of Stern to have y-position 149.6 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).x, -209.75, 5, "Expected Clone 6 of Stern to have x-position -209.75 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).y, 149.68333333333334, 5, "Expected Clone 6 of Stern to have y-position 149.68333333333334 +-5");
  t.dragSprite('Raumschiff', -136, -66, null);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, 180, 1, "Expected Sprite Schwarzes Loch to face in direction 180 +-1");
  t.assert.withinRange(t.getSprite("Raumschiff").x, -61.83333333333334, 5, "Expected Sprite Raumschiff to have x-position -61.83333333333334 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, -91.16666666666666, 5, "Expected Sprite Raumschiff to have y-position -91.16666666666666 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, 21.07513075690336, 5, "Expected Sprite Schwarzes Loch to have x-position 21.07513075690336 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -96.07513075690336, 5, "Expected Sprite Schwarzes Loch to have y-position -96.07513075690336 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).x, 140.66666666666666, 5, "Expected Clone 1 of Stern to have x-position 140.66666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).y, 17.6, 5, "Expected Clone 1 of Stern to have y-position 17.6 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).x, 140.58333333333334, 5, "Expected Clone 2 of Stern to have x-position 140.58333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).y, 22.333333333333332, 5, "Expected Clone 2 of Stern to have y-position 22.333333333333332 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).x, 138.6, 5, "Expected Clone 3 of Stern to have x-position 138.6 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).y, 20.6, 5, "Expected Clone 3 of Stern to have y-position 20.6 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).x, -209.26666666666668, 5, "Expected Clone 4 of Stern to have x-position -209.26666666666668 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).y, 150.4, 5, "Expected Clone 4 of Stern to have y-position 150.4 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).x, -210.6, 5, "Expected Clone 5 of Stern to have x-position -210.6 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).y, 149.4, 5, "Expected Clone 5 of Stern to have y-position 149.4 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).x, -209.5, 5, "Expected Clone 6 of Stern to have x-position -209.5 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).y, 149.36666666666667, 5, "Expected Clone 6 of Stern to have y-position 149.36666666666667 +-5");
  t.dragSprite('Raumschiff', 137.8652761280884, 15.565395350848434, null);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, -170, 1, "Expected Sprite Schwarzes Loch to face in direction -170 +-1");
  t.assert.withinRange(t.getSprite("Raumschiff").x, 172.09222090247073, 5, "Expected Sprite Raumschiff to have x-position 172.09222090247073 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, -30.947683719321255, 5, "Expected Sprite Raumschiff to have y-position -30.947683719321255 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, 21.07513075690336, 5, "Expected Sprite Schwarzes Loch to have x-position 21.07513075690336 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -101.07513075690336, 5, "Expected Sprite Schwarzes Loch to have y-position -101.07513075690336 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).x, 140.75, 5, "Expected Clone 1 of Stern to have x-position 140.75 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).y, 17.3, 5, "Expected Clone 1 of Stern to have y-position 17.3 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).x, 140.66666666666666, 5, "Expected Clone 2 of Stern to have x-position 140.66666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).y, 22.666666666666668, 5, "Expected Clone 2 of Stern to have y-position 22.666666666666668 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).x, 138.36666666666667, 5, "Expected Clone 3 of Stern to have x-position 138.36666666666667 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).y, 20.7, 5, "Expected Clone 3 of Stern to have y-position 20.7 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).x, -209.08333333333334, 5, "Expected Clone 4 of Stern to have x-position -209.08333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).y, 150.5, 5, "Expected Clone 4 of Stern to have y-position 150.5 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).x, -210.8, 5, "Expected Clone 5 of Stern to have x-position -210.8 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).y, 149.2, 5, "Expected Clone 5 of Stern to have y-position 149.2 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).x, -209.25, 5, "Expected Clone 6 of Stern to have x-position -209.25 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).y, 149.05, 5, "Expected Clone 6 of Stern to have y-position 149.05 +-5");
  t.dragSprite('Raumschiff', 309, -217, null);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, -160, 1, "Expected Sprite Schwarzes Loch to face in direction -160 +-1");
  t.assert.withinRange(t.getSprite("Raumschiff").x, 239, 5, "Expected Sprite Raumschiff to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, -195, 5, "Expected Sprite Raumschiff to have y-position -195 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, 20.20688986856871, 5, "Expected Sprite Schwarzes Loch to have x-position 20.20688986856871 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -105.9991695219644, 5, "Expected Sprite Schwarzes Loch to have y-position -105.9991695219644 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).x, 140.83333333333334, 5, "Expected Clone 1 of Stern to have x-position 140.83333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).y, 17, 5, "Expected Clone 1 of Stern to have y-position 17 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).x, 140.75, 5, "Expected Clone 2 of Stern to have x-position 140.75 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).y, 23, 5, "Expected Clone 2 of Stern to have y-position 23 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).x, 138.13333333333333, 5, "Expected Clone 3 of Stern to have x-position 138.13333333333333 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).y, 20.8, 5, "Expected Clone 3 of Stern to have y-position 20.8 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).x, -208.9, 5, "Expected Clone 4 of Stern to have x-position -208.9 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).y, 150.6, 5, "Expected Clone 4 of Stern to have y-position 150.6 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).x, -211, 5, "Expected Clone 5 of Stern to have x-position -211 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).y, 149, 5, "Expected Clone 5 of Stern to have y-position 149 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).x, -209, 5, "Expected Clone 6 of Stern to have x-position -209 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).y, 148.73333333333332, 5, "Expected Clone 6 of Stern to have y-position 148.73333333333332 +-5");
  t.dragSprite('Raumschiff', -131.281220734165, -7.786114110592024, null);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, -150, 1, "Expected Sprite Schwarzes Loch to face in direction -150 +-1");
  t.assert.withinRange(t.getSprite("Raumschiff").x, -13.872895205054334, 5, "Expected Sprite Raumschiff to have x-position -13.872895205054334 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, -63.57648368110082, 5, "Expected Sprite Raumschiff to have y-position -63.57648368110082 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, 18.496789151940362, 5, "Expected Sprite Schwarzes Loch to have x-position 18.496789151940362 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -110.69763262589395, 5, "Expected Sprite Schwarzes Loch to have y-position -110.69763262589395 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).x, 140.91666666666666, 5, "Expected Clone 1 of Stern to have x-position 140.91666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).y, 16.7, 5, "Expected Clone 1 of Stern to have y-position 16.7 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).x, 140.83333333333334, 5, "Expected Clone 2 of Stern to have x-position 140.83333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).y, 23.333333333333332, 5, "Expected Clone 2 of Stern to have y-position 23.333333333333332 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).x, 137.9, 5, "Expected Clone 3 of Stern to have x-position 137.9 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).y, 20.9, 5, "Expected Clone 3 of Stern to have y-position 20.9 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).x, -208.71666666666667, 5, "Expected Clone 4 of Stern to have x-position -208.71666666666667 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).y, 150.7, 5, "Expected Clone 4 of Stern to have y-position 150.7 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).x, -211.2, 5, "Expected Clone 5 of Stern to have x-position -211.2 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).y, 148.8, 5, "Expected Clone 5 of Stern to have y-position 148.8 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).x, -208.75, 5, "Expected Clone 6 of Stern to have x-position -208.75 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).y, 148.41666666666666, 5, "Expected Clone 6 of Stern to have y-position 148.41666666666666 +-5");
  await t.runForSteps(71);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Stern").getCloneCount(), 0, "Expected Sprite Stern to have 0 clones");
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, 90, 1, "Expected Sprite Schwarzes Loch to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Raumschiff").layerOrder, 4, "Expected Sprite Raumschiff to be at layer 4");
  t.assert.equal(t.getSprite("Stern").layerOrder, 3, "Expected Sprite Stern to be at layer 3");
  t.assert.withinRange(t.getSprite("Raumschiff").x, 239, 5, "Expected Sprite Raumschiff to have x-position 239 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, -193, 5, "Expected Sprite Raumschiff to have y-position -193 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, -10, 5, "Expected Sprite Schwarzes Loch to have x-position -10 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -70, 5, "Expected Sprite Schwarzes Loch to have y-position -70 +-5");
  t.assert.not(t.getSprite("Raumschiff").sayText, "Expected Sprite Raumschiff not to say anything");
  t.assert.withinRange(t.getSprite("Raumschiff").size, 5, 1, "Expected Sprite Raumschiff to have size 5 +-1");
  t.end();
}
const test1 = async function (t) {
  await t.runForSteps(75);
  await t.runForSteps(1);
  t.keyPress('right arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Raumschiff").direction, 0, 1, "Expected Sprite Raumschiff to face in direction 0 +-1");
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, 150, 1, "Expected Sprite Schwarzes Loch to face in direction 150 +-1");
  t.assert.withinRange(t.getSprite("Raumschiff").x, -219.92906647289348, 5, "Expected Sprite Raumschiff to have x-position -219.92906647289348 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, -94.62371137574192, 5, "Expected Sprite Raumschiff to have y-position -94.62371137574192 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, 15.996789151940364, 5, "Expected Sprite Schwarzes Loch to have x-position 15.996789151940364 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -82.12250186899058, 5, "Expected Sprite Schwarzes Loch to have y-position -82.12250186899058 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).x, 143.93333333333334, 5, "Expected Clone 1 of Stern to have x-position 143.93333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).y, 9.2, 5, "Expected Clone 1 of Stern to have y-position 9.2 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).x, 145.25, 5, "Expected Clone 2 of Stern to have x-position 145.25 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).y, 39.75, 5, "Expected Clone 2 of Stern to have y-position 39.75 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).x, 125.53333333333333, 5, "Expected Clone 3 of Stern to have x-position 125.53333333333333 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).y, 20.633333333333333, 5, "Expected Clone 3 of Stern to have y-position 20.633333333333333 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).x, -224.8, 5, "Expected Clone 4 of Stern to have x-position -224.8 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).y, 140.6, 5, "Expected Clone 4 of Stern to have y-position 140.6 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).x, -217.91666666666666, 5, "Expected Clone 5 of Stern to have x-position -217.91666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).y, 160.68333333333334, 5, "Expected Clone 5 of Stern to have y-position 160.68333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).x, -198.66666666666666, 5, "Expected Clone 6 of Stern to have x-position -198.66666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).y, 145.33333333333334, 5, "Expected Clone 6 of Stern to have y-position 145.33333333333334 +-5");
  t.keyPress('right arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Raumschiff").direction, 15, 1, "Expected Sprite Raumschiff to face in direction 15 +-1");
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, 170, 1, "Expected Sprite Schwarzes Loch to face in direction 170 +-1");
  t.assert.withinRange(t.getSprite("Raumschiff").x, -219.67024742779097, 5, "Expected Sprite Raumschiff to have x-position -219.67024742779097 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, -92.65778554945285, 5, "Expected Sprite Raumschiff to have y-position -92.65778554945285 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, 20.20688986856871, 5, "Expected Sprite Schwarzes Loch to have x-position 20.20688986856871 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -91.15109199184232, 5, "Expected Sprite Schwarzes Loch to have y-position -91.15109199184232 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).x, 143.8, 5, "Expected Clone 1 of Stern to have x-position 143.8 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).y, 10.1, 5, "Expected Clone 1 of Stern to have y-position 10.1 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).x, 145.28333333333333, 5, "Expected Clone 2 of Stern to have x-position 145.28333333333333 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).y, 39.71666666666667, 5, "Expected Clone 2 of Stern to have y-position 39.71666666666667 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).x, 125.46666666666667, 5, "Expected Clone 3 of Stern to have x-position 125.46666666666667 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).y, 19.866666666666667, 5, "Expected Clone 3 of Stern to have y-position 19.866666666666667 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).x, -224.6, 5, "Expected Clone 4 of Stern to have x-position -224.6 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).y, 141.03333333333333, 5, "Expected Clone 4 of Stern to have y-position 141.03333333333333 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).x, -218.08333333333334, 5, "Expected Clone 5 of Stern to have x-position -218.08333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).y, 159.71666666666667, 5, "Expected Clone 5 of Stern to have y-position 159.71666666666667 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).x, -198.4, 5, "Expected Clone 6 of Stern to have x-position -198.4 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).y, 145.2, 5, "Expected Clone 6 of Stern to have y-position 145.2 +-5");
  t.dragSprite('Raumschiff', 240, -161.38728366820948, null);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, 180, 1, "Expected Sprite Schwarzes Loch to face in direction 180 +-1");
  t.assert.withinRange(t.getSprite("Raumschiff").x, 240.2588190451025, 5, "Expected Sprite Raumschiff to have x-position 240.2588190451025 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, -160.4213578419204, 5, "Expected Sprite Raumschiff to have y-position -160.4213578419204 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, 21.07513075690336, 5, "Expected Sprite Schwarzes Loch to have x-position 21.07513075690336 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -96.07513075690336, 5, "Expected Sprite Schwarzes Loch to have y-position -96.07513075690336 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).x, 143.73333333333332, 5, "Expected Clone 1 of Stern to have x-position 143.73333333333332 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).y, 10.549999999999999, 5, "Expected Clone 1 of Stern to have y-position 10.549999999999999 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).x, 145.3, 5, "Expected Clone 2 of Stern to have x-position 145.3 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).y, 39.7, 5, "Expected Clone 2 of Stern to have y-position 39.7 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).x, 125.43333333333334, 5, "Expected Clone 3 of Stern to have x-position 125.43333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).y, 19.483333333333334, 5, "Expected Clone 3 of Stern to have y-position 19.483333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).x, -224.5, 5, "Expected Clone 4 of Stern to have x-position -224.5 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).y, 141.25, 5, "Expected Clone 4 of Stern to have y-position 141.25 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).x, -218.16666666666666, 5, "Expected Clone 5 of Stern to have x-position -218.16666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).y, 159.23333333333332, 5, "Expected Clone 5 of Stern to have y-position 159.23333333333332 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).x, -198.26666666666668, 5, "Expected Clone 6 of Stern to have x-position -198.26666666666668 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).y, 145.13333333333333, 5, "Expected Clone 6 of Stern to have y-position 145.13333333333333 +-5");
  t.assert.equal(t.getSprite("Raumschiff").sayText, "Überstanden!", "Expected Sprite Raumschiff to say Überstanden!");
  await t.runForSteps(56);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, 30, 1, "Expected Sprite Schwarzes Loch to face in direction 30 +-1");
  t.assert.withinRange(t.getSprite("Raumschiff").x, 246.2588190451025, 5, "Expected Sprite Raumschiff to have x-position 246.2588190451025 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, -171.92000269019522, 5, "Expected Sprite Raumschiff to have y-position -171.92000269019522 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, -33.49678915194036, 5, "Expected Sprite Schwarzes Loch to have x-position -33.49678915194036 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -86.45262888791278, 5, "Expected Sprite Schwarzes Loch to have y-position -86.45262888791278 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).x, 144.75, 5, "Expected Clone 1 of Stern to have x-position 144.75 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).y, 25.75, 5, "Expected Clone 1 of Stern to have y-position 25.75 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).x, 143.9, 5, "Expected Clone 2 of Stern to have x-position 143.9 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).y, 30.6, 5, "Expected Clone 2 of Stern to have y-position 30.6 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).x, 130.71666666666667, 5, "Expected Clone 3 of Stern to have x-position 130.71666666666667 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).y, 9.066666666666666, 5, "Expected Clone 3 of Stern to have y-position 9.066666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).x, -215.41666666666666, 5, "Expected Clone 4 of Stern to have x-position -215.41666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).y, 154.48333333333332, 5, "Expected Clone 4 of Stern to have y-position 154.48333333333332 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).x, -217.33333333333334, 5, "Expected Clone 5 of Stern to have x-position -217.33333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).y, 142.5, 5, "Expected Clone 5 of Stern to have y-position 142.5 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).x, -196.35, 5, "Expected Clone 6 of Stern to have x-position -196.35 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).y, 141.85, 5, "Expected Clone 6 of Stern to have y-position 141.85 +-5");
  t.keyPress('right arrow', 2);
  await t.runForSteps(2);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Raumschiff").direction, 45, 1, "Expected Sprite Raumschiff to face in direction 45 +-1");
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, 60, 1, "Expected Sprite Schwarzes Loch to face in direction 60 +-1");
  t.assert.withinRange(t.getSprite("Raumschiff").x, 247.20710678118655, 5, "Expected Sprite Raumschiff to have x-position 247.20710678118655 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, -169.38094467893515, 5, "Expected Sprite Raumschiff to have y-position -169.38094467893515 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, -23.952628887912777, 5, "Expected Sprite Schwarzes Loch to have x-position -23.952628887912777 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -75.078341604963, 5, "Expected Sprite Schwarzes Loch to have y-position -75.078341604963 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).x, 145.5, 5, "Expected Clone 1 of Stern to have x-position 145.5 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).y, 25.1, 5, "Expected Clone 1 of Stern to have y-position 25.1 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).x, 143.45, 5, "Expected Clone 2 of Stern to have x-position 143.45 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).y, 28.8, 5, "Expected Clone 2 of Stern to have y-position 28.8 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).x, 132.26666666666665, 5, "Expected Clone 3 of Stern to have x-position 132.26666666666665 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).y, 10.466666666666667, 5, "Expected Clone 3 of Stern to have y-position 10.466666666666667 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).x, -214.16666666666666, 5, "Expected Clone 4 of Stern to have x-position -214.16666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).y, 155.43333333333334, 5, "Expected Clone 4 of Stern to have y-position 155.43333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).x, -215.93333333333334, 5, "Expected Clone 5 of Stern to have x-position -215.93333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).y, 144.15, 5, "Expected Clone 5 of Stern to have y-position 144.15 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).x, -197.8, 5, "Expected Clone 6 of Stern to have x-position -197.8 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).y, 141.8, 5, "Expected Clone 6 of Stern to have y-position 141.8 +-5");
  await t.runForSteps(62);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, -30, 1, "Expected Sprite Schwarzes Loch to face in direction -30 +-1");
  t.assert.withinRange(t.getSprite("Raumschiff").x, 255, 5, "Expected Sprite Raumschiff to have x-position 255 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, -124.8332174641823, 5, "Expected Sprite Raumschiff to have y-position -124.8332174641823 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, -30.996789151940362, 5, "Expected Sprite Schwarzes Loch to have x-position -30.996789151940362 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -115.02775964481614, 5, "Expected Sprite Schwarzes Loch to have y-position -115.02775964481614 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).x, 144.66666666666666, 5, "Expected Clone 1 of Stern to have x-position 144.66666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).y, 16.666666666666668, 5, "Expected Clone 1 of Stern to have y-position 16.666666666666668 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).x, 140.48333333333332, 5, "Expected Clone 2 of Stern to have x-position 140.48333333333332 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).y, 9.649999999999999, 5, "Expected Clone 2 of Stern to have y-position 9.649999999999999 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).x, 153.2, 5, "Expected Clone 3 of Stern to have x-position 153.2 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).y, 27.7, 5, "Expected Clone 3 of Stern to have y-position 27.7 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).x, -195.53333333333333, 5, "Expected Clone 4 of Stern to have x-position -195.53333333333333 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).y, 159.33333333333334, 5, "Expected Clone 4 of Stern to have y-position 159.33333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).x, -201.5, 5, "Expected Clone 5 of Stern to have x-position -201.5 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).y, 167.75, 5, "Expected Clone 5 of Stern to have y-position 167.75 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).x, -215.16666666666666, 5, "Expected Clone 6 of Stern to have x-position -215.16666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).y, 139.83333333333334, 5, "Expected Clone 6 of Stern to have y-position 139.83333333333334 +-5");
  t.dragSprite('Raumschiff', -85.79631338481983, -88.65706754667524, null);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, -20, 1, "Expected Sprite Schwarzes Loch to face in direction -20 +-1");
  t.assert.withinRange(t.getSprite("Raumschiff").x, -85.08920660363327, 5, "Expected Sprite Raumschiff to have x-position -85.08920660363327 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, -87.94996076548868, 5, "Expected Sprite Raumschiff to have y-position -87.94996076548868 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, -33.49678915194036, 5, "Expected Sprite Schwarzes Loch to have x-position -33.49678915194036 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -110.69763262589395, 5, "Expected Sprite Schwarzes Loch to have y-position -110.69763262589395 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).x, 144.1, 5, "Expected Clone 1 of Stern to have x-position 144.1 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).y, 16.7, 5, "Expected Clone 1 of Stern to have y-position 16.7 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).x, 140.66666666666666, 5, "Expected Clone 2 of Stern to have x-position 140.66666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).y, 10, 5, "Expected Clone 2 of Stern to have y-position 10 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).x, 153.1, 5, "Expected Clone 3 of Stern to have x-position 153.1 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).y, 27.516666666666666, 5, "Expected Clone 3 of Stern to have y-position 27.516666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).x, -195.56666666666666, 5, "Expected Clone 4 of Stern to have x-position -195.56666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).y, 158.66666666666666, 5, "Expected Clone 4 of Stern to have y-position 158.66666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).x, -202, 5, "Expected Clone 5 of Stern to have x-position -202 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).y, 167.6, 5, "Expected Clone 5 of Stern to have y-position 167.6 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).x, -214.75, 5, "Expected Clone 6 of Stern to have x-position -214.75 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).y, 139.75, 5, "Expected Clone 6 of Stern to have y-position 139.75 +-5");
  t.keyPress('right arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Raumschiff").direction, 90, 1, "Expected Sprite Raumschiff to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, 20, 1, "Expected Sprite Schwarzes Loch to face in direction 20 +-1");
  t.assert.withinRange(t.getSprite("Raumschiff").x, -81.55014859237322, 5, "Expected Sprite Raumschiff to have x-position -81.55014859237322 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, -86.4840349391996, 5, "Expected Sprite Raumschiff to have y-position -86.4840349391996 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, -35.20688986856871, 5, "Expected Sprite Schwarzes Loch to have x-position -35.20688986856871 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -91.15109199184232, 5, "Expected Sprite Schwarzes Loch to have y-position -91.15109199184232 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).x, 141.83333333333334, 5, "Expected Clone 1 of Stern to have x-position 141.83333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).y, 16.833333333333332, 5, "Expected Clone 1 of Stern to have y-position 16.833333333333332 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).x, 141.4, 5, "Expected Clone 2 of Stern to have x-position 141.4 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).y, 11.4, 5, "Expected Clone 2 of Stern to have y-position 11.4 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).x, 152.7, 5, "Expected Clone 3 of Stern to have x-position 152.7 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).y, 26.78333333333333, 5, "Expected Clone 3 of Stern to have y-position 26.78333333333333 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).x, -195.7, 5, "Expected Clone 4 of Stern to have x-position -195.7 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).y, 156, 5, "Expected Clone 4 of Stern to have y-position 156 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).x, -204, 5, "Expected Clone 5 of Stern to have x-position -204 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).y, 167, 5, "Expected Clone 5 of Stern to have y-position 167 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).x, -213.08333333333334, 5, "Expected Clone 6 of Stern to have x-position -213.08333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).y, 139.41666666666666, 5, "Expected Clone 6 of Stern to have y-position 139.41666666666666 +-5");
  t.keyPress('right arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Raumschiff").direction, 105, 1, "Expected Sprite Raumschiff to face in direction 105 +-1");
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, 40, 1, "Expected Sprite Schwarzes Loch to face in direction 40 +-1");
  t.assert.withinRange(t.getSprite("Raumschiff").x, -79.58422276608415, 5, "Expected Sprite Raumschiff to have x-position -79.58422276608415 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, -86.74285398430213, 5, "Expected Sprite Raumschiff to have y-position -86.74285398430213 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, -30.996789151940362, 5, "Expected Sprite Schwarzes Loch to have x-position -30.996789151940362 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -82.12250186899058, 5, "Expected Sprite Schwarzes Loch to have y-position -82.12250186899058 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).x, 140.7, 5, "Expected Clone 1 of Stern to have x-position 140.7 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).y, 16.9, 5, "Expected Clone 1 of Stern to have y-position 16.9 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).x, 141.76666666666668, 5, "Expected Clone 2 of Stern to have x-position 141.76666666666668 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).y, 12.1, 5, "Expected Clone 2 of Stern to have y-position 12.1 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).x, 152.5, 5, "Expected Clone 3 of Stern to have x-position 152.5 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).y, 26.416666666666664, 5, "Expected Clone 3 of Stern to have y-position 26.416666666666664 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).x, -195.76666666666668, 5, "Expected Clone 4 of Stern to have x-position -195.76666666666668 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).y, 154.66666666666666, 5, "Expected Clone 4 of Stern to have y-position 154.66666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).x, -205, 5, "Expected Clone 5 of Stern to have x-position -205 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).y, 166.7, 5, "Expected Clone 5 of Stern to have y-position 166.7 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).x, -212.25, 5, "Expected Clone 6 of Stern to have x-position -212.25 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).y, 139.25, 5, "Expected Clone 6 of Stern to have y-position 139.25 +-5");
  t.dragSprite('Raumschiff', 309, -217, null);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, 50, 1, "Expected Sprite Schwarzes Loch to face in direction 50 +-1");
  t.assert.withinRange(t.getSprite("Raumschiff").x, 259, 5, "Expected Sprite Raumschiff to have x-position 259 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, -186.2588190451025, 5, "Expected Sprite Raumschiff to have y-position -186.2588190451025 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, -27.782851103507667, 5, "Expected Sprite Schwarzes Loch to have x-position -27.782851103507667 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -78.2922796533957, 5, "Expected Sprite Schwarzes Loch to have y-position -78.2922796533957 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).x, 140.13333333333333, 5, "Expected Clone 1 of Stern to have x-position 140.13333333333333 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).y, 16.933333333333334, 5, "Expected Clone 1 of Stern to have y-position 16.933333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).x, 141.95, 5, "Expected Clone 2 of Stern to have x-position 141.95 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).y, 12.450000000000001, 5, "Expected Clone 2 of Stern to have y-position 12.450000000000001 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).x, 152.4, 5, "Expected Clone 3 of Stern to have x-position 152.4 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).y, 26.233333333333334, 5, "Expected Clone 3 of Stern to have y-position 26.233333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).x, -195.8, 5, "Expected Clone 4 of Stern to have x-position -195.8 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).y, 154, 5, "Expected Clone 4 of Stern to have y-position 154 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).x, -205.5, 5, "Expected Clone 5 of Stern to have x-position -205.5 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).y, 166.55, 5, "Expected Clone 5 of Stern to have y-position 166.55 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).x, -211.83333333333334, 5, "Expected Clone 6 of Stern to have x-position -211.83333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).y, 139.16666666666666, 5, "Expected Clone 6 of Stern to have y-position 139.16666666666666 +-5");
  t.dragSprite('Raumschiff', 95.86189879140079, 90.73789974947692, null);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, 60, 1, "Expected Sprite Schwarzes Loch to face in direction 60 +-1");
  t.assert.withinRange(t.getSprite("Raumschiff").x, 96.82782461768986, 5, "Expected Sprite Raumschiff to have x-position 96.82782461768986 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, 90.4790807043744, 5, "Expected Sprite Raumschiff to have y-position 90.4790807043744 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, -23.952628887912777, 5, "Expected Sprite Schwarzes Loch to have x-position -23.952628887912777 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -75.078341604963, 5, "Expected Sprite Schwarzes Loch to have y-position -75.078341604963 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).x, 139.56666666666666, 5, "Expected Clone 1 of Stern to have x-position 139.56666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).y, 16.966666666666665, 5, "Expected Clone 1 of Stern to have y-position 16.966666666666665 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).x, 142.13333333333333, 5, "Expected Clone 2 of Stern to have x-position 142.13333333333333 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).y, 12.8, 5, "Expected Clone 2 of Stern to have y-position 12.8 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).x, 152.3, 5, "Expected Clone 3 of Stern to have x-position 152.3 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).y, 26.05, 5, "Expected Clone 3 of Stern to have y-position 26.05 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).x, -195.83333333333334, 5, "Expected Clone 4 of Stern to have x-position -195.83333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).y, 153.33333333333334, 5, "Expected Clone 4 of Stern to have y-position 153.33333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).x, -206, 5, "Expected Clone 5 of Stern to have x-position -206 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).y, 166.4, 5, "Expected Clone 5 of Stern to have y-position 166.4 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).x, -211.41666666666666, 5, "Expected Clone 6 of Stern to have x-position -211.41666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).y, 139.08333333333334, 5, "Expected Clone 6 of Stern to have y-position 139.08333333333334 +-5");
  t.keyPress('right arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Raumschiff").direction, 165, 1, "Expected Sprite Raumschiff to face in direction 165 +-1");
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, 110, 1, "Expected Sprite Schwarzes Loch to face in direction 110 +-1");
  t.assert.withinRange(t.getSprite("Raumschiff").x, 100.12570167405244, 5, "Expected Sprite Raumschiff to have x-position 100.12570167405244 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, 87.18120364801182, 5, "Expected Sprite Raumschiff to have y-position 87.18120364801182 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, -0.07596123493896023, 5, "Expected Sprite Schwarzes Loch to have x-position -0.07596123493896023 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -70.86824088833465, 5, "Expected Sprite Schwarzes Loch to have y-position -70.86824088833465 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).x, 136.73333333333335, 5, "Expected Clone 1 of Stern to have x-position 136.73333333333335 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).y, 17.133333333333333, 5, "Expected Clone 1 of Stern to have y-position 17.133333333333333 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).x, 143.05, 5, "Expected Clone 2 of Stern to have x-position 143.05 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).y, 14.55, 5, "Expected Clone 2 of Stern to have y-position 14.55 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).x, 151.8, 5, "Expected Clone 3 of Stern to have x-position 151.8 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).y, 25.133333333333333, 5, "Expected Clone 3 of Stern to have y-position 25.133333333333333 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).x, -196, 5, "Expected Clone 4 of Stern to have x-position -196 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).y, 150, 5, "Expected Clone 4 of Stern to have y-position 150 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).x, -208.5, 5, "Expected Clone 5 of Stern to have x-position -208.5 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).y, 165.65, 5, "Expected Clone 5 of Stern to have y-position 165.65 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).x, -209.33333333333334, 5, "Expected Clone 6 of Stern to have x-position -209.33333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).y, 138.66666666666666, 5, "Expected Clone 6 of Stern to have y-position 138.66666666666666 +-5");
  t.dragSprite('Raumschiff', 240, -180, null);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, 120, 1, "Expected Sprite Schwarzes Loch to face in direction 120 +-1");
  t.assert.withinRange(t.getSprite("Raumschiff").x, 240.2588190451025, 5, "Expected Sprite Raumschiff to have x-position 240.2588190451025 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, -180.96592582628907, 5, "Expected Sprite Raumschiff to have y-position -180.96592582628907 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, 4.622501868990582, 5, "Expected Sprite Schwarzes Loch to have x-position 4.622501868990582 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -72.578341604963, 5, "Expected Sprite Schwarzes Loch to have y-position -72.578341604963 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).x, 136.16666666666666, 5, "Expected Clone 1 of Stern to have x-position 136.16666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(1).y, 17.166666666666668, 5, "Expected Clone 1 of Stern to have y-position 17.166666666666668 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).x, 143.23333333333332, 5, "Expected Clone 2 of Stern to have x-position 143.23333333333332 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(2).y, 14.9, 5, "Expected Clone 2 of Stern to have y-position 14.9 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).x, 151.7, 5, "Expected Clone 3 of Stern to have x-position 151.7 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(3).y, 24.95, 5, "Expected Clone 3 of Stern to have y-position 24.95 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).x, -196.03333333333333, 5, "Expected Clone 4 of Stern to have x-position -196.03333333333333 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(4).y, 149.33333333333334, 5, "Expected Clone 4 of Stern to have y-position 149.33333333333334 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).x, -209, 5, "Expected Clone 5 of Stern to have x-position -209 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(5).y, 165.5, 5, "Expected Clone 5 of Stern to have y-position 165.5 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).x, -208.91666666666666, 5, "Expected Clone 6 of Stern to have x-position -208.91666666666666 +-5");
  t.assert.withinRange(t.getSprite("Stern").getClone(6).y, 138.58333333333334, 5, "Expected Clone 6 of Stern to have y-position 138.58333333333334 +-5");
  await t.runForSteps(57);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Stern").getCloneCount(), 0, "Expected Sprite Stern to have 0 clones");
  t.assert.equal(t.getSprite("Schwarzes Loch").direction, 160, 1, "Expected Sprite Schwarzes Loch to face in direction 160 +-1");
  t.assert.equal(t.getSprite("Raumschiff").layerOrder, 4, "Expected Sprite Raumschiff to be at layer 4");
  t.assert.equal(t.getSprite("Stern").layerOrder, 3, "Expected Sprite Stern to be at layer 3");
  t.assert.withinRange(t.getSprite("Raumschiff").x, 241.29409522551256, 5, "Expected Sprite Raumschiff to have x-position 241.29409522551256 +-5");
  t.assert.withinRange(t.getSprite("Raumschiff").y, -184.82962913144533, 5, "Expected Sprite Raumschiff to have y-position -184.82962913144533 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").x, 18.496789151940366, 5, "Expected Sprite Schwarzes Loch to have x-position 18.496789151940366 +-5");
  t.assert.withinRange(t.getSprite("Schwarzes Loch").y, -86.45262888791278, 5, "Expected Sprite Schwarzes Loch to have y-position -86.45262888791278 +-5");
  t.assert.not(t.getSprite("Raumschiff").sayText, "Expected Sprite Raumschiff not to say anything");
  t.end();
}

module.exports = [
  {
      test: test0,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687936769771',
      type: 'standard',
  },
  {
      test: test1,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687936769771',
      type: 'standard',
  }
]
