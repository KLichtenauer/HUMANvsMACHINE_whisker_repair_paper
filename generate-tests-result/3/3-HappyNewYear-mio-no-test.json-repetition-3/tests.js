const test0 = async function (t) {
  await t.runForSteps(18);
  await t.runForSteps(1);
  await t.runForSteps(29);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Luftballon").getClone(1).currentCostume, 0, "Expected Clone 1 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).currentCostume, 2, "Expected Clone 2 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).currentCostume, 1, "Expected Clone 3 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(5).currentCostume, 0, "Expected Clone 5 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).currentCostume, 2, "Expected Clone 7 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 7, "Expected Sprite Luftballon to have 7 clones");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).direction, 90, 1, "Expected Clone 1 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).direction, 90, 1, "Expected Clone 2 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).direction, 90, 1, "Expected Clone 3 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(5).direction, 90, 1, "Expected Clone 5 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).direction, 90, 1, "Expected Clone 7 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.color, 0, "Expected effect color of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.fisheye, 0, "Expected effect fisheye of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.whirl, 0, "Expected effect whirl of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.pixelate, 0, "Expected effect pixelate of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.mosaic, 0, "Expected effect mosaic of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.brightness, 0, "Expected effect brightness of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.ghost, 0, "Expected effect ghost of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 9, "Expected Sprite Luftballon to be at layer 9");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).getLayerOrder(), 4, "Expected Clone 1 of Luftballon to be at layer 4");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).getLayerOrder(), 5, "Expected Clone 2 of Luftballon to be at layer 5");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).getLayerOrder(), 6, "Expected Clone 3 of Luftballon to be at layer 6");
  t.assert.equal(t.getSprite("Luftballon").getClone(5).getLayerOrder(), 7, "Expected Clone 5 of Luftballon to be at layer 7");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).getLayerOrder(), 8, "Expected Clone 7 of Luftballon to be at layer 8");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).x, 125, 5, "Expected Clone 1 of Luftballon to have x-position 125 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).y, 87, 5, "Expected Clone 1 of Luftballon to have y-position 87 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).x, 162, 5, "Expected Clone 2 of Luftballon to have x-position 162 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).y, -24, 5, "Expected Clone 2 of Luftballon to have y-position -24 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(3).x, -232, 5, "Expected Clone 3 of Luftballon to have x-position -232 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(3).y, -168, 5, "Expected Clone 3 of Luftballon to have y-position -168 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(5).x, -180, 5, "Expected Clone 5 of Luftballon to have x-position -180 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(5).y, 109, 5, "Expected Clone 5 of Luftballon to have y-position 109 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).x, 219, 5, "Expected Clone 7 of Luftballon to have x-position 219 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).y, 83, 5, "Expected Clone 7 of Luftballon to have y-position 83 +-5");
  t.assert.not(t.getSprite("Luftballon").getClone(1).sayText, "Expected Clone 1 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(2).sayText, "Expected Clone 2 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(3).sayText, "Expected Clone 3 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(5).sayText, "Expected Clone 5 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(7).sayText, "Expected Clone 7 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).size, 50, 1, "Expected Clone 1 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).size, 50, 1, "Expected Clone 2 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(3).size, 50, 1, "Expected Clone 3 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(5).size, 50, 1, "Expected Clone 5 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).size, 50, 1, "Expected Clone 7 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Luftballon").getClone(1).visible, "Expected Clone 1 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(2).visible, "Expected Clone 2 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(3).visible, "Expected Clone 3 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(5).visible, "Expected Clone 5 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(7).visible, "Expected Clone 7 of Luftballon to be visible");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).volume, 100, "Expected Clone 1 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).volume, 100, "Expected Clone 2 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).volume, 100, "Expected Clone 3 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(5).volume, 100, "Expected Clone 5 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).volume, 100, "Expected Clone 7 of Luftballon to have volume 100");
  await t.runForSteps(61);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Luftballon").getClone(1).currentCostume, 0, "Expected Clone 1 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).currentCostume, 2, "Expected Clone 4 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).currentCostume, 1, "Expected Clone 8 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).currentCostume, 0, "Expected Clone 12 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).currentCostume, 2, "Expected Clone 15 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 15, "Expected Sprite Luftballon to have 15 clones");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).direction, 90, 1, "Expected Clone 1 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).direction, 90, 1, "Expected Clone 4 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).direction, 90, 1, "Expected Clone 8 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).direction, 90, 1, "Expected Clone 12 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).direction, 90, 1, "Expected Clone 15 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.color, 0, "Expected effect color of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.fisheye, 0, "Expected effect fisheye of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.whirl, 0, "Expected effect whirl of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.pixelate, 0, "Expected effect pixelate of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.mosaic, 0, "Expected effect mosaic of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.brightness, 0, "Expected effect brightness of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.ghost, 0, "Expected effect ghost of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.color, 0, "Expected effect color of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.fisheye, 0, "Expected effect fisheye of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.whirl, 0, "Expected effect whirl of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.pixelate, 0, "Expected effect pixelate of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.mosaic, 0, "Expected effect mosaic of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.brightness, 0, "Expected effect brightness of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.ghost, 0, "Expected effect ghost of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.color, 0, "Expected effect color of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.fisheye, 0, "Expected effect fisheye of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.whirl, 0, "Expected effect whirl of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.pixelate, 0, "Expected effect pixelate of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.mosaic, 0, "Expected effect mosaic of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.brightness, 0, "Expected effect brightness of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.ghost, 0, "Expected effect ghost of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 18, "Expected Sprite Einhorn to be at layer 18");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 16, "Expected Sprite Luftballon to be at layer 16");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).getLayerOrder(), 12, "Expected Clone 1 of Luftballon to be at layer 12");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).getLayerOrder(), 13, "Expected Clone 4 of Luftballon to be at layer 13");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).getLayerOrder(), 14, "Expected Clone 8 of Luftballon to be at layer 14");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).getLayerOrder(), 15, "Expected Clone 12 of Luftballon to be at layer 15");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).getLayerOrder(), 3, "Expected Clone 15 of Luftballon to be at layer 3");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).x, 54, 5, "Expected Clone 1 of Luftballon to have x-position 54 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).y, -108, 5, "Expected Clone 1 of Luftballon to have y-position -108 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).x, 196, 5, "Expected Clone 4 of Luftballon to have x-position 196 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).y, -24, 5, "Expected Clone 4 of Luftballon to have y-position -24 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).x, 36, 5, "Expected Clone 8 of Luftballon to have x-position 36 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).y, 40, 5, "Expected Clone 8 of Luftballon to have y-position 40 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).x, -140, 5, "Expected Clone 12 of Luftballon to have x-position -140 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).y, 63, 5, "Expected Clone 12 of Luftballon to have y-position 63 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(15).x, 223, 5, "Expected Clone 15 of Luftballon to have x-position 223 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(15).y, 21, 5, "Expected Clone 15 of Luftballon to have y-position 21 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").getClone(1).sayText, "Expected Clone 1 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(4).sayText, "Expected Clone 4 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(8).sayText, "Expected Clone 8 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(12).sayText, "Expected Clone 12 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(15).sayText, "Expected Clone 15 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).size, 50, 1, "Expected Clone 1 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).size, 50, 1, "Expected Clone 4 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).size, 50, 1, "Expected Clone 8 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).size, 50, 1, "Expected Clone 12 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(15).size, 50, 1, "Expected Clone 15 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Luftballon").getClone(1).visible, "Expected Clone 1 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(4).visible, "Expected Clone 4 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(8).visible, "Expected Clone 8 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(12).visible, "Expected Clone 12 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(15).visible, "Expected Clone 15 of Luftballon to be visible");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).volume, 100, "Expected Clone 1 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).volume, 100, "Expected Clone 4 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).volume, 100, "Expected Clone 8 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).volume, 100, "Expected Clone 12 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).volume, 100, "Expected Clone 15 of Luftballon to have volume 100");
  await t.runForSteps(41);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Luftballon").getClone(2).currentCostume, 0, "Expected Clone 2 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).currentCostume, 2, "Expected Clone 7 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).currentCostume, 1, "Expected Clone 12 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).currentCostume, 0, "Expected Clone 17 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).currentCostume, 2, "Expected Clone 21 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 21, "Expected Sprite Luftballon to have 21 clones");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).direction, 90, 1, "Expected Clone 2 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).direction, 90, 1, "Expected Clone 7 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).direction, 90, 1, "Expected Clone 12 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).direction, 90, 1, "Expected Clone 17 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).direction, 90, 1, "Expected Clone 21 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.color, 0, "Expected effect color of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.fisheye, 0, "Expected effect fisheye of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.whirl, 0, "Expected effect whirl of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.pixelate, 0, "Expected effect pixelate of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.mosaic, 0, "Expected effect mosaic of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.brightness, 0, "Expected effect brightness of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.ghost, 0, "Expected effect ghost of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.color, 0, "Expected effect color of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.fisheye, 0, "Expected effect fisheye of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.whirl, 0, "Expected effect whirl of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.pixelate, 0, "Expected effect pixelate of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.mosaic, 0, "Expected effect mosaic of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.brightness, 0, "Expected effect brightness of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.ghost, 0, "Expected effect ghost of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.color, 0, "Expected effect color of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.fisheye, 0, "Expected effect fisheye of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.whirl, 0, "Expected effect whirl of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.pixelate, 0, "Expected effect pixelate of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.mosaic, 0, "Expected effect mosaic of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.brightness, 0, "Expected effect brightness of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.ghost, 0, "Expected effect ghost of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.color, 0, "Expected effect color of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.fisheye, 0, "Expected effect fisheye of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.whirl, 0, "Expected effect whirl of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.pixelate, 0, "Expected effect pixelate of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.mosaic, 0, "Expected effect mosaic of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.brightness, 0, "Expected effect brightness of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.ghost, 0, "Expected effect ghost of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 24, "Expected Sprite Einhorn to be at layer 24");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 22, "Expected Sprite Luftballon to be at layer 22");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).getLayerOrder(), 18, "Expected Clone 2 of Luftballon to be at layer 18");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).getLayerOrder(), 19, "Expected Clone 7 of Luftballon to be at layer 19");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).getLayerOrder(), 20, "Expected Clone 12 of Luftballon to be at layer 20");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).getLayerOrder(), 21, "Expected Clone 17 of Luftballon to be at layer 21");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).getLayerOrder(), 9, "Expected Clone 21 of Luftballon to be at layer 9");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).x, 6, 5, "Expected Clone 2 of Luftballon to have x-position 6 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).y, 170, 5, "Expected Clone 2 of Luftballon to have y-position 170 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).x, 175, 5, "Expected Clone 7 of Luftballon to have x-position 175 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).y, 109, 5, "Expected Clone 7 of Luftballon to have y-position 109 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).x, 218, 5, "Expected Clone 12 of Luftballon to have x-position 218 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).y, -166, 5, "Expected Clone 12 of Luftballon to have y-position -166 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(17).x, -171, 5, "Expected Clone 17 of Luftballon to have x-position -171 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(17).y, 48, 5, "Expected Clone 17 of Luftballon to have y-position 48 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(21).x, 40, 5, "Expected Clone 21 of Luftballon to have x-position 40 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(21).y, 82, 5, "Expected Clone 21 of Luftballon to have y-position 82 +-5");
  t.assert.not(t.getSprite("Luftballon").getClone(2).sayText, "Expected Clone 2 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(7).sayText, "Expected Clone 7 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(12).sayText, "Expected Clone 12 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(17).sayText, "Expected Clone 17 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(21).sayText, "Expected Clone 21 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).size, 50, 1, "Expected Clone 2 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).size, 50, 1, "Expected Clone 7 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).size, 50, 1, "Expected Clone 12 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(17).size, 50, 1, "Expected Clone 17 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(21).size, 50, 1, "Expected Clone 21 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Luftballon").getClone(2).visible, "Expected Clone 2 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(7).visible, "Expected Clone 7 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(12).visible, "Expected Clone 12 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(17).visible, "Expected Clone 17 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(21).visible, "Expected Clone 21 of Luftballon to be visible");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).volume, 100, "Expected Clone 2 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).volume, 100, "Expected Clone 7 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).volume, 100, "Expected Clone 12 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).volume, 100, "Expected Clone 17 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).volume, 100, "Expected Clone 21 of Luftballon to have volume 100");
  await t.runForSteps(27);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Luftballon").getClone(2).currentCostume, 0, "Expected Clone 2 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).currentCostume, 2, "Expected Clone 8 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).currentCostume, 1, "Expected Clone 14 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).currentCostume, 0, "Expected Clone 20 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(25).currentCostume, 2, "Expected Clone 25 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 25, "Expected Sprite Luftballon to have 25 clones");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).direction, 90, 1, "Expected Clone 2 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).direction, 90, 1, "Expected Clone 8 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).direction, 90, 1, "Expected Clone 14 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).direction, 90, 1, "Expected Clone 20 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(25).direction, 90, 1, "Expected Clone 25 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.color, 0, "Expected effect color of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.fisheye, 0, "Expected effect fisheye of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.whirl, 0, "Expected effect whirl of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.pixelate, 0, "Expected effect pixelate of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.mosaic, 0, "Expected effect mosaic of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.brightness, 0, "Expected effect brightness of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.ghost, 0, "Expected effect ghost of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.color, 0, "Expected effect color of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.fisheye, 0, "Expected effect fisheye of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.whirl, 0, "Expected effect whirl of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.pixelate, 0, "Expected effect pixelate of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.mosaic, 0, "Expected effect mosaic of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.brightness, 0, "Expected effect brightness of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.ghost, 0, "Expected effect ghost of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.color, 0, "Expected effect color of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.fisheye, 0, "Expected effect fisheye of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.whirl, 0, "Expected effect whirl of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.pixelate, 0, "Expected effect pixelate of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.mosaic, 0, "Expected effect mosaic of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.brightness, 0, "Expected effect brightness of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.ghost, 0, "Expected effect ghost of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(25).effects.color, 0, "Expected effect color of Clone 25 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(25).effects.fisheye, 0, "Expected effect fisheye of Clone 25 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(25).effects.whirl, 0, "Expected effect whirl of Clone 25 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(25).effects.pixelate, 0, "Expected effect pixelate of Clone 25 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(25).effects.mosaic, 0, "Expected effect mosaic of Clone 25 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(25).effects.brightness, 0, "Expected effect brightness of Clone 25 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(25).effects.ghost, 0, "Expected effect ghost of Clone 25 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 28, "Expected Sprite Einhorn to be at layer 28");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 26, "Expected Sprite Luftballon to be at layer 26");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).getLayerOrder(), 22, "Expected Clone 2 of Luftballon to be at layer 22");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).getLayerOrder(), 23, "Expected Clone 8 of Luftballon to be at layer 23");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).getLayerOrder(), 24, "Expected Clone 14 of Luftballon to be at layer 24");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).getLayerOrder(), 25, "Expected Clone 20 of Luftballon to be at layer 25");
  t.assert.equal(t.getSprite("Luftballon").getClone(25).getLayerOrder(), 13, "Expected Clone 25 of Luftballon to be at layer 13");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).x, -13, 5, "Expected Clone 2 of Luftballon to have x-position -13 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).y, -79, 5, "Expected Clone 2 of Luftballon to have y-position -79 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).x, -186, 5, "Expected Clone 8 of Luftballon to have x-position -186 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).y, 102, 5, "Expected Clone 8 of Luftballon to have y-position 102 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(14).x, -189, 5, "Expected Clone 14 of Luftballon to have x-position -189 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(14).y, -171, 5, "Expected Clone 14 of Luftballon to have y-position -171 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(20).x, 51, 5, "Expected Clone 20 of Luftballon to have x-position 51 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(20).y, 89, 5, "Expected Clone 20 of Luftballon to have y-position 89 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(25).x, -130, 5, "Expected Clone 25 of Luftballon to have x-position -130 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(25).y, -13, 5, "Expected Clone 25 of Luftballon to have y-position -13 +-5");
  t.assert.not(t.getSprite("Luftballon").getClone(2).sayText, "Expected Clone 2 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(8).sayText, "Expected Clone 8 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(14).sayText, "Expected Clone 14 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(20).sayText, "Expected Clone 20 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(25).sayText, "Expected Clone 25 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).size, 50, 1, "Expected Clone 2 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).size, 50, 1, "Expected Clone 8 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(14).size, 50, 1, "Expected Clone 14 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(20).size, 50, 1, "Expected Clone 20 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(25).size, 50, 1, "Expected Clone 25 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Luftballon").getClone(2).visible, "Expected Clone 2 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(8).visible, "Expected Clone 8 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(14).visible, "Expected Clone 14 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(20).visible, "Expected Clone 20 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(25).visible, "Expected Clone 25 of Luftballon to be visible");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).volume, 100, "Expected Clone 2 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).volume, 100, "Expected Clone 8 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).volume, 100, "Expected Clone 14 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).volume, 100, "Expected Clone 20 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(25).volume, 100, "Expected Clone 25 of Luftballon to have volume 100");
  await t.runForSteps(18);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Luftballon").getClone(4).currentCostume, 2, "Expected Clone 4 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).currentCostume, 1, "Expected Clone 10 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).currentCostume, 0, "Expected Clone 17 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(24).currentCostume, 2, "Expected Clone 24 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(28).currentCostume, 2, "Expected Clone 28 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 28, "Expected Sprite Luftballon to have 28 clones");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).direction, 90, 1, "Expected Clone 10 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).direction, 90, 1, "Expected Clone 17 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(24).direction, 90, 1, "Expected Clone 24 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(28).direction, 90, 1, "Expected Clone 28 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.color, 0, "Expected effect color of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.fisheye, 0, "Expected effect fisheye of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.whirl, 0, "Expected effect whirl of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.pixelate, 0, "Expected effect pixelate of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.mosaic, 0, "Expected effect mosaic of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.brightness, 0, "Expected effect brightness of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.ghost, 0, "Expected effect ghost of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.color, 0, "Expected effect color of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.fisheye, 0, "Expected effect fisheye of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.whirl, 0, "Expected effect whirl of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.pixelate, 0, "Expected effect pixelate of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.mosaic, 0, "Expected effect mosaic of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.brightness, 0, "Expected effect brightness of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.ghost, 0, "Expected effect ghost of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(24).effects.color, 0, "Expected effect color of Clone 24 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(24).effects.fisheye, 0, "Expected effect fisheye of Clone 24 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(24).effects.whirl, 0, "Expected effect whirl of Clone 24 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(24).effects.pixelate, 0, "Expected effect pixelate of Clone 24 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(24).effects.mosaic, 0, "Expected effect mosaic of Clone 24 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(24).effects.brightness, 0, "Expected effect brightness of Clone 24 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(24).effects.ghost, 0, "Expected effect ghost of Clone 24 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(28).effects.color, 0, "Expected effect color of Clone 28 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(28).effects.fisheye, 0, "Expected effect fisheye of Clone 28 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(28).effects.whirl, 0, "Expected effect whirl of Clone 28 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(28).effects.pixelate, 0, "Expected effect pixelate of Clone 28 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(28).effects.mosaic, 0, "Expected effect mosaic of Clone 28 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(28).effects.brightness, 0, "Expected effect brightness of Clone 28 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(28).effects.ghost, 0, "Expected effect ghost of Clone 28 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 31, "Expected Sprite Einhorn to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 29, "Expected Sprite Luftballon to be at layer 29");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).getLayerOrder(), 26, "Expected Clone 10 of Luftballon to be at layer 26");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).getLayerOrder(), 27, "Expected Clone 17 of Luftballon to be at layer 27");
  t.assert.equal(t.getSprite("Luftballon").getClone(24).getLayerOrder(), 28, "Expected Clone 24 of Luftballon to be at layer 28");
  t.assert.equal(t.getSprite("Luftballon").getClone(28).getLayerOrder(), 20, "Expected Clone 28 of Luftballon to be at layer 20");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(10).x, 234, 5, "Expected Clone 10 of Luftballon to have x-position 234 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(10).y, -109, 5, "Expected Clone 10 of Luftballon to have y-position -109 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(17).x, -115, 5, "Expected Clone 17 of Luftballon to have x-position -115 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(17).y, -173, 5, "Expected Clone 17 of Luftballon to have y-position -173 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(24).x, -119, 5, "Expected Clone 24 of Luftballon to have x-position -119 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(24).y, 100, 5, "Expected Clone 24 of Luftballon to have y-position 100 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(28).x, -136, 5, "Expected Clone 28 of Luftballon to have x-position -136 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(28).y, -71, 5, "Expected Clone 28 of Luftballon to have y-position -71 +-5");
  t.assert.not(t.getSprite("Luftballon").getClone(10).sayText, "Expected Clone 10 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(17).sayText, "Expected Clone 17 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(24).sayText, "Expected Clone 24 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(28).sayText, "Expected Clone 28 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(10).size, 50, 1, "Expected Clone 10 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(17).size, 50, 1, "Expected Clone 17 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(24).size, 50, 1, "Expected Clone 24 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(28).size, 50, 1, "Expected Clone 28 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Luftballon").getClone(10).visible, "Expected Clone 10 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(17).visible, "Expected Clone 17 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(24).visible, "Expected Clone 24 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(28).visible, "Expected Clone 28 of Luftballon to be visible");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).volume, 100, "Expected Clone 10 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).volume, 100, "Expected Clone 17 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(24).volume, 100, "Expected Clone 24 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(28).volume, 100, "Expected Clone 28 of Luftballon to have volume 100");
  await t.runForSteps(47);
  await t.runForSteps(1);
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 14, "Expected Clone 30 of Luftballon to be at layer 14");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, -140, 5, "Expected Clone 30 of Luftballon to have x-position -140 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, 19, 5, "Expected Clone 30 of Luftballon to have y-position 19 +-5");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  t.end();
}

module.exports = [
  {
      test: test0,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687936766966',
      type: 'standard',
  }
]
