const test0 = async function (t) {
  await t.runForSteps(26);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Pirat").currentCostume, 0, "Expected Sprite Pirat to have costume 0");
  t.assert.equal(t.getSprite("Schatzkarte").currentCostume, 0, "Expected Sprite Schatzkarte to have costume 0");
  t.assert.equal(t.getSprite("Vulkaninsel").currentCostume, 0, "Expected Sprite Vulkaninsel to have costume 0");
  t.assert.equal(t.getSprite("Schatztruhe").currentCostume, 0, "Expected Sprite Schatztruhe to have costume 0");
  t.assert.equal(t.getSprite("Mädchen").currentCostume, 0, "Expected Sprite Mädchen to have costume 0");
  t.assert.equal(t.getSprite("Pirat").getCloneCount(), 0, "Expected Sprite Pirat to have 0 clones");
  t.assert.equal(t.getSprite("Schatzkarte").getCloneCount(), 0, "Expected Sprite Schatzkarte to have 0 clones");
  t.assert.equal(t.getSprite("Vulkaninsel").getCloneCount(), 0, "Expected Sprite Vulkaninsel to have 0 clones");
  t.assert.equal(t.getSprite("Schatztruhe").getCloneCount(), 0, "Expected Sprite Schatztruhe to have 0 clones");
  t.assert.equal(t.getSprite("Mädchen").getCloneCount(), 0, "Expected Sprite Mädchen to have 0 clones");
  t.assert.equal(t.getSprite("Pirat").direction, 90, 1, "Expected Sprite Pirat to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatzkarte").direction, 90, 1, "Expected Sprite Schatzkarte to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Vulkaninsel").direction, 90, 1, "Expected Sprite Vulkaninsel to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatztruhe").direction, 90, 1, "Expected Sprite Schatztruhe to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Mädchen").direction, 90, 1, "Expected Sprite Mädchen to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Pirat").effects.color, 0, "Expected effect color of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.fisheye, 0, "Expected effect fisheye of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.whirl, 0, "Expected effect whirl of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.pixelate, 0, "Expected effect pixelate of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.mosaic, 0, "Expected effect mosaic of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.brightness, 0, "Expected effect brightness of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.ghost, 0, "Expected effect ghost of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.color, 0, "Expected effect color of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.whirl, 0, "Expected effect whirl of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.brightness, 0, "Expected effect brightness of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.ghost, 0, "Expected effect ghost of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.color, 0, "Expected effect color of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.fisheye, 0, "Expected effect fisheye of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.whirl, 0, "Expected effect whirl of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.pixelate, 0, "Expected effect pixelate of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.mosaic, 0, "Expected effect mosaic of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.brightness, 0, "Expected effect brightness of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.ghost, 0, "Expected effect ghost of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.color, 0, "Expected effect color of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.whirl, 0, "Expected effect whirl of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.brightness, 0, "Expected effect brightness of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.ghost, 0, "Expected effect ghost of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.color, 0, "Expected effect color of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.fisheye, 0, "Expected effect fisheye of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.whirl, 0, "Expected effect whirl of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.pixelate, 0, "Expected effect pixelate of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.mosaic, 0, "Expected effect mosaic of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.brightness, 0, "Expected effect brightness of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.ghost, 0, "Expected effect ghost of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Pirat").layerOrder, 4, "Expected Sprite Pirat to be at layer 4");
  t.assert.equal(t.getSprite("Schatzkarte").layerOrder, 1, "Expected Sprite Schatzkarte to be at layer 1");
  t.assert.equal(t.getSprite("Vulkaninsel").layerOrder, 3, "Expected Sprite Vulkaninsel to be at layer 3");
  t.assert.equal(t.getSprite("Schatztruhe").layerOrder, 2, "Expected Sprite Schatztruhe to be at layer 2");
  t.assert.equal(t.getSprite("Mädchen").layerOrder, 5, "Expected Sprite Mädchen to be at layer 5");
  t.assert.withinRange(t.getSprite("Pirat").x, -85.83333333333333, 5, "Expected Sprite Pirat to have x-position -85.83333333333333 +-5");
  t.assert.withinRange(t.getSprite("Pirat").y, -68.43333333333334, 5, "Expected Sprite Pirat to have y-position -68.43333333333334 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").x, 0, 5, "Expected Sprite Schatzkarte to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").y, -20, 5, "Expected Sprite Schatzkarte to have y-position -20 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").x, -58, 5, "Expected Sprite Vulkaninsel to have x-position -58 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").y, 10, 5, "Expected Sprite Vulkaninsel to have y-position 10 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").x, -80, 5, "Expected Sprite Schatztruhe to have x-position -80 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").y, 80, 5, "Expected Sprite Schatztruhe to have y-position 80 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").x, 100, 5, "Expected Sprite Mädchen to have x-position 100 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").y, -20, 5, "Expected Sprite Mädchen to have y-position -20 +-5");
  t.assert.equal(t.getSprite("Pirat").sayText, "Ich möchte dir eine Geschichte erzählen: Wir sind über das Meer zur Schatzinsel gefahren.", "Expected Sprite Pirat to say Ich möchte dir eine Geschichte erzählen: Wir sind über das Meer zur Schatzinsel gefahren.");
  t.assert.not(t.getSprite("Schatzkarte").sayText, "Expected Sprite Schatzkarte not to say anything");
  t.assert.not(t.getSprite("Vulkaninsel").sayText, "Expected Sprite Vulkaninsel not to say anything");
  t.assert.not(t.getSprite("Schatztruhe").sayText, "Expected Sprite Schatztruhe not to say anything");
  t.assert.not(t.getSprite("Mädchen").sayText, "Expected Sprite Mädchen not to say anything");
  t.assert.withinRange(t.getSprite("Pirat").size, 63, 1, "Expected Sprite Pirat to have size 63 +-1");
  t.assert.withinRange(t.getSprite("Schatzkarte").size, 120, 1, "Expected Sprite Schatzkarte to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Vulkaninsel").size, 30, 1, "Expected Sprite Vulkaninsel to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Schatztruhe").size, 20, 1, "Expected Sprite Schatztruhe to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Mädchen").size, 20, 1, "Expected Sprite Mädchen to have size 20 +-1");
  t.assert.ok(t.getSprite("Pirat").visible, "Expected Sprite Pirat to be visible");
  t.assert.ok(t.getSprite("Schatzkarte").visible, "Expected Sprite Schatzkarte to be visible");
  t.assert.not(t.getSprite("Vulkaninsel").visible, "Expected Sprite Vulkaninsel not to be visible");
  t.assert.not(t.getSprite("Schatztruhe").visible, "Expected Sprite Schatztruhe not to be visible");
  t.assert.not(t.getSprite("Mädchen").visible, "Expected Sprite Mädchen not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Pirat").volume, 100, "Expected Sprite Pirat to have volume 100");
  t.assert.equal(t.getSprite("Schatzkarte").volume, 100, "Expected Sprite Schatzkarte to have volume 100");
  t.assert.equal(t.getSprite("Vulkaninsel").volume, 100, "Expected Sprite Vulkaninsel to have volume 100");
  t.assert.equal(t.getSprite("Schatztruhe").volume, 100, "Expected Sprite Schatztruhe to have volume 100");
  t.assert.equal(t.getSprite("Mädchen").volume, 100, "Expected Sprite Mädchen to have volume 100");
  await t.runForSteps(76);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Pirat").currentCostume, 0, "Expected Sprite Pirat to have costume 0");
  t.assert.equal(t.getSprite("Schatzkarte").currentCostume, 0, "Expected Sprite Schatzkarte to have costume 0");
  t.assert.equal(t.getSprite("Vulkaninsel").currentCostume, 0, "Expected Sprite Vulkaninsel to have costume 0");
  t.assert.equal(t.getSprite("Schatztruhe").currentCostume, 0, "Expected Sprite Schatztruhe to have costume 0");
  t.assert.equal(t.getSprite("Mädchen").currentCostume, 0, "Expected Sprite Mädchen to have costume 0");
  t.assert.equal(t.getSprite("Pirat").getCloneCount(), 0, "Expected Sprite Pirat to have 0 clones");
  t.assert.equal(t.getSprite("Schatzkarte").getCloneCount(), 0, "Expected Sprite Schatzkarte to have 0 clones");
  t.assert.equal(t.getSprite("Vulkaninsel").getCloneCount(), 0, "Expected Sprite Vulkaninsel to have 0 clones");
  t.assert.equal(t.getSprite("Schatztruhe").getCloneCount(), 0, "Expected Sprite Schatztruhe to have 0 clones");
  t.assert.equal(t.getSprite("Mädchen").getCloneCount(), 0, "Expected Sprite Mädchen to have 0 clones");
  t.assert.equal(t.getSprite("Pirat").direction, 90, 1, "Expected Sprite Pirat to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatzkarte").direction, 90, 1, "Expected Sprite Schatzkarte to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Vulkaninsel").direction, 90, 1, "Expected Sprite Vulkaninsel to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatztruhe").direction, 90, 1, "Expected Sprite Schatztruhe to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Mädchen").direction, 90, 1, "Expected Sprite Mädchen to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Pirat").effects.color, 0, "Expected effect color of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.fisheye, 0, "Expected effect fisheye of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.whirl, 0, "Expected effect whirl of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.pixelate, 0, "Expected effect pixelate of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.mosaic, 0, "Expected effect mosaic of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.brightness, 0, "Expected effect brightness of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.ghost, 0, "Expected effect ghost of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.color, 0, "Expected effect color of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.whirl, 0, "Expected effect whirl of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.brightness, 0, "Expected effect brightness of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.ghost, 0, "Expected effect ghost of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.color, 0, "Expected effect color of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.fisheye, 0, "Expected effect fisheye of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.whirl, 0, "Expected effect whirl of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.pixelate, 0, "Expected effect pixelate of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.mosaic, 0, "Expected effect mosaic of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.brightness, 0, "Expected effect brightness of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.ghost, 0, "Expected effect ghost of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.color, 0, "Expected effect color of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.whirl, 0, "Expected effect whirl of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.brightness, 0, "Expected effect brightness of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.ghost, 0, "Expected effect ghost of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.color, 0, "Expected effect color of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.fisheye, 0, "Expected effect fisheye of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.whirl, 0, "Expected effect whirl of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.pixelate, 0, "Expected effect pixelate of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.mosaic, 0, "Expected effect mosaic of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.brightness, 0, "Expected effect brightness of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.ghost, 0, "Expected effect ghost of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Pirat").layerOrder, 4, "Expected Sprite Pirat to be at layer 4");
  t.assert.equal(t.getSprite("Schatzkarte").layerOrder, 1, "Expected Sprite Schatzkarte to be at layer 1");
  t.assert.equal(t.getSprite("Vulkaninsel").layerOrder, 3, "Expected Sprite Vulkaninsel to be at layer 3");
  t.assert.equal(t.getSprite("Schatztruhe").layerOrder, 2, "Expected Sprite Schatztruhe to be at layer 2");
  t.assert.equal(t.getSprite("Mädchen").layerOrder, 5, "Expected Sprite Mädchen to be at layer 5");
  t.assert.withinRange(t.getSprite("Pirat").x, 74.58333333333331, 5, "Expected Sprite Pirat to have x-position 74.58333333333331 +-5");
  t.assert.withinRange(t.getSprite("Pirat").y, -69.71666666666667, 5, "Expected Sprite Pirat to have y-position -69.71666666666667 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").x, 0, 5, "Expected Sprite Schatzkarte to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").y, -20, 5, "Expected Sprite Schatzkarte to have y-position -20 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").x, -58, 5, "Expected Sprite Vulkaninsel to have x-position -58 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").y, 10, 5, "Expected Sprite Vulkaninsel to have y-position 10 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").x, -80, 5, "Expected Sprite Schatztruhe to have x-position -80 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").y, 80, 5, "Expected Sprite Schatztruhe to have y-position 80 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").x, 100, 5, "Expected Sprite Mädchen to have x-position 100 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").y, -20, 5, "Expected Sprite Mädchen to have y-position -20 +-5");
  t.assert.equal(t.getSprite("Pirat").sayText, "Ich möchte dir eine Geschichte erzählen: Wir sind über das Meer zur Schatzinsel gefahren.", "Expected Sprite Pirat to say Ich möchte dir eine Geschichte erzählen: Wir sind über das Meer zur Schatzinsel gefahren.");
  t.assert.not(t.getSprite("Schatzkarte").sayText, "Expected Sprite Schatzkarte not to say anything");
  t.assert.not(t.getSprite("Vulkaninsel").sayText, "Expected Sprite Vulkaninsel not to say anything");
  t.assert.not(t.getSprite("Schatztruhe").sayText, "Expected Sprite Schatztruhe not to say anything");
  t.assert.not(t.getSprite("Mädchen").sayText, "Expected Sprite Mädchen not to say anything");
  t.assert.withinRange(t.getSprite("Pirat").size, 43, 1, "Expected Sprite Pirat to have size 43 +-1");
  t.assert.withinRange(t.getSprite("Schatzkarte").size, 120, 1, "Expected Sprite Schatzkarte to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Vulkaninsel").size, 30, 1, "Expected Sprite Vulkaninsel to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Schatztruhe").size, 20, 1, "Expected Sprite Schatztruhe to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Mädchen").size, 20, 1, "Expected Sprite Mädchen to have size 20 +-1");
  t.assert.ok(t.getSprite("Pirat").visible, "Expected Sprite Pirat to be visible");
  t.assert.ok(t.getSprite("Schatzkarte").visible, "Expected Sprite Schatzkarte to be visible");
  t.assert.not(t.getSprite("Vulkaninsel").visible, "Expected Sprite Vulkaninsel not to be visible");
  t.assert.not(t.getSprite("Schatztruhe").visible, "Expected Sprite Schatztruhe not to be visible");
  t.assert.not(t.getSprite("Mädchen").visible, "Expected Sprite Mädchen not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Pirat").volume, 100, "Expected Sprite Pirat to have volume 100");
  t.assert.equal(t.getSprite("Schatzkarte").volume, 100, "Expected Sprite Schatzkarte to have volume 100");
  t.assert.equal(t.getSprite("Vulkaninsel").volume, 100, "Expected Sprite Vulkaninsel to have volume 100");
  t.assert.equal(t.getSprite("Schatztruhe").volume, 100, "Expected Sprite Schatztruhe to have volume 100");
  t.assert.equal(t.getSprite("Mädchen").volume, 100, "Expected Sprite Mädchen to have volume 100");
  await t.runForSteps(66);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Pirat").currentCostume, 0, "Expected Sprite Pirat to have costume 0");
  t.assert.equal(t.getSprite("Schatzkarte").currentCostume, 0, "Expected Sprite Schatzkarte to have costume 0");
  t.assert.equal(t.getSprite("Vulkaninsel").currentCostume, 0, "Expected Sprite Vulkaninsel to have costume 0");
  t.assert.equal(t.getSprite("Schatztruhe").currentCostume, 0, "Expected Sprite Schatztruhe to have costume 0");
  t.assert.equal(t.getSprite("Mädchen").currentCostume, 0, "Expected Sprite Mädchen to have costume 0");
  t.assert.equal(t.getSprite("Pirat").getCloneCount(), 0, "Expected Sprite Pirat to have 0 clones");
  t.assert.equal(t.getSprite("Schatzkarte").getCloneCount(), 0, "Expected Sprite Schatzkarte to have 0 clones");
  t.assert.equal(t.getSprite("Vulkaninsel").getCloneCount(), 0, "Expected Sprite Vulkaninsel to have 0 clones");
  t.assert.equal(t.getSprite("Schatztruhe").getCloneCount(), 0, "Expected Sprite Schatztruhe to have 0 clones");
  t.assert.equal(t.getSprite("Mädchen").getCloneCount(), 0, "Expected Sprite Mädchen to have 0 clones");
  t.assert.equal(t.getSprite("Pirat").direction, 90, 1, "Expected Sprite Pirat to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatzkarte").direction, 90, 1, "Expected Sprite Schatzkarte to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Vulkaninsel").direction, 90, 1, "Expected Sprite Vulkaninsel to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatztruhe").direction, 90, 1, "Expected Sprite Schatztruhe to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Mädchen").direction, 90, 1, "Expected Sprite Mädchen to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Pirat").effects.color, 0, "Expected effect color of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.fisheye, 0, "Expected effect fisheye of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.whirl, 0, "Expected effect whirl of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.pixelate, 0, "Expected effect pixelate of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.mosaic, 0, "Expected effect mosaic of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.brightness, 0, "Expected effect brightness of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.ghost, 0, "Expected effect ghost of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.color, 0, "Expected effect color of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.whirl, 0, "Expected effect whirl of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.brightness, 0, "Expected effect brightness of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.ghost, 0, "Expected effect ghost of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.color, 0, "Expected effect color of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.fisheye, 0, "Expected effect fisheye of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.whirl, 0, "Expected effect whirl of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.pixelate, 0, "Expected effect pixelate of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.mosaic, 0, "Expected effect mosaic of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.brightness, 0, "Expected effect brightness of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.ghost, 0, "Expected effect ghost of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.color, 0, "Expected effect color of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.whirl, 0, "Expected effect whirl of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.brightness, 0, "Expected effect brightness of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.ghost, 0, "Expected effect ghost of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.color, 0, "Expected effect color of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.fisheye, 0, "Expected effect fisheye of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.whirl, 0, "Expected effect whirl of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.pixelate, 0, "Expected effect pixelate of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.mosaic, 0, "Expected effect mosaic of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.brightness, 0, "Expected effect brightness of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.ghost, 0, "Expected effect ghost of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Pirat").layerOrder, 4, "Expected Sprite Pirat to be at layer 4");
  t.assert.equal(t.getSprite("Schatzkarte").layerOrder, 1, "Expected Sprite Schatzkarte to be at layer 1");
  t.assert.equal(t.getSprite("Vulkaninsel").layerOrder, 3, "Expected Sprite Vulkaninsel to be at layer 3");
  t.assert.equal(t.getSprite("Schatztruhe").layerOrder, 2, "Expected Sprite Schatztruhe to be at layer 2");
  t.assert.equal(t.getSprite("Mädchen").layerOrder, 5, "Expected Sprite Mädchen to be at layer 5");
  t.assert.withinRange(t.getSprite("Pirat").x, 98.88888888888889, 5, "Expected Sprite Pirat to have x-position 98.88888888888889 +-5");
  t.assert.withinRange(t.getSprite("Pirat").y, -20, 5, "Expected Sprite Pirat to have y-position -20 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").x, 0, 5, "Expected Sprite Schatzkarte to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").y, -20, 5, "Expected Sprite Schatzkarte to have y-position -20 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").x, -58, 5, "Expected Sprite Vulkaninsel to have x-position -58 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").y, 10, 5, "Expected Sprite Vulkaninsel to have y-position 10 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").x, -80, 5, "Expected Sprite Schatztruhe to have x-position -80 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").y, 80, 5, "Expected Sprite Schatztruhe to have y-position 80 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").x, 100, 5, "Expected Sprite Mädchen to have x-position 100 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").y, -20, 5, "Expected Sprite Mädchen to have y-position -20 +-5");
  t.assert.equal(t.getSprite("Pirat").sayText, "Wir sind vielen Gefahren begegnet.", "Expected Sprite Pirat to say Wir sind vielen Gefahren begegnet.");
  t.assert.not(t.getSprite("Schatzkarte").sayText, "Expected Sprite Schatzkarte not to say anything");
  t.assert.not(t.getSprite("Vulkaninsel").sayText, "Expected Sprite Vulkaninsel not to say anything");
  t.assert.not(t.getSprite("Schatztruhe").sayText, "Expected Sprite Schatztruhe not to say anything");
  t.assert.not(t.getSprite("Mädchen").sayText, "Expected Sprite Mädchen not to say anything");
  t.assert.withinRange(t.getSprite("Pirat").size, 26, 1, "Expected Sprite Pirat to have size 26 +-1");
  t.assert.withinRange(t.getSprite("Schatzkarte").size, 120, 1, "Expected Sprite Schatzkarte to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Vulkaninsel").size, 30, 1, "Expected Sprite Vulkaninsel to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Schatztruhe").size, 20, 1, "Expected Sprite Schatztruhe to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Mädchen").size, 20, 1, "Expected Sprite Mädchen to have size 20 +-1");
  t.assert.ok(t.getSprite("Pirat").visible, "Expected Sprite Pirat to be visible");
  t.assert.ok(t.getSprite("Schatzkarte").visible, "Expected Sprite Schatzkarte to be visible");
  t.assert.not(t.getSprite("Vulkaninsel").visible, "Expected Sprite Vulkaninsel not to be visible");
  t.assert.not(t.getSprite("Schatztruhe").visible, "Expected Sprite Schatztruhe not to be visible");
  t.assert.not(t.getSprite("Mädchen").visible, "Expected Sprite Mädchen not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Pirat").volume, 100, "Expected Sprite Pirat to have volume 100");
  t.assert.equal(t.getSprite("Schatzkarte").volume, 100, "Expected Sprite Schatzkarte to have volume 100");
  t.assert.equal(t.getSprite("Vulkaninsel").volume, 100, "Expected Sprite Vulkaninsel to have volume 100");
  t.assert.equal(t.getSprite("Schatztruhe").volume, 100, "Expected Sprite Schatztruhe to have volume 100");
  t.assert.equal(t.getSprite("Mädchen").volume, 100, "Expected Sprite Mädchen to have volume 100");
  await t.runForSteps(79);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Pirat").currentCostume, 0, "Expected Sprite Pirat to have costume 0");
  t.assert.equal(t.getSprite("Schatzkarte").currentCostume, 0, "Expected Sprite Schatzkarte to have costume 0");
  t.assert.equal(t.getSprite("Vulkaninsel").currentCostume, 0, "Expected Sprite Vulkaninsel to have costume 0");
  t.assert.equal(t.getSprite("Schatztruhe").currentCostume, 0, "Expected Sprite Schatztruhe to have costume 0");
  t.assert.equal(t.getSprite("Mädchen").currentCostume, 0, "Expected Sprite Mädchen to have costume 0");
  t.assert.equal(t.getSprite("Pirat").getCloneCount(), 0, "Expected Sprite Pirat to have 0 clones");
  t.assert.equal(t.getSprite("Schatzkarte").getCloneCount(), 0, "Expected Sprite Schatzkarte to have 0 clones");
  t.assert.equal(t.getSprite("Vulkaninsel").getCloneCount(), 0, "Expected Sprite Vulkaninsel to have 0 clones");
  t.assert.equal(t.getSprite("Schatztruhe").getCloneCount(), 0, "Expected Sprite Schatztruhe to have 0 clones");
  t.assert.equal(t.getSprite("Mädchen").getCloneCount(), 0, "Expected Sprite Mädchen to have 0 clones");
  t.assert.equal(t.getSprite("Pirat").direction, 90, 1, "Expected Sprite Pirat to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatzkarte").direction, 90, 1, "Expected Sprite Schatzkarte to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Vulkaninsel").direction, 90, 1, "Expected Sprite Vulkaninsel to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatztruhe").direction, 90, 1, "Expected Sprite Schatztruhe to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Mädchen").direction, 90, 1, "Expected Sprite Mädchen to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Pirat").effects.color, 0, "Expected effect color of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.fisheye, 0, "Expected effect fisheye of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.whirl, 0, "Expected effect whirl of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.pixelate, 0, "Expected effect pixelate of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.mosaic, 0, "Expected effect mosaic of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.brightness, 0, "Expected effect brightness of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.ghost, 0, "Expected effect ghost of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.color, 0, "Expected effect color of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.whirl, 0, "Expected effect whirl of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.brightness, 0, "Expected effect brightness of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.ghost, 0, "Expected effect ghost of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.color, 0, "Expected effect color of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.fisheye, 0, "Expected effect fisheye of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.whirl, 0, "Expected effect whirl of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.pixelate, 0, "Expected effect pixelate of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.mosaic, 0, "Expected effect mosaic of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.brightness, 0, "Expected effect brightness of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.ghost, 0, "Expected effect ghost of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.color, 0, "Expected effect color of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.whirl, 0, "Expected effect whirl of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.brightness, 0, "Expected effect brightness of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.ghost, 0, "Expected effect ghost of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.color, 0, "Expected effect color of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.fisheye, 0, "Expected effect fisheye of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.whirl, 0, "Expected effect whirl of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.pixelate, 0, "Expected effect pixelate of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.mosaic, 0, "Expected effect mosaic of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.brightness, 0, "Expected effect brightness of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.ghost, 0, "Expected effect ghost of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Pirat").layerOrder, 4, "Expected Sprite Pirat to be at layer 4");
  t.assert.equal(t.getSprite("Schatzkarte").layerOrder, 1, "Expected Sprite Schatzkarte to be at layer 1");
  t.assert.equal(t.getSprite("Vulkaninsel").layerOrder, 3, "Expected Sprite Vulkaninsel to be at layer 3");
  t.assert.equal(t.getSprite("Schatztruhe").layerOrder, 2, "Expected Sprite Schatztruhe to be at layer 2");
  t.assert.equal(t.getSprite("Mädchen").layerOrder, 5, "Expected Sprite Mädchen to be at layer 5");
  t.assert.withinRange(t.getSprite("Pirat").x, 36.66666666666667, 5, "Expected Sprite Pirat to have x-position 36.66666666666667 +-5");
  t.assert.withinRange(t.getSprite("Pirat").y, 13.333333333333334, 5, "Expected Sprite Pirat to have y-position 13.333333333333334 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").x, 0, 5, "Expected Sprite Schatzkarte to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").y, -20, 5, "Expected Sprite Schatzkarte to have y-position -20 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").x, -58, 5, "Expected Sprite Vulkaninsel to have x-position -58 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").y, 10, 5, "Expected Sprite Vulkaninsel to have y-position 10 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").x, -80, 5, "Expected Sprite Schatztruhe to have x-position -80 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").y, 80, 5, "Expected Sprite Schatztruhe to have y-position 80 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").x, 100, 5, "Expected Sprite Mädchen to have x-position 100 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").y, -20, 5, "Expected Sprite Mädchen to have y-position -20 +-5");
  t.assert.equal(t.getSprite("Pirat").sayText, "Es gab viele aktive Vulkane auf der Insel.", "Expected Sprite Pirat to say Es gab viele aktive Vulkane auf der Insel.");
  t.assert.not(t.getSprite("Schatzkarte").sayText, "Expected Sprite Schatzkarte not to say anything");
  t.assert.not(t.getSprite("Vulkaninsel").sayText, "Expected Sprite Vulkaninsel not to say anything");
  t.assert.not(t.getSprite("Schatztruhe").sayText, "Expected Sprite Schatztruhe not to say anything");
  t.assert.not(t.getSprite("Mädchen").sayText, "Expected Sprite Mädchen not to say anything");
  t.assert.withinRange(t.getSprite("Pirat").size, 19, 1, "Expected Sprite Pirat to have size 19 +-1");
  t.assert.withinRange(t.getSprite("Schatzkarte").size, 120, 1, "Expected Sprite Schatzkarte to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Vulkaninsel").size, 30, 1, "Expected Sprite Vulkaninsel to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Schatztruhe").size, 20, 1, "Expected Sprite Schatztruhe to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Mädchen").size, 20, 1, "Expected Sprite Mädchen to have size 20 +-1");
  t.assert.ok(t.getSprite("Pirat").visible, "Expected Sprite Pirat to be visible");
  t.assert.ok(t.getSprite("Schatzkarte").visible, "Expected Sprite Schatzkarte to be visible");
  t.assert.not(t.getSprite("Vulkaninsel").visible, "Expected Sprite Vulkaninsel not to be visible");
  t.assert.not(t.getSprite("Schatztruhe").visible, "Expected Sprite Schatztruhe not to be visible");
  t.assert.not(t.getSprite("Mädchen").visible, "Expected Sprite Mädchen not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Pirat").volume, 100, "Expected Sprite Pirat to have volume 100");
  t.assert.equal(t.getSprite("Schatzkarte").volume, 100, "Expected Sprite Schatzkarte to have volume 100");
  t.assert.equal(t.getSprite("Vulkaninsel").volume, 100, "Expected Sprite Vulkaninsel to have volume 100");
  t.assert.equal(t.getSprite("Schatztruhe").volume, 100, "Expected Sprite Schatztruhe to have volume 100");
  t.assert.equal(t.getSprite("Mädchen").volume, 100, "Expected Sprite Mädchen to have volume 100");
  await t.runForSteps(22);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Pirat").currentCostume, 0, "Expected Sprite Pirat to have costume 0");
  t.assert.equal(t.getSprite("Schatzkarte").currentCostume, 0, "Expected Sprite Schatzkarte to have costume 0");
  t.assert.equal(t.getSprite("Vulkaninsel").currentCostume, 0, "Expected Sprite Vulkaninsel to have costume 0");
  t.assert.equal(t.getSprite("Schatztruhe").currentCostume, 0, "Expected Sprite Schatztruhe to have costume 0");
  t.assert.equal(t.getSprite("Mädchen").currentCostume, 0, "Expected Sprite Mädchen to have costume 0");
  t.assert.equal(t.getSprite("Pirat").getCloneCount(), 0, "Expected Sprite Pirat to have 0 clones");
  t.assert.equal(t.getSprite("Schatzkarte").getCloneCount(), 0, "Expected Sprite Schatzkarte to have 0 clones");
  t.assert.equal(t.getSprite("Vulkaninsel").getCloneCount(), 0, "Expected Sprite Vulkaninsel to have 0 clones");
  t.assert.equal(t.getSprite("Schatztruhe").getCloneCount(), 0, "Expected Sprite Schatztruhe to have 0 clones");
  t.assert.equal(t.getSprite("Mädchen").getCloneCount(), 0, "Expected Sprite Mädchen to have 0 clones");
  t.assert.equal(t.getSprite("Pirat").direction, 90, 1, "Expected Sprite Pirat to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatzkarte").direction, 90, 1, "Expected Sprite Schatzkarte to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Vulkaninsel").direction, 90, 1, "Expected Sprite Vulkaninsel to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatztruhe").direction, 90, 1, "Expected Sprite Schatztruhe to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Mädchen").direction, 90, 1, "Expected Sprite Mädchen to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Pirat").effects.color, 0, "Expected effect color of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.fisheye, 0, "Expected effect fisheye of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.whirl, 0, "Expected effect whirl of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.pixelate, 0, "Expected effect pixelate of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.mosaic, 0, "Expected effect mosaic of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.brightness, 0, "Expected effect brightness of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.ghost, 0, "Expected effect ghost of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.color, 0, "Expected effect color of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.whirl, 0, "Expected effect whirl of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.brightness, 0, "Expected effect brightness of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.ghost, 0, "Expected effect ghost of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.color, 0, "Expected effect color of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.fisheye, 0, "Expected effect fisheye of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.whirl, 0, "Expected effect whirl of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.pixelate, 0, "Expected effect pixelate of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.mosaic, 0, "Expected effect mosaic of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.brightness, 0, "Expected effect brightness of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.ghost, 0, "Expected effect ghost of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.color, 0, "Expected effect color of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.whirl, 0, "Expected effect whirl of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.brightness, 0, "Expected effect brightness of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.ghost, 0, "Expected effect ghost of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.color, 0, "Expected effect color of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.fisheye, 0, "Expected effect fisheye of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.whirl, 0, "Expected effect whirl of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.pixelate, 0, "Expected effect pixelate of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.mosaic, 0, "Expected effect mosaic of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.brightness, 0, "Expected effect brightness of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.ghost, 0, "Expected effect ghost of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Pirat").layerOrder, 4, "Expected Sprite Pirat to be at layer 4");
  t.assert.equal(t.getSprite("Schatzkarte").layerOrder, 1, "Expected Sprite Schatzkarte to be at layer 1");
  t.assert.equal(t.getSprite("Vulkaninsel").layerOrder, 3, "Expected Sprite Vulkaninsel to be at layer 3");
  t.assert.equal(t.getSprite("Schatztruhe").layerOrder, 2, "Expected Sprite Schatztruhe to be at layer 2");
  t.assert.equal(t.getSprite("Mädchen").layerOrder, 5, "Expected Sprite Mädchen to be at layer 5");
  t.assert.withinRange(t.getSprite("Pirat").x, 8.5, 5, "Expected Sprite Pirat to have x-position 8.5 +-5");
  t.assert.withinRange(t.getSprite("Pirat").y, 13, 5, "Expected Sprite Pirat to have y-position 13 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").x, 0, 5, "Expected Sprite Schatzkarte to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").y, -20, 5, "Expected Sprite Schatzkarte to have y-position -20 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").x, -58, 5, "Expected Sprite Vulkaninsel to have x-position -58 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").y, 10, 5, "Expected Sprite Vulkaninsel to have y-position 10 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").x, -80, 5, "Expected Sprite Schatztruhe to have x-position -80 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").y, 80, 5, "Expected Sprite Schatztruhe to have y-position 80 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").x, 100, 5, "Expected Sprite Mädchen to have x-position 100 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").y, -20, 5, "Expected Sprite Mädchen to have y-position -20 +-5");
  t.assert.equal(t.getSprite("Pirat").sayText, "Es gab viele aktive Vulkane auf der Insel.", "Expected Sprite Pirat to say Es gab viele aktive Vulkane auf der Insel.");
  t.assert.not(t.getSprite("Schatzkarte").sayText, "Expected Sprite Schatzkarte not to say anything");
  t.assert.not(t.getSprite("Vulkaninsel").sayText, "Expected Sprite Vulkaninsel not to say anything");
  t.assert.not(t.getSprite("Schatztruhe").sayText, "Expected Sprite Schatztruhe not to say anything");
  t.assert.not(t.getSprite("Mädchen").sayText, "Expected Sprite Mädchen not to say anything");
  t.assert.withinRange(t.getSprite("Pirat").size, 19, 1, "Expected Sprite Pirat to have size 19 +-1");
  t.assert.withinRange(t.getSprite("Schatzkarte").size, 120, 1, "Expected Sprite Schatzkarte to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Vulkaninsel").size, 30, 1, "Expected Sprite Vulkaninsel to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Schatztruhe").size, 20, 1, "Expected Sprite Schatztruhe to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Mädchen").size, 20, 1, "Expected Sprite Mädchen to have size 20 +-1");
  t.assert.ok(t.getSprite("Pirat").visible, "Expected Sprite Pirat to be visible");
  t.assert.ok(t.getSprite("Schatzkarte").visible, "Expected Sprite Schatzkarte to be visible");
  t.assert.ok(t.getSprite("Vulkaninsel").visible, "Expected Sprite Vulkaninsel to be visible");
  t.assert.not(t.getSprite("Schatztruhe").visible, "Expected Sprite Schatztruhe not to be visible");
  t.assert.not(t.getSprite("Mädchen").visible, "Expected Sprite Mädchen not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Pirat").volume, 100, "Expected Sprite Pirat to have volume 100");
  t.assert.equal(t.getSprite("Schatzkarte").volume, 100, "Expected Sprite Schatzkarte to have volume 100");
  t.assert.equal(t.getSprite("Vulkaninsel").volume, 100, "Expected Sprite Vulkaninsel to have volume 100");
  t.assert.equal(t.getSprite("Schatztruhe").volume, 100, "Expected Sprite Schatztruhe to have volume 100");
  t.assert.equal(t.getSprite("Mädchen").volume, 100, "Expected Sprite Mädchen to have volume 100");
  await t.runForSteps(14);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Pirat").currentCostume, 0, "Expected Sprite Pirat to have costume 0");
  t.assert.equal(t.getSprite("Schatzkarte").currentCostume, 0, "Expected Sprite Schatzkarte to have costume 0");
  t.assert.equal(t.getSprite("Vulkaninsel").currentCostume, 0, "Expected Sprite Vulkaninsel to have costume 0");
  t.assert.equal(t.getSprite("Schatztruhe").currentCostume, 0, "Expected Sprite Schatztruhe to have costume 0");
  t.assert.equal(t.getSprite("Mädchen").currentCostume, 0, "Expected Sprite Mädchen to have costume 0");
  t.assert.equal(t.getSprite("Pirat").getCloneCount(), 0, "Expected Sprite Pirat to have 0 clones");
  t.assert.equal(t.getSprite("Schatzkarte").getCloneCount(), 0, "Expected Sprite Schatzkarte to have 0 clones");
  t.assert.equal(t.getSprite("Vulkaninsel").getCloneCount(), 0, "Expected Sprite Vulkaninsel to have 0 clones");
  t.assert.equal(t.getSprite("Schatztruhe").getCloneCount(), 0, "Expected Sprite Schatztruhe to have 0 clones");
  t.assert.equal(t.getSprite("Mädchen").getCloneCount(), 0, "Expected Sprite Mädchen to have 0 clones");
  t.assert.equal(t.getSprite("Pirat").direction, 90, 1, "Expected Sprite Pirat to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatzkarte").direction, 90, 1, "Expected Sprite Schatzkarte to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Vulkaninsel").direction, 90, 1, "Expected Sprite Vulkaninsel to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatztruhe").direction, 90, 1, "Expected Sprite Schatztruhe to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Mädchen").direction, 90, 1, "Expected Sprite Mädchen to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Pirat").effects.color, 0, "Expected effect color of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.fisheye, 0, "Expected effect fisheye of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.whirl, 0, "Expected effect whirl of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.pixelate, 0, "Expected effect pixelate of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.mosaic, 0, "Expected effect mosaic of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.brightness, 0, "Expected effect brightness of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.ghost, 0, "Expected effect ghost of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.color, 0, "Expected effect color of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.whirl, 0, "Expected effect whirl of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.brightness, 0, "Expected effect brightness of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.ghost, 0, "Expected effect ghost of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.color, 0, "Expected effect color of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.fisheye, 0, "Expected effect fisheye of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.whirl, 0, "Expected effect whirl of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.pixelate, 0, "Expected effect pixelate of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.mosaic, 0, "Expected effect mosaic of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.brightness, 0, "Expected effect brightness of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.ghost, 0, "Expected effect ghost of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.color, 0, "Expected effect color of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.whirl, 0, "Expected effect whirl of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.brightness, 0, "Expected effect brightness of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.ghost, 0, "Expected effect ghost of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.color, 0, "Expected effect color of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.fisheye, 0, "Expected effect fisheye of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.whirl, 0, "Expected effect whirl of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.pixelate, 0, "Expected effect pixelate of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.mosaic, 0, "Expected effect mosaic of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.brightness, 0, "Expected effect brightness of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.ghost, 0, "Expected effect ghost of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Pirat").layerOrder, 4, "Expected Sprite Pirat to be at layer 4");
  t.assert.equal(t.getSprite("Schatzkarte").layerOrder, 1, "Expected Sprite Schatzkarte to be at layer 1");
  t.assert.equal(t.getSprite("Vulkaninsel").layerOrder, 3, "Expected Sprite Vulkaninsel to be at layer 3");
  t.assert.equal(t.getSprite("Schatztruhe").layerOrder, 2, "Expected Sprite Schatztruhe to be at layer 2");
  t.assert.equal(t.getSprite("Mädchen").layerOrder, 5, "Expected Sprite Mädchen to be at layer 5");
  t.assert.withinRange(t.getSprite("Pirat").x, 1, 5, "Expected Sprite Pirat to have x-position 1 +-5");
  t.assert.withinRange(t.getSprite("Pirat").y, 28, 5, "Expected Sprite Pirat to have y-position 28 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").x, 0, 5, "Expected Sprite Schatzkarte to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").y, -20, 5, "Expected Sprite Schatzkarte to have y-position -20 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").x, -58, 5, "Expected Sprite Vulkaninsel to have x-position -58 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").y, 10, 5, "Expected Sprite Vulkaninsel to have y-position 10 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").x, -80, 5, "Expected Sprite Schatztruhe to have x-position -80 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").y, 80, 5, "Expected Sprite Schatztruhe to have y-position 80 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").x, 100, 5, "Expected Sprite Mädchen to have x-position 100 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").y, -20, 5, "Expected Sprite Mädchen to have y-position -20 +-5");
  t.assert.equal(t.getSprite("Pirat").sayText, "Es gab viele aktive Vulkane auf der Insel.", "Expected Sprite Pirat to say Es gab viele aktive Vulkane auf der Insel.");
  t.assert.not(t.getSprite("Schatzkarte").sayText, "Expected Sprite Schatzkarte not to say anything");
  t.assert.not(t.getSprite("Vulkaninsel").sayText, "Expected Sprite Vulkaninsel not to say anything");
  t.assert.not(t.getSprite("Schatztruhe").sayText, "Expected Sprite Schatztruhe not to say anything");
  t.assert.not(t.getSprite("Mädchen").sayText, "Expected Sprite Mädchen not to say anything");
  t.assert.withinRange(t.getSprite("Pirat").size, 19, 1, "Expected Sprite Pirat to have size 19 +-1");
  t.assert.withinRange(t.getSprite("Schatzkarte").size, 120, 1, "Expected Sprite Schatzkarte to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Vulkaninsel").size, 30, 1, "Expected Sprite Vulkaninsel to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Schatztruhe").size, 20, 1, "Expected Sprite Schatztruhe to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Mädchen").size, 20, 1, "Expected Sprite Mädchen to have size 20 +-1");
  t.assert.ok(t.getSprite("Pirat").visible, "Expected Sprite Pirat to be visible");
  t.assert.ok(t.getSprite("Schatzkarte").visible, "Expected Sprite Schatzkarte to be visible");
  t.assert.ok(t.getSprite("Vulkaninsel").visible, "Expected Sprite Vulkaninsel to be visible");
  t.assert.not(t.getSprite("Schatztruhe").visible, "Expected Sprite Schatztruhe not to be visible");
  t.assert.not(t.getSprite("Mädchen").visible, "Expected Sprite Mädchen not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Pirat").volume, 100, "Expected Sprite Pirat to have volume 100");
  t.assert.equal(t.getSprite("Schatzkarte").volume, 100, "Expected Sprite Schatzkarte to have volume 100");
  t.assert.equal(t.getSprite("Vulkaninsel").volume, 100, "Expected Sprite Vulkaninsel to have volume 100");
  t.assert.equal(t.getSprite("Schatztruhe").volume, 100, "Expected Sprite Schatztruhe to have volume 100");
  t.assert.equal(t.getSprite("Mädchen").volume, 100, "Expected Sprite Mädchen to have volume 100");
  await t.runForSteps(68);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Pirat").currentCostume, 0, "Expected Sprite Pirat to have costume 0");
  t.assert.equal(t.getSprite("Schatzkarte").currentCostume, 0, "Expected Sprite Schatzkarte to have costume 0");
  t.assert.equal(t.getSprite("Vulkaninsel").currentCostume, 0, "Expected Sprite Vulkaninsel to have costume 0");
  t.assert.equal(t.getSprite("Schatztruhe").currentCostume, 0, "Expected Sprite Schatztruhe to have costume 0");
  t.assert.equal(t.getSprite("Mädchen").currentCostume, 0, "Expected Sprite Mädchen to have costume 0");
  t.assert.equal(t.getSprite("Pirat").getCloneCount(), 0, "Expected Sprite Pirat to have 0 clones");
  t.assert.equal(t.getSprite("Schatzkarte").getCloneCount(), 0, "Expected Sprite Schatzkarte to have 0 clones");
  t.assert.equal(t.getSprite("Vulkaninsel").getCloneCount(), 0, "Expected Sprite Vulkaninsel to have 0 clones");
  t.assert.equal(t.getSprite("Schatztruhe").getCloneCount(), 0, "Expected Sprite Schatztruhe to have 0 clones");
  t.assert.equal(t.getSprite("Mädchen").getCloneCount(), 0, "Expected Sprite Mädchen to have 0 clones");
  t.assert.equal(t.getSprite("Pirat").direction, 90, 1, "Expected Sprite Pirat to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatzkarte").direction, 90, 1, "Expected Sprite Schatzkarte to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Vulkaninsel").direction, 90, 1, "Expected Sprite Vulkaninsel to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatztruhe").direction, 90, 1, "Expected Sprite Schatztruhe to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Mädchen").direction, 90, 1, "Expected Sprite Mädchen to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Pirat").effects.color, 0, "Expected effect color of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.fisheye, 0, "Expected effect fisheye of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.whirl, 0, "Expected effect whirl of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.pixelate, 0, "Expected effect pixelate of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.mosaic, 0, "Expected effect mosaic of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.brightness, 0, "Expected effect brightness of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.ghost, 0, "Expected effect ghost of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.color, 0, "Expected effect color of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.whirl, 0, "Expected effect whirl of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.brightness, 0, "Expected effect brightness of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.ghost, 0, "Expected effect ghost of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.color, 0, "Expected effect color of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.fisheye, 0, "Expected effect fisheye of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.whirl, 0, "Expected effect whirl of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.pixelate, 0, "Expected effect pixelate of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.mosaic, 0, "Expected effect mosaic of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.brightness, 0, "Expected effect brightness of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.ghost, 0, "Expected effect ghost of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.color, 0, "Expected effect color of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.whirl, 0, "Expected effect whirl of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.brightness, 0, "Expected effect brightness of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.ghost, 0, "Expected effect ghost of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.color, 0, "Expected effect color of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.fisheye, 0, "Expected effect fisheye of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.whirl, 0, "Expected effect whirl of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.pixelate, 0, "Expected effect pixelate of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.mosaic, 0, "Expected effect mosaic of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.brightness, 0, "Expected effect brightness of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.ghost, 0, "Expected effect ghost of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Pirat").layerOrder, 4, "Expected Sprite Pirat to be at layer 4");
  t.assert.equal(t.getSprite("Schatzkarte").layerOrder, 1, "Expected Sprite Schatzkarte to be at layer 1");
  t.assert.equal(t.getSprite("Vulkaninsel").layerOrder, 3, "Expected Sprite Vulkaninsel to be at layer 3");
  t.assert.equal(t.getSprite("Schatztruhe").layerOrder, 2, "Expected Sprite Schatztruhe to be at layer 2");
  t.assert.equal(t.getSprite("Mädchen").layerOrder, 5, "Expected Sprite Mädchen to be at layer 5");
  t.assert.withinRange(t.getSprite("Pirat").x, -20, 5, "Expected Sprite Pirat to have x-position -20 +-5");
  t.assert.withinRange(t.getSprite("Pirat").y, 70, 5, "Expected Sprite Pirat to have y-position 70 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").x, 0, 5, "Expected Sprite Schatzkarte to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").y, -20, 5, "Expected Sprite Schatzkarte to have y-position -20 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").x, -58, 5, "Expected Sprite Vulkaninsel to have x-position -58 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").y, 10, 5, "Expected Sprite Vulkaninsel to have y-position 10 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").x, -80, 5, "Expected Sprite Schatztruhe to have x-position -80 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").y, 80, 5, "Expected Sprite Schatztruhe to have y-position 80 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").x, 100, 5, "Expected Sprite Mädchen to have x-position 100 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").y, -20, 5, "Expected Sprite Mädchen to have y-position -20 +-5");
  t.assert.equal(t.getSprite("Pirat").sayText, "Endlich hatten wir den Schatz erreicht. ", "Expected Sprite Pirat to say Endlich hatten wir den Schatz erreicht. ");
  t.assert.not(t.getSprite("Schatzkarte").sayText, "Expected Sprite Schatzkarte not to say anything");
  t.assert.not(t.getSprite("Vulkaninsel").sayText, "Expected Sprite Vulkaninsel not to say anything");
  t.assert.not(t.getSprite("Schatztruhe").sayText, "Expected Sprite Schatztruhe not to say anything");
  t.assert.not(t.getSprite("Mädchen").sayText, "Expected Sprite Mädchen not to say anything");
  t.assert.withinRange(t.getSprite("Pirat").size, 19, 1, "Expected Sprite Pirat to have size 19 +-1");
  t.assert.withinRange(t.getSprite("Schatzkarte").size, 120, 1, "Expected Sprite Schatzkarte to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Vulkaninsel").size, 30, 1, "Expected Sprite Vulkaninsel to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Schatztruhe").size, 20, 1, "Expected Sprite Schatztruhe to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Mädchen").size, 20, 1, "Expected Sprite Mädchen to have size 20 +-1");
  t.assert.ok(t.getSprite("Pirat").visible, "Expected Sprite Pirat to be visible");
  t.assert.ok(t.getSprite("Schatzkarte").visible, "Expected Sprite Schatzkarte to be visible");
  t.assert.ok(t.getSprite("Vulkaninsel").visible, "Expected Sprite Vulkaninsel to be visible");
  t.assert.ok(t.getSprite("Schatztruhe").visible, "Expected Sprite Schatztruhe to be visible");
  t.assert.not(t.getSprite("Mädchen").visible, "Expected Sprite Mädchen not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Pirat").volume, 100, "Expected Sprite Pirat to have volume 100");
  t.assert.equal(t.getSprite("Schatzkarte").volume, 100, "Expected Sprite Schatzkarte to have volume 100");
  t.assert.equal(t.getSprite("Vulkaninsel").volume, 100, "Expected Sprite Vulkaninsel to have volume 100");
  t.assert.equal(t.getSprite("Schatztruhe").volume, 100, "Expected Sprite Schatztruhe to have volume 100");
  t.assert.equal(t.getSprite("Mädchen").volume, 100, "Expected Sprite Mädchen to have volume 100");
  await t.runForSteps(36);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Pirat").currentCostume, 0, "Expected Sprite Pirat to have costume 0");
  t.assert.equal(t.getSprite("Schatzkarte").currentCostume, 0, "Expected Sprite Schatzkarte to have costume 0");
  t.assert.equal(t.getSprite("Vulkaninsel").currentCostume, 0, "Expected Sprite Vulkaninsel to have costume 0");
  t.assert.equal(t.getSprite("Schatztruhe").currentCostume, 0, "Expected Sprite Schatztruhe to have costume 0");
  t.assert.equal(t.getSprite("Mädchen").currentCostume, 0, "Expected Sprite Mädchen to have costume 0");
  t.assert.equal(t.getSprite("Pirat").getCloneCount(), 0, "Expected Sprite Pirat to have 0 clones");
  t.assert.equal(t.getSprite("Schatzkarte").getCloneCount(), 0, "Expected Sprite Schatzkarte to have 0 clones");
  t.assert.equal(t.getSprite("Vulkaninsel").getCloneCount(), 0, "Expected Sprite Vulkaninsel to have 0 clones");
  t.assert.equal(t.getSprite("Schatztruhe").getCloneCount(), 0, "Expected Sprite Schatztruhe to have 0 clones");
  t.assert.equal(t.getSprite("Mädchen").getCloneCount(), 0, "Expected Sprite Mädchen to have 0 clones");
  t.assert.equal(t.getSprite("Pirat").direction, 90, 1, "Expected Sprite Pirat to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatzkarte").direction, 90, 1, "Expected Sprite Schatzkarte to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Vulkaninsel").direction, 90, 1, "Expected Sprite Vulkaninsel to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatztruhe").direction, 90, 1, "Expected Sprite Schatztruhe to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Mädchen").direction, 90, 1, "Expected Sprite Mädchen to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Pirat").effects.color, 0, "Expected effect color of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.fisheye, 0, "Expected effect fisheye of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.whirl, 0, "Expected effect whirl of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.pixelate, 0, "Expected effect pixelate of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.mosaic, 0, "Expected effect mosaic of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.brightness, 0, "Expected effect brightness of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.ghost, 0, "Expected effect ghost of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.color, 0, "Expected effect color of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.whirl, 0, "Expected effect whirl of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.brightness, 0, "Expected effect brightness of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.ghost, 0, "Expected effect ghost of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.color, 0, "Expected effect color of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.fisheye, 0, "Expected effect fisheye of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.whirl, 0, "Expected effect whirl of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.pixelate, 0, "Expected effect pixelate of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.mosaic, 0, "Expected effect mosaic of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.brightness, 0, "Expected effect brightness of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.ghost, 0, "Expected effect ghost of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.color, 0, "Expected effect color of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.whirl, 0, "Expected effect whirl of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.brightness, 0, "Expected effect brightness of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.ghost, 0, "Expected effect ghost of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.color, 0, "Expected effect color of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.fisheye, 0, "Expected effect fisheye of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.whirl, 0, "Expected effect whirl of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.pixelate, 0, "Expected effect pixelate of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.mosaic, 0, "Expected effect mosaic of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.brightness, 0, "Expected effect brightness of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.ghost, 0, "Expected effect ghost of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Pirat").layerOrder, 4, "Expected Sprite Pirat to be at layer 4");
  t.assert.equal(t.getSprite("Schatzkarte").layerOrder, 1, "Expected Sprite Schatzkarte to be at layer 1");
  t.assert.equal(t.getSprite("Vulkaninsel").layerOrder, 3, "Expected Sprite Vulkaninsel to be at layer 3");
  t.assert.equal(t.getSprite("Schatztruhe").layerOrder, 2, "Expected Sprite Schatztruhe to be at layer 2");
  t.assert.equal(t.getSprite("Mädchen").layerOrder, 5, "Expected Sprite Mädchen to be at layer 5");
  t.assert.withinRange(t.getSprite("Pirat").x, -20, 5, "Expected Sprite Pirat to have x-position -20 +-5");
  t.assert.withinRange(t.getSprite("Pirat").y, 70, 5, "Expected Sprite Pirat to have y-position 70 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").x, 0, 5, "Expected Sprite Schatzkarte to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").y, -20, 5, "Expected Sprite Schatzkarte to have y-position -20 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").x, -58, 5, "Expected Sprite Vulkaninsel to have x-position -58 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").y, 10, 5, "Expected Sprite Vulkaninsel to have y-position 10 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").x, -80, 5, "Expected Sprite Schatztruhe to have x-position -80 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").y, 80, 5, "Expected Sprite Schatztruhe to have y-position 80 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").x, 100, 5, "Expected Sprite Mädchen to have x-position 100 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").y, -20, 5, "Expected Sprite Mädchen to have y-position -20 +-5");
  t.assert.equal(t.getSprite("Pirat").sayText, "Endlich hatten wir den Schatz erreicht. ", "Expected Sprite Pirat to say Endlich hatten wir den Schatz erreicht. ");
  t.assert.not(t.getSprite("Schatzkarte").sayText, "Expected Sprite Schatzkarte not to say anything");
  t.assert.not(t.getSprite("Vulkaninsel").sayText, "Expected Sprite Vulkaninsel not to say anything");
  t.assert.not(t.getSprite("Schatztruhe").sayText, "Expected Sprite Schatztruhe not to say anything");
  t.assert.not(t.getSprite("Mädchen").sayText, "Expected Sprite Mädchen not to say anything");
  t.assert.withinRange(t.getSprite("Pirat").size, 19, 1, "Expected Sprite Pirat to have size 19 +-1");
  t.assert.withinRange(t.getSprite("Schatzkarte").size, 120, 1, "Expected Sprite Schatzkarte to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Vulkaninsel").size, 30, 1, "Expected Sprite Vulkaninsel to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Schatztruhe").size, 20, 1, "Expected Sprite Schatztruhe to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Mädchen").size, 20, 1, "Expected Sprite Mädchen to have size 20 +-1");
  t.assert.ok(t.getSprite("Pirat").visible, "Expected Sprite Pirat to be visible");
  t.assert.ok(t.getSprite("Schatzkarte").visible, "Expected Sprite Schatzkarte to be visible");
  t.assert.ok(t.getSprite("Vulkaninsel").visible, "Expected Sprite Vulkaninsel to be visible");
  t.assert.ok(t.getSprite("Schatztruhe").visible, "Expected Sprite Schatztruhe to be visible");
  t.assert.not(t.getSprite("Mädchen").visible, "Expected Sprite Mädchen not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Pirat").volume, 100, "Expected Sprite Pirat to have volume 100");
  t.assert.equal(t.getSprite("Schatzkarte").volume, 100, "Expected Sprite Schatzkarte to have volume 100");
  t.assert.equal(t.getSprite("Vulkaninsel").volume, 100, "Expected Sprite Vulkaninsel to have volume 100");
  t.assert.equal(t.getSprite("Schatztruhe").volume, 100, "Expected Sprite Schatztruhe to have volume 100");
  t.assert.equal(t.getSprite("Mädchen").volume, 100, "Expected Sprite Mädchen to have volume 100");
  await t.runForSteps(65);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Pirat").currentCostume, 0, "Expected Sprite Pirat to have costume 0");
  t.assert.equal(t.getSprite("Schatzkarte").currentCostume, 0, "Expected Sprite Schatzkarte to have costume 0");
  t.assert.equal(t.getSprite("Vulkaninsel").currentCostume, 0, "Expected Sprite Vulkaninsel to have costume 0");
  t.assert.equal(t.getSprite("Schatztruhe").currentCostume, 0, "Expected Sprite Schatztruhe to have costume 0");
  t.assert.equal(t.getSprite("Mädchen").currentCostume, 0, "Expected Sprite Mädchen to have costume 0");
  t.assert.equal(t.getSprite("Pirat").getCloneCount(), 0, "Expected Sprite Pirat to have 0 clones");
  t.assert.equal(t.getSprite("Schatzkarte").getCloneCount(), 0, "Expected Sprite Schatzkarte to have 0 clones");
  t.assert.equal(t.getSprite("Vulkaninsel").getCloneCount(), 0, "Expected Sprite Vulkaninsel to have 0 clones");
  t.assert.equal(t.getSprite("Schatztruhe").getCloneCount(), 0, "Expected Sprite Schatztruhe to have 0 clones");
  t.assert.equal(t.getSprite("Mädchen").getCloneCount(), 0, "Expected Sprite Mädchen to have 0 clones");
  t.assert.equal(t.getSprite("Pirat").direction, 90, 1, "Expected Sprite Pirat to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatzkarte").direction, 90, 1, "Expected Sprite Schatzkarte to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Vulkaninsel").direction, 90, 1, "Expected Sprite Vulkaninsel to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatztruhe").direction, 90, 1, "Expected Sprite Schatztruhe to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Mädchen").direction, 90, 1, "Expected Sprite Mädchen to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Pirat").effects.color, 0, "Expected effect color of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.fisheye, 0, "Expected effect fisheye of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.whirl, 0, "Expected effect whirl of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.pixelate, 0, "Expected effect pixelate of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.mosaic, 0, "Expected effect mosaic of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.brightness, 0, "Expected effect brightness of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.ghost, 0, "Expected effect ghost of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.color, 0, "Expected effect color of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.whirl, 0, "Expected effect whirl of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.brightness, 0, "Expected effect brightness of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.ghost, 0, "Expected effect ghost of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.color, 0, "Expected effect color of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.fisheye, 0, "Expected effect fisheye of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.whirl, 0, "Expected effect whirl of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.pixelate, 0, "Expected effect pixelate of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.mosaic, 0, "Expected effect mosaic of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.brightness, 0, "Expected effect brightness of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.ghost, 0, "Expected effect ghost of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.color, 0, "Expected effect color of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.whirl, 0, "Expected effect whirl of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.brightness, 0, "Expected effect brightness of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.ghost, 0, "Expected effect ghost of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.color, 0, "Expected effect color of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.fisheye, 0, "Expected effect fisheye of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.whirl, 0, "Expected effect whirl of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.pixelate, 0, "Expected effect pixelate of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.mosaic, 0, "Expected effect mosaic of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.brightness, 0, "Expected effect brightness of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.ghost, 0, "Expected effect ghost of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Pirat").layerOrder, 4, "Expected Sprite Pirat to be at layer 4");
  t.assert.equal(t.getSprite("Schatzkarte").layerOrder, 1, "Expected Sprite Schatzkarte to be at layer 1");
  t.assert.equal(t.getSprite("Vulkaninsel").layerOrder, 3, "Expected Sprite Vulkaninsel to be at layer 3");
  t.assert.equal(t.getSprite("Schatztruhe").layerOrder, 2, "Expected Sprite Schatztruhe to be at layer 2");
  t.assert.equal(t.getSprite("Mädchen").layerOrder, 5, "Expected Sprite Mädchen to be at layer 5");
  t.assert.withinRange(t.getSprite("Pirat").x, -20, 5, "Expected Sprite Pirat to have x-position -20 +-5");
  t.assert.withinRange(t.getSprite("Pirat").y, 70, 5, "Expected Sprite Pirat to have y-position 70 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").x, 0, 5, "Expected Sprite Schatzkarte to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").y, -20, 5, "Expected Sprite Schatzkarte to have y-position -20 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").x, -58, 5, "Expected Sprite Vulkaninsel to have x-position -58 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").y, 10, 5, "Expected Sprite Vulkaninsel to have y-position 10 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").x, -80, 5, "Expected Sprite Schatztruhe to have x-position -80 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").y, 80, 5, "Expected Sprite Schatztruhe to have y-position 80 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").x, 100, 5, "Expected Sprite Mädchen to have x-position 100 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").y, -20, 5, "Expected Sprite Mädchen to have y-position -20 +-5");
  t.assert.equal(t.getSprite("Pirat").sayText, "Doch den größten Schatz habe ich auf dem Heimweg kennengelernt.", "Expected Sprite Pirat to say Doch den größten Schatz habe ich auf dem Heimweg kennengelernt.");
  t.assert.not(t.getSprite("Schatzkarte").sayText, "Expected Sprite Schatzkarte not to say anything");
  t.assert.not(t.getSprite("Vulkaninsel").sayText, "Expected Sprite Vulkaninsel not to say anything");
  t.assert.not(t.getSprite("Schatztruhe").sayText, "Expected Sprite Schatztruhe not to say anything");
  t.assert.not(t.getSprite("Mädchen").sayText, "Expected Sprite Mädchen not to say anything");
  t.assert.withinRange(t.getSprite("Pirat").size, 19, 1, "Expected Sprite Pirat to have size 19 +-1");
  t.assert.withinRange(t.getSprite("Schatzkarte").size, 120, 1, "Expected Sprite Schatzkarte to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Vulkaninsel").size, 30, 1, "Expected Sprite Vulkaninsel to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Schatztruhe").size, 20, 1, "Expected Sprite Schatztruhe to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Mädchen").size, 20, 1, "Expected Sprite Mädchen to have size 20 +-1");
  t.assert.ok(t.getSprite("Pirat").visible, "Expected Sprite Pirat to be visible");
  t.assert.ok(t.getSprite("Schatzkarte").visible, "Expected Sprite Schatzkarte to be visible");
  t.assert.ok(t.getSprite("Vulkaninsel").visible, "Expected Sprite Vulkaninsel to be visible");
  t.assert.ok(t.getSprite("Schatztruhe").visible, "Expected Sprite Schatztruhe to be visible");
  t.assert.not(t.getSprite("Mädchen").visible, "Expected Sprite Mädchen not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Pirat").volume, 100, "Expected Sprite Pirat to have volume 100");
  t.assert.equal(t.getSprite("Schatzkarte").volume, 100, "Expected Sprite Schatzkarte to have volume 100");
  t.assert.equal(t.getSprite("Vulkaninsel").volume, 100, "Expected Sprite Vulkaninsel to have volume 100");
  t.assert.equal(t.getSprite("Schatztruhe").volume, 100, "Expected Sprite Schatztruhe to have volume 100");
  t.assert.equal(t.getSprite("Mädchen").volume, 100, "Expected Sprite Mädchen to have volume 100");
  await t.runForSteps(53);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Pirat").currentCostume, 0, "Expected Sprite Pirat to have costume 0");
  t.assert.equal(t.getSprite("Schatzkarte").currentCostume, 0, "Expected Sprite Schatzkarte to have costume 0");
  t.assert.equal(t.getSprite("Vulkaninsel").currentCostume, 0, "Expected Sprite Vulkaninsel to have costume 0");
  t.assert.equal(t.getSprite("Schatztruhe").currentCostume, 0, "Expected Sprite Schatztruhe to have costume 0");
  t.assert.equal(t.getSprite("Mädchen").currentCostume, 0, "Expected Sprite Mädchen to have costume 0");
  t.assert.equal(t.getSprite("Pirat").getCloneCount(), 0, "Expected Sprite Pirat to have 0 clones");
  t.assert.equal(t.getSprite("Schatzkarte").getCloneCount(), 0, "Expected Sprite Schatzkarte to have 0 clones");
  t.assert.equal(t.getSprite("Vulkaninsel").getCloneCount(), 0, "Expected Sprite Vulkaninsel to have 0 clones");
  t.assert.equal(t.getSprite("Schatztruhe").getCloneCount(), 0, "Expected Sprite Schatztruhe to have 0 clones");
  t.assert.equal(t.getSprite("Mädchen").getCloneCount(), 0, "Expected Sprite Mädchen to have 0 clones");
  t.assert.equal(t.getSprite("Pirat").direction, 90, 1, "Expected Sprite Pirat to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatzkarte").direction, 90, 1, "Expected Sprite Schatzkarte to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Vulkaninsel").direction, 90, 1, "Expected Sprite Vulkaninsel to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatztruhe").direction, 90, 1, "Expected Sprite Schatztruhe to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Mädchen").direction, 90, 1, "Expected Sprite Mädchen to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Pirat").effects.color, 0, "Expected effect color of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.fisheye, 0, "Expected effect fisheye of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.whirl, 0, "Expected effect whirl of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.pixelate, 0, "Expected effect pixelate of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.mosaic, 0, "Expected effect mosaic of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.brightness, 0, "Expected effect brightness of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.ghost, 0, "Expected effect ghost of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.color, 0, "Expected effect color of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.whirl, 0, "Expected effect whirl of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.brightness, 0, "Expected effect brightness of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.ghost, 0, "Expected effect ghost of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.color, 0, "Expected effect color of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.fisheye, 0, "Expected effect fisheye of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.whirl, 0, "Expected effect whirl of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.pixelate, 0, "Expected effect pixelate of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.mosaic, 0, "Expected effect mosaic of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.brightness, 0, "Expected effect brightness of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.ghost, 0, "Expected effect ghost of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.color, 0, "Expected effect color of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.whirl, 0, "Expected effect whirl of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.brightness, 0, "Expected effect brightness of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.ghost, 0, "Expected effect ghost of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.color, 0, "Expected effect color of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.fisheye, 0, "Expected effect fisheye of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.whirl, 0, "Expected effect whirl of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.pixelate, 0, "Expected effect pixelate of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.mosaic, 0, "Expected effect mosaic of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.brightness, 0, "Expected effect brightness of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.ghost, 0, "Expected effect ghost of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Pirat").layerOrder, 4, "Expected Sprite Pirat to be at layer 4");
  t.assert.equal(t.getSprite("Schatzkarte").layerOrder, 1, "Expected Sprite Schatzkarte to be at layer 1");
  t.assert.equal(t.getSprite("Vulkaninsel").layerOrder, 3, "Expected Sprite Vulkaninsel to be at layer 3");
  t.assert.equal(t.getSprite("Schatztruhe").layerOrder, 2, "Expected Sprite Schatztruhe to be at layer 2");
  t.assert.equal(t.getSprite("Mädchen").layerOrder, 5, "Expected Sprite Mädchen to be at layer 5");
  t.assert.withinRange(t.getSprite("Pirat").x, -20, 5, "Expected Sprite Pirat to have x-position -20 +-5");
  t.assert.withinRange(t.getSprite("Pirat").y, 70, 5, "Expected Sprite Pirat to have y-position 70 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").x, 0, 5, "Expected Sprite Schatzkarte to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").y, -20, 5, "Expected Sprite Schatzkarte to have y-position -20 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").x, -58, 5, "Expected Sprite Vulkaninsel to have x-position -58 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").y, 10, 5, "Expected Sprite Vulkaninsel to have y-position 10 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").x, -80, 5, "Expected Sprite Schatztruhe to have x-position -80 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").y, 80, 5, "Expected Sprite Schatztruhe to have y-position 80 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").x, 100, 5, "Expected Sprite Mädchen to have x-position 100 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").y, -20, 5, "Expected Sprite Mädchen to have y-position -20 +-5");
  t.assert.equal(t.getSprite("Pirat").sayText, "Was für ein Happy End!", "Expected Sprite Pirat to say Was für ein Happy End!");
  t.assert.not(t.getSprite("Schatzkarte").sayText, "Expected Sprite Schatzkarte not to say anything");
  t.assert.not(t.getSprite("Vulkaninsel").sayText, "Expected Sprite Vulkaninsel not to say anything");
  t.assert.not(t.getSprite("Schatztruhe").sayText, "Expected Sprite Schatztruhe not to say anything");
  t.assert.not(t.getSprite("Mädchen").sayText, "Expected Sprite Mädchen not to say anything");
  t.assert.withinRange(t.getSprite("Pirat").size, 19, 1, "Expected Sprite Pirat to have size 19 +-1");
  t.assert.withinRange(t.getSprite("Schatzkarte").size, 120, 1, "Expected Sprite Schatzkarte to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Vulkaninsel").size, 30, 1, "Expected Sprite Vulkaninsel to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Schatztruhe").size, 20, 1, "Expected Sprite Schatztruhe to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Mädchen").size, 20, 1, "Expected Sprite Mädchen to have size 20 +-1");
  t.assert.ok(t.getSprite("Pirat").visible, "Expected Sprite Pirat to be visible");
  t.assert.ok(t.getSprite("Schatzkarte").visible, "Expected Sprite Schatzkarte to be visible");
  t.assert.ok(t.getSprite("Vulkaninsel").visible, "Expected Sprite Vulkaninsel to be visible");
  t.assert.ok(t.getSprite("Schatztruhe").visible, "Expected Sprite Schatztruhe to be visible");
  t.assert.not(t.getSprite("Mädchen").visible, "Expected Sprite Mädchen not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Pirat").volume, 100, "Expected Sprite Pirat to have volume 100");
  t.assert.equal(t.getSprite("Schatzkarte").volume, 100, "Expected Sprite Schatzkarte to have volume 100");
  t.assert.equal(t.getSprite("Vulkaninsel").volume, 100, "Expected Sprite Vulkaninsel to have volume 100");
  t.assert.equal(t.getSprite("Schatztruhe").volume, 100, "Expected Sprite Schatztruhe to have volume 100");
  t.assert.equal(t.getSprite("Mädchen").volume, 100, "Expected Sprite Mädchen to have volume 100");
  await t.runForSteps(39);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Pirat").currentCostume, 0, "Expected Sprite Pirat to have costume 0");
  t.assert.equal(t.getSprite("Schatzkarte").currentCostume, 0, "Expected Sprite Schatzkarte to have costume 0");
  t.assert.equal(t.getSprite("Vulkaninsel").currentCostume, 0, "Expected Sprite Vulkaninsel to have costume 0");
  t.assert.equal(t.getSprite("Schatztruhe").currentCostume, 0, "Expected Sprite Schatztruhe to have costume 0");
  t.assert.equal(t.getSprite("Mädchen").currentCostume, 0, "Expected Sprite Mädchen to have costume 0");
  t.assert.equal(t.getSprite("Pirat").getCloneCount(), 0, "Expected Sprite Pirat to have 0 clones");
  t.assert.equal(t.getSprite("Schatzkarte").getCloneCount(), 0, "Expected Sprite Schatzkarte to have 0 clones");
  t.assert.equal(t.getSprite("Vulkaninsel").getCloneCount(), 0, "Expected Sprite Vulkaninsel to have 0 clones");
  t.assert.equal(t.getSprite("Schatztruhe").getCloneCount(), 0, "Expected Sprite Schatztruhe to have 0 clones");
  t.assert.equal(t.getSprite("Mädchen").getCloneCount(), 0, "Expected Sprite Mädchen to have 0 clones");
  t.assert.equal(t.getSprite("Pirat").direction, 90, 1, "Expected Sprite Pirat to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatzkarte").direction, 90, 1, "Expected Sprite Schatzkarte to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Vulkaninsel").direction, 90, 1, "Expected Sprite Vulkaninsel to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatztruhe").direction, 90, 1, "Expected Sprite Schatztruhe to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Mädchen").direction, 90, 1, "Expected Sprite Mädchen to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Pirat").effects.color, 0, "Expected effect color of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.fisheye, 0, "Expected effect fisheye of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.whirl, 0, "Expected effect whirl of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.pixelate, 0, "Expected effect pixelate of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.mosaic, 0, "Expected effect mosaic of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.brightness, 0, "Expected effect brightness of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.ghost, 0, "Expected effect ghost of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.color, 0, "Expected effect color of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.whirl, 0, "Expected effect whirl of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.brightness, 0, "Expected effect brightness of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.ghost, 0, "Expected effect ghost of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.color, 0, "Expected effect color of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.fisheye, 0, "Expected effect fisheye of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.whirl, 0, "Expected effect whirl of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.pixelate, 0, "Expected effect pixelate of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.mosaic, 0, "Expected effect mosaic of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.brightness, 0, "Expected effect brightness of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.ghost, 0, "Expected effect ghost of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.color, 0, "Expected effect color of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.whirl, 0, "Expected effect whirl of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.brightness, 0, "Expected effect brightness of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.ghost, 0, "Expected effect ghost of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.color, 0, "Expected effect color of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.fisheye, 0, "Expected effect fisheye of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.whirl, 0, "Expected effect whirl of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.pixelate, 0, "Expected effect pixelate of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.mosaic, 0, "Expected effect mosaic of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.brightness, 0, "Expected effect brightness of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.ghost, 0, "Expected effect ghost of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Pirat").layerOrder, 4, "Expected Sprite Pirat to be at layer 4");
  t.assert.equal(t.getSprite("Schatzkarte").layerOrder, 1, "Expected Sprite Schatzkarte to be at layer 1");
  t.assert.equal(t.getSprite("Vulkaninsel").layerOrder, 3, "Expected Sprite Vulkaninsel to be at layer 3");
  t.assert.equal(t.getSprite("Schatztruhe").layerOrder, 2, "Expected Sprite Schatztruhe to be at layer 2");
  t.assert.equal(t.getSprite("Mädchen").layerOrder, 5, "Expected Sprite Mädchen to be at layer 5");
  t.assert.withinRange(t.getSprite("Pirat").x, -20, 5, "Expected Sprite Pirat to have x-position -20 +-5");
  t.assert.withinRange(t.getSprite("Pirat").y, 70, 5, "Expected Sprite Pirat to have y-position 70 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").x, 0, 5, "Expected Sprite Schatzkarte to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").y, -20, 5, "Expected Sprite Schatzkarte to have y-position -20 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").x, -58, 5, "Expected Sprite Vulkaninsel to have x-position -58 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").y, 10, 5, "Expected Sprite Vulkaninsel to have y-position 10 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").x, -80, 5, "Expected Sprite Schatztruhe to have x-position -80 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").y, 80, 5, "Expected Sprite Schatztruhe to have y-position 80 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").x, 100, 5, "Expected Sprite Mädchen to have x-position 100 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").y, -20, 5, "Expected Sprite Mädchen to have y-position -20 +-5");
  t.assert.equal(t.getSprite("Pirat").sayText, "Was für ein Happy End!", "Expected Sprite Pirat to say Was für ein Happy End!");
  t.assert.not(t.getSprite("Schatzkarte").sayText, "Expected Sprite Schatzkarte not to say anything");
  t.assert.not(t.getSprite("Vulkaninsel").sayText, "Expected Sprite Vulkaninsel not to say anything");
  t.assert.not(t.getSprite("Schatztruhe").sayText, "Expected Sprite Schatztruhe not to say anything");
  t.assert.not(t.getSprite("Mädchen").sayText, "Expected Sprite Mädchen not to say anything");
  t.assert.withinRange(t.getSprite("Pirat").size, 19, 1, "Expected Sprite Pirat to have size 19 +-1");
  t.assert.withinRange(t.getSprite("Schatzkarte").size, 120, 1, "Expected Sprite Schatzkarte to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Vulkaninsel").size, 30, 1, "Expected Sprite Vulkaninsel to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Schatztruhe").size, 20, 1, "Expected Sprite Schatztruhe to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Mädchen").size, 20, 1, "Expected Sprite Mädchen to have size 20 +-1");
  t.assert.ok(t.getSprite("Pirat").visible, "Expected Sprite Pirat to be visible");
  t.assert.ok(t.getSprite("Schatzkarte").visible, "Expected Sprite Schatzkarte to be visible");
  t.assert.ok(t.getSprite("Vulkaninsel").visible, "Expected Sprite Vulkaninsel to be visible");
  t.assert.ok(t.getSprite("Schatztruhe").visible, "Expected Sprite Schatztruhe to be visible");
  t.assert.not(t.getSprite("Mädchen").visible, "Expected Sprite Mädchen not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Pirat").volume, 100, "Expected Sprite Pirat to have volume 100");
  t.assert.equal(t.getSprite("Schatzkarte").volume, 100, "Expected Sprite Schatzkarte to have volume 100");
  t.assert.equal(t.getSprite("Vulkaninsel").volume, 100, "Expected Sprite Vulkaninsel to have volume 100");
  t.assert.equal(t.getSprite("Schatztruhe").volume, 100, "Expected Sprite Schatztruhe to have volume 100");
  t.assert.equal(t.getSprite("Mädchen").volume, 100, "Expected Sprite Mädchen to have volume 100");
  await t.runForSteps(78);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Pirat").currentCostume, 0, "Expected Sprite Pirat to have costume 0");
  t.assert.equal(t.getSprite("Schatzkarte").currentCostume, 0, "Expected Sprite Schatzkarte to have costume 0");
  t.assert.equal(t.getSprite("Vulkaninsel").currentCostume, 0, "Expected Sprite Vulkaninsel to have costume 0");
  t.assert.equal(t.getSprite("Schatztruhe").currentCostume, 0, "Expected Sprite Schatztruhe to have costume 0");
  t.assert.equal(t.getSprite("Mädchen").currentCostume, 0, "Expected Sprite Mädchen to have costume 0");
  t.assert.equal(t.getSprite("Pirat").getCloneCount(), 0, "Expected Sprite Pirat to have 0 clones");
  t.assert.equal(t.getSprite("Schatzkarte").getCloneCount(), 0, "Expected Sprite Schatzkarte to have 0 clones");
  t.assert.equal(t.getSprite("Vulkaninsel").getCloneCount(), 0, "Expected Sprite Vulkaninsel to have 0 clones");
  t.assert.equal(t.getSprite("Schatztruhe").getCloneCount(), 0, "Expected Sprite Schatztruhe to have 0 clones");
  t.assert.equal(t.getSprite("Mädchen").getCloneCount(), 0, "Expected Sprite Mädchen to have 0 clones");
  t.assert.equal(t.getSprite("Pirat").direction, 90, 1, "Expected Sprite Pirat to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatzkarte").direction, 90, 1, "Expected Sprite Schatzkarte to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Vulkaninsel").direction, 90, 1, "Expected Sprite Vulkaninsel to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatztruhe").direction, 90, 1, "Expected Sprite Schatztruhe to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Mädchen").direction, 90, 1, "Expected Sprite Mädchen to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Pirat").effects.color, 0, "Expected effect color of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.fisheye, 0, "Expected effect fisheye of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.whirl, 0, "Expected effect whirl of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.pixelate, 0, "Expected effect pixelate of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.mosaic, 0, "Expected effect mosaic of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.brightness, 0, "Expected effect brightness of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.ghost, 0, "Expected effect ghost of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.color, 0, "Expected effect color of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.whirl, 0, "Expected effect whirl of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.brightness, 0, "Expected effect brightness of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.ghost, 0, "Expected effect ghost of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.color, 0, "Expected effect color of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.fisheye, 0, "Expected effect fisheye of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.whirl, 0, "Expected effect whirl of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.pixelate, 0, "Expected effect pixelate of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.mosaic, 0, "Expected effect mosaic of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.brightness, 0, "Expected effect brightness of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.ghost, 0, "Expected effect ghost of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.color, 0, "Expected effect color of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.whirl, 0, "Expected effect whirl of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.brightness, 0, "Expected effect brightness of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.ghost, 0, "Expected effect ghost of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.color, 0, "Expected effect color of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.fisheye, 0, "Expected effect fisheye of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.whirl, 0, "Expected effect whirl of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.pixelate, 0, "Expected effect pixelate of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.mosaic, 0, "Expected effect mosaic of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.brightness, 0, "Expected effect brightness of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.ghost, 0, "Expected effect ghost of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Pirat").layerOrder, 4, "Expected Sprite Pirat to be at layer 4");
  t.assert.equal(t.getSprite("Schatzkarte").layerOrder, 1, "Expected Sprite Schatzkarte to be at layer 1");
  t.assert.equal(t.getSprite("Vulkaninsel").layerOrder, 3, "Expected Sprite Vulkaninsel to be at layer 3");
  t.assert.equal(t.getSprite("Schatztruhe").layerOrder, 2, "Expected Sprite Schatztruhe to be at layer 2");
  t.assert.equal(t.getSprite("Mädchen").layerOrder, 5, "Expected Sprite Mädchen to be at layer 5");
  t.assert.withinRange(t.getSprite("Pirat").x, -52, 5, "Expected Sprite Pirat to have x-position -52 +-5");
  t.assert.withinRange(t.getSprite("Pirat").y, 38, 5, "Expected Sprite Pirat to have y-position 38 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").x, 0, 5, "Expected Sprite Schatzkarte to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").y, -20, 5, "Expected Sprite Schatzkarte to have y-position -20 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").x, -58, 5, "Expected Sprite Vulkaninsel to have x-position -58 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").y, 10, 5, "Expected Sprite Vulkaninsel to have y-position 10 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").x, -80, 5, "Expected Sprite Schatztruhe to have x-position -80 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").y, 80, 5, "Expected Sprite Schatztruhe to have y-position 80 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").x, 100, 5, "Expected Sprite Mädchen to have x-position 100 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").y, -20, 5, "Expected Sprite Mädchen to have y-position -20 +-5");
  t.assert.not(t.getSprite("Pirat").sayText, "Expected Sprite Pirat not to say anything");
  t.assert.not(t.getSprite("Schatzkarte").sayText, "Expected Sprite Schatzkarte not to say anything");
  t.assert.not(t.getSprite("Vulkaninsel").sayText, "Expected Sprite Vulkaninsel not to say anything");
  t.assert.not(t.getSprite("Schatztruhe").sayText, "Expected Sprite Schatztruhe not to say anything");
  t.assert.not(t.getSprite("Mädchen").sayText, "Expected Sprite Mädchen not to say anything");
  t.assert.withinRange(t.getSprite("Pirat").size, 67, 1, "Expected Sprite Pirat to have size 67 +-1");
  t.assert.withinRange(t.getSprite("Schatzkarte").size, 120, 1, "Expected Sprite Schatzkarte to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Vulkaninsel").size, 30, 1, "Expected Sprite Vulkaninsel to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Schatztruhe").size, 20, 1, "Expected Sprite Schatztruhe to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Mädchen").size, 68, 1, "Expected Sprite Mädchen to have size 68 +-1");
  t.assert.ok(t.getSprite("Pirat").visible, "Expected Sprite Pirat to be visible");
  t.assert.ok(t.getSprite("Schatzkarte").visible, "Expected Sprite Schatzkarte to be visible");
  t.assert.ok(t.getSprite("Vulkaninsel").visible, "Expected Sprite Vulkaninsel to be visible");
  t.assert.ok(t.getSprite("Schatztruhe").visible, "Expected Sprite Schatztruhe to be visible");
  t.assert.ok(t.getSprite("Mädchen").visible, "Expected Sprite Mädchen to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Pirat").volume, 100, "Expected Sprite Pirat to have volume 100");
  t.assert.equal(t.getSprite("Schatzkarte").volume, 100, "Expected Sprite Schatzkarte to have volume 100");
  t.assert.equal(t.getSprite("Vulkaninsel").volume, 100, "Expected Sprite Vulkaninsel to have volume 100");
  t.assert.equal(t.getSprite("Schatztruhe").volume, 100, "Expected Sprite Schatztruhe to have volume 100");
  t.assert.equal(t.getSprite("Mädchen").volume, 100, "Expected Sprite Mädchen to have volume 100");
  await t.runForSteps(13);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Pirat").currentCostume, 0, "Expected Sprite Pirat to have costume 0");
  t.assert.equal(t.getSprite("Schatzkarte").currentCostume, 0, "Expected Sprite Schatzkarte to have costume 0");
  t.assert.equal(t.getSprite("Vulkaninsel").currentCostume, 0, "Expected Sprite Vulkaninsel to have costume 0");
  t.assert.equal(t.getSprite("Schatztruhe").currentCostume, 0, "Expected Sprite Schatztruhe to have costume 0");
  t.assert.equal(t.getSprite("Mädchen").currentCostume, 0, "Expected Sprite Mädchen to have costume 0");
  t.assert.equal(t.getSprite("Pirat").getCloneCount(), 0, "Expected Sprite Pirat to have 0 clones");
  t.assert.equal(t.getSprite("Schatzkarte").getCloneCount(), 0, "Expected Sprite Schatzkarte to have 0 clones");
  t.assert.equal(t.getSprite("Vulkaninsel").getCloneCount(), 0, "Expected Sprite Vulkaninsel to have 0 clones");
  t.assert.equal(t.getSprite("Schatztruhe").getCloneCount(), 0, "Expected Sprite Schatztruhe to have 0 clones");
  t.assert.equal(t.getSprite("Mädchen").getCloneCount(), 0, "Expected Sprite Mädchen to have 0 clones");
  t.assert.equal(t.getSprite("Pirat").direction, 90, 1, "Expected Sprite Pirat to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatzkarte").direction, 90, 1, "Expected Sprite Schatzkarte to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Vulkaninsel").direction, 90, 1, "Expected Sprite Vulkaninsel to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatztruhe").direction, 90, 1, "Expected Sprite Schatztruhe to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Mädchen").direction, 90, 1, "Expected Sprite Mädchen to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Pirat").effects.color, 0, "Expected effect color of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.fisheye, 0, "Expected effect fisheye of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.whirl, 0, "Expected effect whirl of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.pixelate, 0, "Expected effect pixelate of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.mosaic, 0, "Expected effect mosaic of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.brightness, 0, "Expected effect brightness of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.ghost, 0, "Expected effect ghost of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.color, 0, "Expected effect color of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.whirl, 0, "Expected effect whirl of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.brightness, 0, "Expected effect brightness of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.ghost, 0, "Expected effect ghost of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.color, 0, "Expected effect color of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.fisheye, 0, "Expected effect fisheye of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.whirl, 0, "Expected effect whirl of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.pixelate, 0, "Expected effect pixelate of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.mosaic, 0, "Expected effect mosaic of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.brightness, 0, "Expected effect brightness of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.ghost, 0, "Expected effect ghost of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.color, 0, "Expected effect color of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.whirl, 0, "Expected effect whirl of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.brightness, 0, "Expected effect brightness of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.ghost, 0, "Expected effect ghost of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.color, 0, "Expected effect color of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.fisheye, 0, "Expected effect fisheye of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.whirl, 0, "Expected effect whirl of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.pixelate, 0, "Expected effect pixelate of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.mosaic, 0, "Expected effect mosaic of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.brightness, 0, "Expected effect brightness of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.ghost, 0, "Expected effect ghost of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Pirat").layerOrder, 4, "Expected Sprite Pirat to be at layer 4");
  t.assert.equal(t.getSprite("Schatzkarte").layerOrder, 1, "Expected Sprite Schatzkarte to be at layer 1");
  t.assert.equal(t.getSprite("Vulkaninsel").layerOrder, 3, "Expected Sprite Vulkaninsel to be at layer 3");
  t.assert.equal(t.getSprite("Schatztruhe").layerOrder, 2, "Expected Sprite Schatztruhe to be at layer 2");
  t.assert.equal(t.getSprite("Mädchen").layerOrder, 5, "Expected Sprite Mädchen to be at layer 5");
  t.assert.withinRange(t.getSprite("Pirat").x, -60, 5, "Expected Sprite Pirat to have x-position -60 +-5");
  t.assert.withinRange(t.getSprite("Pirat").y, 30, 5, "Expected Sprite Pirat to have y-position 30 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").x, 0, 5, "Expected Sprite Schatzkarte to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").y, -20, 5, "Expected Sprite Schatzkarte to have y-position -20 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").x, -58, 5, "Expected Sprite Vulkaninsel to have x-position -58 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").y, 10, 5, "Expected Sprite Vulkaninsel to have y-position 10 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").x, -80, 5, "Expected Sprite Schatztruhe to have x-position -80 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").y, 80, 5, "Expected Sprite Schatztruhe to have y-position 80 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").x, 100, 5, "Expected Sprite Mädchen to have x-position 100 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").y, -20, 5, "Expected Sprite Mädchen to have y-position -20 +-5");
  t.assert.not(t.getSprite("Pirat").sayText, "Expected Sprite Pirat not to say anything");
  t.assert.not(t.getSprite("Schatzkarte").sayText, "Expected Sprite Schatzkarte not to say anything");
  t.assert.not(t.getSprite("Vulkaninsel").sayText, "Expected Sprite Vulkaninsel not to say anything");
  t.assert.not(t.getSprite("Schatztruhe").sayText, "Expected Sprite Schatztruhe not to say anything");
  t.assert.not(t.getSprite("Mädchen").sayText, "Expected Sprite Mädchen not to say anything");
  t.assert.withinRange(t.getSprite("Pirat").size, 79, 1, "Expected Sprite Pirat to have size 79 +-1");
  t.assert.withinRange(t.getSprite("Schatzkarte").size, 120, 1, "Expected Sprite Schatzkarte to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Vulkaninsel").size, 30, 1, "Expected Sprite Vulkaninsel to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Schatztruhe").size, 20, 1, "Expected Sprite Schatztruhe to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Mädchen").size, 80, 1, "Expected Sprite Mädchen to have size 80 +-1");
  t.assert.ok(t.getSprite("Pirat").visible, "Expected Sprite Pirat to be visible");
  t.assert.ok(t.getSprite("Schatzkarte").visible, "Expected Sprite Schatzkarte to be visible");
  t.assert.ok(t.getSprite("Vulkaninsel").visible, "Expected Sprite Vulkaninsel to be visible");
  t.assert.ok(t.getSprite("Schatztruhe").visible, "Expected Sprite Schatztruhe to be visible");
  t.assert.ok(t.getSprite("Mädchen").visible, "Expected Sprite Mädchen to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Pirat").volume, 100, "Expected Sprite Pirat to have volume 100");
  t.assert.equal(t.getSprite("Schatzkarte").volume, 100, "Expected Sprite Schatzkarte to have volume 100");
  t.assert.equal(t.getSprite("Vulkaninsel").volume, 100, "Expected Sprite Vulkaninsel to have volume 100");
  t.assert.equal(t.getSprite("Schatztruhe").volume, 100, "Expected Sprite Schatztruhe to have volume 100");
  t.assert.equal(t.getSprite("Mädchen").volume, 100, "Expected Sprite Mädchen to have volume 100");
  await t.runForSteps(51);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Pirat").currentCostume, 0, "Expected Sprite Pirat to have costume 0");
  t.assert.equal(t.getSprite("Schatzkarte").currentCostume, 0, "Expected Sprite Schatzkarte to have costume 0");
  t.assert.equal(t.getSprite("Vulkaninsel").currentCostume, 0, "Expected Sprite Vulkaninsel to have costume 0");
  t.assert.equal(t.getSprite("Schatztruhe").currentCostume, 0, "Expected Sprite Schatztruhe to have costume 0");
  t.assert.equal(t.getSprite("Mädchen").currentCostume, 0, "Expected Sprite Mädchen to have costume 0");
  t.assert.equal(t.getSprite("Pirat").getCloneCount(), 0, "Expected Sprite Pirat to have 0 clones");
  t.assert.equal(t.getSprite("Schatzkarte").getCloneCount(), 0, "Expected Sprite Schatzkarte to have 0 clones");
  t.assert.equal(t.getSprite("Vulkaninsel").getCloneCount(), 0, "Expected Sprite Vulkaninsel to have 0 clones");
  t.assert.equal(t.getSprite("Schatztruhe").getCloneCount(), 0, "Expected Sprite Schatztruhe to have 0 clones");
  t.assert.equal(t.getSprite("Mädchen").getCloneCount(), 0, "Expected Sprite Mädchen to have 0 clones");
  t.assert.equal(t.getSprite("Pirat").direction, 90, 1, "Expected Sprite Pirat to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatzkarte").direction, 90, 1, "Expected Sprite Schatzkarte to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Vulkaninsel").direction, 90, 1, "Expected Sprite Vulkaninsel to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Schatztruhe").direction, 90, 1, "Expected Sprite Schatztruhe to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Mädchen").direction, 90, 1, "Expected Sprite Mädchen to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Pirat").effects.color, 0, "Expected effect color of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.fisheye, 0, "Expected effect fisheye of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.whirl, 0, "Expected effect whirl of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.pixelate, 0, "Expected effect pixelate of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.mosaic, 0, "Expected effect mosaic of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.brightness, 0, "Expected effect brightness of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Pirat").effects.ghost, 0, "Expected effect ghost of Sprite Pirat to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.color, 0, "Expected effect color of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.whirl, 0, "Expected effect whirl of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.brightness, 0, "Expected effect brightness of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Schatzkarte").effects.ghost, 0, "Expected effect ghost of Sprite Schatzkarte to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.color, 0, "Expected effect color of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.fisheye, 0, "Expected effect fisheye of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.whirl, 0, "Expected effect whirl of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.pixelate, 0, "Expected effect pixelate of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.mosaic, 0, "Expected effect mosaic of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.brightness, 0, "Expected effect brightness of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Vulkaninsel").effects.ghost, 0, "Expected effect ghost of Sprite Vulkaninsel to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.color, 0, "Expected effect color of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.fisheye, 0, "Expected effect fisheye of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.whirl, 0, "Expected effect whirl of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.pixelate, 0, "Expected effect pixelate of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.mosaic, 0, "Expected effect mosaic of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.brightness, 0, "Expected effect brightness of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Schatztruhe").effects.ghost, 0, "Expected effect ghost of Sprite Schatztruhe to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.color, 0, "Expected effect color of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.fisheye, 0, "Expected effect fisheye of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.whirl, 0, "Expected effect whirl of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.pixelate, 0, "Expected effect pixelate of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.mosaic, 0, "Expected effect mosaic of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.brightness, 0, "Expected effect brightness of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Mädchen").effects.ghost, 0, "Expected effect ghost of Sprite Mädchen to be 0");
  t.assert.equal(t.getSprite("Pirat").layerOrder, 4, "Expected Sprite Pirat to be at layer 4");
  t.assert.equal(t.getSprite("Schatzkarte").layerOrder, 1, "Expected Sprite Schatzkarte to be at layer 1");
  t.assert.equal(t.getSprite("Vulkaninsel").layerOrder, 3, "Expected Sprite Vulkaninsel to be at layer 3");
  t.assert.equal(t.getSprite("Schatztruhe").layerOrder, 2, "Expected Sprite Schatztruhe to be at layer 2");
  t.assert.equal(t.getSprite("Mädchen").layerOrder, 5, "Expected Sprite Mädchen to be at layer 5");
  t.assert.withinRange(t.getSprite("Pirat").x, -70, 5, "Expected Sprite Pirat to have x-position -70 +-5");
  t.assert.withinRange(t.getSprite("Pirat").y, 20, 5, "Expected Sprite Pirat to have y-position 20 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").x, 0, 5, "Expected Sprite Schatzkarte to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Schatzkarte").y, -20, 5, "Expected Sprite Schatzkarte to have y-position -20 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").x, -58, 5, "Expected Sprite Vulkaninsel to have x-position -58 +-5");
  t.assert.withinRange(t.getSprite("Vulkaninsel").y, 10, 5, "Expected Sprite Vulkaninsel to have y-position 10 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").x, -80, 5, "Expected Sprite Schatztruhe to have x-position -80 +-5");
  t.assert.withinRange(t.getSprite("Schatztruhe").y, 80, 5, "Expected Sprite Schatztruhe to have y-position 80 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").x, 100, 5, "Expected Sprite Mädchen to have x-position 100 +-5");
  t.assert.withinRange(t.getSprite("Mädchen").y, -20, 5, "Expected Sprite Mädchen to have y-position -20 +-5");
  t.assert.not(t.getSprite("Pirat").sayText, "Expected Sprite Pirat not to say anything");
  t.assert.not(t.getSprite("Schatzkarte").sayText, "Expected Sprite Schatzkarte not to say anything");
  t.assert.not(t.getSprite("Vulkaninsel").sayText, "Expected Sprite Vulkaninsel not to say anything");
  t.assert.not(t.getSprite("Schatztruhe").sayText, "Expected Sprite Schatztruhe not to say anything");
  t.assert.not(t.getSprite("Mädchen").sayText, "Expected Sprite Mädchen not to say anything");
  t.assert.withinRange(t.getSprite("Pirat").size, 94, 1, "Expected Sprite Pirat to have size 94 +-1");
  t.assert.withinRange(t.getSprite("Schatzkarte").size, 120, 1, "Expected Sprite Schatzkarte to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Vulkaninsel").size, 30, 1, "Expected Sprite Vulkaninsel to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Schatztruhe").size, 20, 1, "Expected Sprite Schatztruhe to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Mädchen").size, 95, 1, "Expected Sprite Mädchen to have size 95 +-1");
  t.assert.ok(t.getSprite("Pirat").visible, "Expected Sprite Pirat to be visible");
  t.assert.ok(t.getSprite("Schatzkarte").visible, "Expected Sprite Schatzkarte to be visible");
  t.assert.ok(t.getSprite("Vulkaninsel").visible, "Expected Sprite Vulkaninsel to be visible");
  t.assert.ok(t.getSprite("Schatztruhe").visible, "Expected Sprite Schatztruhe to be visible");
  t.assert.ok(t.getSprite("Mädchen").visible, "Expected Sprite Mädchen to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Pirat").volume, 100, "Expected Sprite Pirat to have volume 100");
  t.assert.equal(t.getSprite("Schatzkarte").volume, 100, "Expected Sprite Schatzkarte to have volume 100");
  t.assert.equal(t.getSprite("Vulkaninsel").volume, 100, "Expected Sprite Vulkaninsel to have volume 100");
  t.assert.equal(t.getSprite("Schatztruhe").volume, 100, "Expected Sprite Schatztruhe to have volume 100");
  t.assert.equal(t.getSprite("Mädchen").volume, 100, "Expected Sprite Mädchen to have volume 100");
  t.end();
}

module.exports = [
  {
      test: test0,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687936707757',
      type: 'standard',
  }
]
