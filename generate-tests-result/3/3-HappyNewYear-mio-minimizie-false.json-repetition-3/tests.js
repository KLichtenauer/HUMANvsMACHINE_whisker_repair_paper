const test0 = async function (t) {
  await t.runForSteps(78);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).currentCostume, 2, "Expected Clone 2 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).currentCostume, 1, "Expected Clone 4 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).currentCostume, 0, "Expected Clone 7 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).currentCostume, 2, "Expected Clone 10 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).currentCostume, 2, "Expected Clone 11 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 11, "Expected Sprite Luftballon to have 11 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).direction, 90, 1, "Expected Clone 2 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).direction, 90, 1, "Expected Clone 4 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).direction, 90, 1, "Expected Clone 7 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).direction, 90, 1, "Expected Clone 10 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).direction, 90, 1, "Expected Clone 11 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.color, 0, "Expected effect color of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.fisheye, 0, "Expected effect fisheye of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.whirl, 0, "Expected effect whirl of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.pixelate, 0, "Expected effect pixelate of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.mosaic, 0, "Expected effect mosaic of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.brightness, 0, "Expected effect brightness of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.ghost, 0, "Expected effect ghost of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.color, 0, "Expected effect color of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.fisheye, 0, "Expected effect fisheye of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.whirl, 0, "Expected effect whirl of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.pixelate, 0, "Expected effect pixelate of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.mosaic, 0, "Expected effect mosaic of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.brightness, 0, "Expected effect brightness of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.ghost, 0, "Expected effect ghost of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.color, 0, "Expected effect color of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.fisheye, 0, "Expected effect fisheye of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.whirl, 0, "Expected effect whirl of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.pixelate, 0, "Expected effect pixelate of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.mosaic, 0, "Expected effect mosaic of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.brightness, 0, "Expected effect brightness of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.ghost, 0, "Expected effect ghost of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 14, "Expected Sprite Einhorn to be at layer 14");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 12, "Expected Sprite Luftballon to be at layer 12");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).getLayerOrder(), 8, "Expected Clone 2 of Luftballon to be at layer 8");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).getLayerOrder(), 9, "Expected Clone 4 of Luftballon to be at layer 9");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).getLayerOrder(), 10, "Expected Clone 7 of Luftballon to be at layer 10");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).getLayerOrder(), 11, "Expected Clone 10 of Luftballon to be at layer 11");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).getLayerOrder(), 7, "Expected Clone 11 of Luftballon to be at layer 7");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).x, 0, 5, "Expected Clone 2 of Luftballon to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).y, 73, 5, "Expected Clone 2 of Luftballon to have y-position 73 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).x, -130, 5, "Expected Clone 4 of Luftballon to have x-position -130 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).y, 172, 5, "Expected Clone 4 of Luftballon to have y-position 172 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).x, -185, 5, "Expected Clone 7 of Luftballon to have x-position -185 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).y, -127, 5, "Expected Clone 7 of Luftballon to have y-position -127 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(10).x, 191, 5, "Expected Clone 10 of Luftballon to have x-position 191 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(10).y, -67, 5, "Expected Clone 10 of Luftballon to have y-position -67 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(11).x, 70, 5, "Expected Clone 11 of Luftballon to have x-position 70 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(11).y, 54, 5, "Expected Clone 11 of Luftballon to have y-position 54 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(2).sayText, "Expected Clone 2 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(4).sayText, "Expected Clone 4 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(7).sayText, "Expected Clone 7 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(10).sayText, "Expected Clone 10 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(11).sayText, "Expected Clone 11 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).size, 50, 1, "Expected Clone 2 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).size, 50, 1, "Expected Clone 4 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).size, 50, 1, "Expected Clone 7 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(10).size, 50, 1, "Expected Clone 10 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(11).size, 50, 1, "Expected Clone 11 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.ok(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(2).visible, "Expected Clone 2 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(4).visible, "Expected Clone 4 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(7).visible, "Expected Clone 7 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(10).visible, "Expected Clone 10 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(11).visible, "Expected Clone 11 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).volume, 100, "Expected Clone 2 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).volume, 100, "Expected Clone 4 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).volume, 100, "Expected Clone 7 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).volume, 100, "Expected Clone 10 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).volume, 100, "Expected Clone 11 of Luftballon to have volume 100");
  await t.runForSteps(30);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).currentCostume, 2, "Expected Clone 2 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(5).currentCostume, 1, "Expected Clone 5 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).currentCostume, 0, "Expected Clone 9 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).currentCostume, 2, "Expected Clone 13 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).currentCostume, 2, "Expected Clone 15 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 15, "Expected Sprite Luftballon to have 15 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).direction, 90, 1, "Expected Clone 2 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(5).direction, 90, 1, "Expected Clone 5 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).direction, 90, 1, "Expected Clone 9 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).direction, 90, 1, "Expected Clone 13 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).direction, 90, 1, "Expected Clone 15 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.color, 0, "Expected effect color of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.fisheye, 0, "Expected effect fisheye of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.whirl, 0, "Expected effect whirl of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.pixelate, 0, "Expected effect pixelate of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.mosaic, 0, "Expected effect mosaic of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.brightness, 0, "Expected effect brightness of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).effects.ghost, 0, "Expected effect ghost of Clone 9 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).effects.color, 0, "Expected effect color of Clone 13 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).effects.fisheye, 0, "Expected effect fisheye of Clone 13 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).effects.whirl, 0, "Expected effect whirl of Clone 13 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).effects.pixelate, 0, "Expected effect pixelate of Clone 13 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).effects.mosaic, 0, "Expected effect mosaic of Clone 13 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).effects.brightness, 0, "Expected effect brightness of Clone 13 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).effects.ghost, 0, "Expected effect ghost of Clone 13 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.color, 0, "Expected effect color of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.fisheye, 0, "Expected effect fisheye of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.whirl, 0, "Expected effect whirl of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.pixelate, 0, "Expected effect pixelate of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.mosaic, 0, "Expected effect mosaic of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.brightness, 0, "Expected effect brightness of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).effects.ghost, 0, "Expected effect ghost of Clone 15 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 18, "Expected Sprite Einhorn to be at layer 18");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 16, "Expected Sprite Luftballon to be at layer 16");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).getLayerOrder(), 12, "Expected Clone 2 of Luftballon to be at layer 12");
  t.assert.equal(t.getSprite("Luftballon").getClone(5).getLayerOrder(), 13, "Expected Clone 5 of Luftballon to be at layer 13");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).getLayerOrder(), 14, "Expected Clone 9 of Luftballon to be at layer 14");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).getLayerOrder(), 15, "Expected Clone 13 of Luftballon to be at layer 15");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).getLayerOrder(), 7, "Expected Clone 15 of Luftballon to be at layer 7");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).x, 10, 5, "Expected Clone 2 of Luftballon to have x-position 10 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).y, -120, 5, "Expected Clone 2 of Luftballon to have y-position -120 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(5).x, 95, 5, "Expected Clone 5 of Luftballon to have x-position 95 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(5).y, 68, 5, "Expected Clone 5 of Luftballon to have y-position 68 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(9).x, -222, 5, "Expected Clone 9 of Luftballon to have x-position -222 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(9).y, 32, 5, "Expected Clone 9 of Luftballon to have y-position 32 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(13).x, -51, 5, "Expected Clone 13 of Luftballon to have x-position -51 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(13).y, 77, 5, "Expected Clone 13 of Luftballon to have y-position 77 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(15).x, 142, 5, "Expected Clone 15 of Luftballon to have x-position 142 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(15).y, -15, 5, "Expected Clone 15 of Luftballon to have y-position -15 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(2).sayText, "Expected Clone 2 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(5).sayText, "Expected Clone 5 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(9).sayText, "Expected Clone 9 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(13).sayText, "Expected Clone 13 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(15).sayText, "Expected Clone 15 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).size, 50, 1, "Expected Clone 2 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(5).size, 50, 1, "Expected Clone 5 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(9).size, 50, 1, "Expected Clone 9 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(13).size, 50, 1, "Expected Clone 13 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(15).size, 50, 1, "Expected Clone 15 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.ok(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(2).visible, "Expected Clone 2 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(5).visible, "Expected Clone 5 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(9).visible, "Expected Clone 9 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(13).visible, "Expected Clone 13 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(15).visible, "Expected Clone 15 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).volume, 100, "Expected Clone 2 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(5).volume, 100, "Expected Clone 5 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(9).volume, 100, "Expected Clone 9 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(13).volume, 100, "Expected Clone 13 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(15).volume, 100, "Expected Clone 15 of Luftballon to have volume 100");
  await t.runForSteps(10);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).currentCostume, 2, "Expected Clone 4 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).currentCostume, 1, "Expected Clone 8 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).currentCostume, 0, "Expected Clone 12 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).currentCostume, 2, "Expected Clone 16 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).currentCostume, 2, "Expected Clone 17 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 17, "Expected Sprite Luftballon to have 17 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).direction, 90, 1, "Expected Clone 4 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).direction, 90, 1, "Expected Clone 8 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).direction, 90, 1, "Expected Clone 12 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).direction, 90, 1, "Expected Clone 16 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).direction, 90, 1, "Expected Clone 17 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.color, 0, "Expected effect color of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.fisheye, 0, "Expected effect fisheye of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.whirl, 0, "Expected effect whirl of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.pixelate, 0, "Expected effect pixelate of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.mosaic, 0, "Expected effect mosaic of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.brightness, 0, "Expected effect brightness of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.ghost, 0, "Expected effect ghost of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.color, 0, "Expected effect color of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.fisheye, 0, "Expected effect fisheye of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.whirl, 0, "Expected effect whirl of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.pixelate, 0, "Expected effect pixelate of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.mosaic, 0, "Expected effect mosaic of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.brightness, 0, "Expected effect brightness of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.ghost, 0, "Expected effect ghost of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.color, 0, "Expected effect color of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.fisheye, 0, "Expected effect fisheye of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.whirl, 0, "Expected effect whirl of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.pixelate, 0, "Expected effect pixelate of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.mosaic, 0, "Expected effect mosaic of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.brightness, 0, "Expected effect brightness of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.ghost, 0, "Expected effect ghost of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.color, 0, "Expected effect color of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.fisheye, 0, "Expected effect fisheye of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.whirl, 0, "Expected effect whirl of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.pixelate, 0, "Expected effect pixelate of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.mosaic, 0, "Expected effect mosaic of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.brightness, 0, "Expected effect brightness of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.ghost, 0, "Expected effect ghost of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 20, "Expected Sprite Einhorn to be at layer 20");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 18, "Expected Sprite Luftballon to be at layer 18");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).getLayerOrder(), 14, "Expected Clone 4 of Luftballon to be at layer 14");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).getLayerOrder(), 15, "Expected Clone 8 of Luftballon to be at layer 15");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).getLayerOrder(), 16, "Expected Clone 12 of Luftballon to be at layer 16");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).getLayerOrder(), 17, "Expected Clone 16 of Luftballon to be at layer 17");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).getLayerOrder(), 13, "Expected Clone 17 of Luftballon to be at layer 13");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).x, -222, 5, "Expected Clone 4 of Luftballon to have x-position -222 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).y, 32, 5, "Expected Clone 4 of Luftballon to have y-position 32 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).x, -51, 5, "Expected Clone 8 of Luftballon to have x-position -51 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).y, 77, 5, "Expected Clone 8 of Luftballon to have y-position 77 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).x, -115, 5, "Expected Clone 12 of Luftballon to have x-position -115 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).y, 10, 5, "Expected Clone 12 of Luftballon to have y-position 10 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(16).x, -223, 5, "Expected Clone 16 of Luftballon to have x-position -223 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(16).y, 23, 5, "Expected Clone 16 of Luftballon to have y-position 23 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(17).x, 77, 5, "Expected Clone 17 of Luftballon to have x-position 77 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(17).y, 32, 5, "Expected Clone 17 of Luftballon to have y-position 32 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(4).sayText, "Expected Clone 4 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(8).sayText, "Expected Clone 8 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(12).sayText, "Expected Clone 12 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(16).sayText, "Expected Clone 16 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(17).sayText, "Expected Clone 17 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).size, 50, 1, "Expected Clone 4 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).size, 50, 1, "Expected Clone 8 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).size, 50, 1, "Expected Clone 12 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(16).size, 50, 1, "Expected Clone 16 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(17).size, 50, 1, "Expected Clone 17 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.ok(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(4).visible, "Expected Clone 4 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(8).visible, "Expected Clone 8 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(12).visible, "Expected Clone 12 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(16).visible, "Expected Clone 16 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(17).visible, "Expected Clone 17 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).volume, 100, "Expected Clone 4 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).volume, 100, "Expected Clone 8 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).volume, 100, "Expected Clone 12 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).volume, 100, "Expected Clone 16 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).volume, 100, "Expected Clone 17 of Luftballon to have volume 100");
  await t.runForSteps(16);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).currentCostume, 2, "Expected Clone 3 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).currentCostume, 1, "Expected Clone 7 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).currentCostume, 0, "Expected Clone 11 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).currentCostume, 2, "Expected Clone 16 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(19).currentCostume, 2, "Expected Clone 19 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 19, "Expected Sprite Luftballon to have 19 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).direction, 90, 1, "Expected Clone 3 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).direction, 90, 1, "Expected Clone 7 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).direction, 90, 1, "Expected Clone 11 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).direction, 90, 1, "Expected Clone 16 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(19).direction, 90, 1, "Expected Clone 19 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.color, 0, "Expected effect color of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.fisheye, 0, "Expected effect fisheye of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.whirl, 0, "Expected effect whirl of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.pixelate, 0, "Expected effect pixelate of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.mosaic, 0, "Expected effect mosaic of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.brightness, 0, "Expected effect brightness of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.ghost, 0, "Expected effect ghost of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.color, 0, "Expected effect color of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.fisheye, 0, "Expected effect fisheye of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.whirl, 0, "Expected effect whirl of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.pixelate, 0, "Expected effect pixelate of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.mosaic, 0, "Expected effect mosaic of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.brightness, 0, "Expected effect brightness of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).effects.ghost, 0, "Expected effect ghost of Clone 11 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.color, 0, "Expected effect color of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.fisheye, 0, "Expected effect fisheye of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.whirl, 0, "Expected effect whirl of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.pixelate, 0, "Expected effect pixelate of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.mosaic, 0, "Expected effect mosaic of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.brightness, 0, "Expected effect brightness of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.ghost, 0, "Expected effect ghost of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(19).effects.color, 0, "Expected effect color of Clone 19 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(19).effects.fisheye, 0, "Expected effect fisheye of Clone 19 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(19).effects.whirl, 0, "Expected effect whirl of Clone 19 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(19).effects.pixelate, 0, "Expected effect pixelate of Clone 19 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(19).effects.mosaic, 0, "Expected effect mosaic of Clone 19 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(19).effects.brightness, 0, "Expected effect brightness of Clone 19 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(19).effects.ghost, 0, "Expected effect ghost of Clone 19 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 22, "Expected Sprite Einhorn to be at layer 22");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 20, "Expected Sprite Luftballon to be at layer 20");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).getLayerOrder(), 16, "Expected Clone 3 of Luftballon to be at layer 16");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).getLayerOrder(), 17, "Expected Clone 7 of Luftballon to be at layer 17");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).getLayerOrder(), 18, "Expected Clone 11 of Luftballon to be at layer 18");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).getLayerOrder(), 19, "Expected Clone 16 of Luftballon to be at layer 19");
  t.assert.equal(t.getSprite("Luftballon").getClone(19).getLayerOrder(), 11, "Expected Clone 19 of Luftballon to be at layer 11");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(3).x, -115, 5, "Expected Clone 3 of Luftballon to have x-position -115 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(3).y, 10, 5, "Expected Clone 3 of Luftballon to have y-position 10 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).x, -223, 5, "Expected Clone 7 of Luftballon to have x-position -223 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).y, 23, 5, "Expected Clone 7 of Luftballon to have y-position 23 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(11).x, 129, 5, "Expected Clone 11 of Luftballon to have x-position 129 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(11).y, -1, 5, "Expected Clone 11 of Luftballon to have y-position -1 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(16).x, 76, 5, "Expected Clone 16 of Luftballon to have x-position 76 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(16).y, -53, 5, "Expected Clone 16 of Luftballon to have y-position -53 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(19).x, 38, 5, "Expected Clone 19 of Luftballon to have x-position 38 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(19).y, -84, 5, "Expected Clone 19 of Luftballon to have y-position -84 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(3).sayText, "Expected Clone 3 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(7).sayText, "Expected Clone 7 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(11).sayText, "Expected Clone 11 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(16).sayText, "Expected Clone 16 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(19).sayText, "Expected Clone 19 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(3).size, 50, 1, "Expected Clone 3 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).size, 50, 1, "Expected Clone 7 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(11).size, 50, 1, "Expected Clone 11 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(16).size, 50, 1, "Expected Clone 16 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(19).size, 50, 1, "Expected Clone 19 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.ok(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(3).visible, "Expected Clone 3 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(7).visible, "Expected Clone 7 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(11).visible, "Expected Clone 11 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(16).visible, "Expected Clone 16 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(19).visible, "Expected Clone 19 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).volume, 100, "Expected Clone 3 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).volume, 100, "Expected Clone 7 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(11).volume, 100, "Expected Clone 11 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).volume, 100, "Expected Clone 16 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(19).volume, 100, "Expected Clone 19 of Luftballon to have volume 100");
  await t.runForSteps(6);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).currentCostume, 2, "Expected Clone 3 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).currentCostume, 1, "Expected Clone 7 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).currentCostume, 0, "Expected Clone 12 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).currentCostume, 2, "Expected Clone 17 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).currentCostume, 2, "Expected Clone 20 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 20, "Expected Sprite Luftballon to have 20 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).direction, 90, 1, "Expected Clone 3 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).direction, 90, 1, "Expected Clone 7 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).direction, 90, 1, "Expected Clone 12 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).direction, 90, 1, "Expected Clone 17 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).direction, 90, 1, "Expected Clone 20 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.color, 0, "Expected effect color of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.fisheye, 0, "Expected effect fisheye of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.whirl, 0, "Expected effect whirl of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.pixelate, 0, "Expected effect pixelate of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.mosaic, 0, "Expected effect mosaic of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.brightness, 0, "Expected effect brightness of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.ghost, 0, "Expected effect ghost of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.color, 0, "Expected effect color of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.fisheye, 0, "Expected effect fisheye of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.whirl, 0, "Expected effect whirl of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.pixelate, 0, "Expected effect pixelate of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.mosaic, 0, "Expected effect mosaic of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.brightness, 0, "Expected effect brightness of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.ghost, 0, "Expected effect ghost of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.color, 0, "Expected effect color of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.fisheye, 0, "Expected effect fisheye of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.whirl, 0, "Expected effect whirl of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.pixelate, 0, "Expected effect pixelate of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.mosaic, 0, "Expected effect mosaic of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.brightness, 0, "Expected effect brightness of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.ghost, 0, "Expected effect ghost of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.color, 0, "Expected effect color of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.fisheye, 0, "Expected effect fisheye of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.whirl, 0, "Expected effect whirl of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.pixelate, 0, "Expected effect pixelate of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.mosaic, 0, "Expected effect mosaic of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.brightness, 0, "Expected effect brightness of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.ghost, 0, "Expected effect ghost of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 23, "Expected Sprite Einhorn to be at layer 23");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 21, "Expected Sprite Luftballon to be at layer 21");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).getLayerOrder(), 17, "Expected Clone 3 of Luftballon to be at layer 17");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).getLayerOrder(), 18, "Expected Clone 7 of Luftballon to be at layer 18");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).getLayerOrder(), 19, "Expected Clone 12 of Luftballon to be at layer 19");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).getLayerOrder(), 20, "Expected Clone 17 of Luftballon to be at layer 20");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).getLayerOrder(), 12, "Expected Clone 20 of Luftballon to be at layer 12");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(3).x, -223, 5, "Expected Clone 3 of Luftballon to have x-position -223 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(3).y, 23, 5, "Expected Clone 3 of Luftballon to have y-position 23 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).x, 129, 5, "Expected Clone 7 of Luftballon to have x-position 129 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).y, -1, 5, "Expected Clone 7 of Luftballon to have y-position -1 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).x, 76, 5, "Expected Clone 12 of Luftballon to have x-position 76 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).y, -53, 5, "Expected Clone 12 of Luftballon to have y-position -53 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(17).x, 128, 5, "Expected Clone 17 of Luftballon to have x-position 128 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(17).y, -139, 5, "Expected Clone 17 of Luftballon to have y-position -139 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(20).x, -125, 5, "Expected Clone 20 of Luftballon to have x-position -125 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(20).y, -51, 5, "Expected Clone 20 of Luftballon to have y-position -51 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(3).sayText, "Expected Clone 3 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(7).sayText, "Expected Clone 7 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(12).sayText, "Expected Clone 12 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(17).sayText, "Expected Clone 17 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(20).sayText, "Expected Clone 20 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(3).size, 50, 1, "Expected Clone 3 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).size, 50, 1, "Expected Clone 7 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).size, 50, 1, "Expected Clone 12 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(17).size, 50, 1, "Expected Clone 17 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(20).size, 50, 1, "Expected Clone 20 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.ok(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(3).visible, "Expected Clone 3 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(7).visible, "Expected Clone 7 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(12).visible, "Expected Clone 12 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(17).visible, "Expected Clone 17 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(20).visible, "Expected Clone 20 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(3).volume, 100, "Expected Clone 3 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).volume, 100, "Expected Clone 7 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).volume, 100, "Expected Clone 12 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).volume, 100, "Expected Clone 17 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).volume, 100, "Expected Clone 20 of Luftballon to have volume 100");
  await t.runForSteps(36);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).currentCostume, 0, "Expected Clone 2 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).currentCostume, 2, "Expected Clone 8 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).currentCostume, 1, "Expected Clone 14 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).currentCostume, 0, "Expected Clone 20 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(26).currentCostume, 2, "Expected Clone 26 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 26, "Expected Sprite Luftballon to have 26 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).direction, 90, 1, "Expected Clone 2 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).direction, 90, 1, "Expected Clone 8 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).direction, 90, 1, "Expected Clone 14 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).direction, 90, 1, "Expected Clone 20 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(26).direction, 90, 1, "Expected Clone 26 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.color, 0, "Expected effect color of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.fisheye, 0, "Expected effect fisheye of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.whirl, 0, "Expected effect whirl of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.pixelate, 0, "Expected effect pixelate of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.mosaic, 0, "Expected effect mosaic of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.brightness, 0, "Expected effect brightness of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.ghost, 0, "Expected effect ghost of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.color, 0, "Expected effect color of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.fisheye, 0, "Expected effect fisheye of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.whirl, 0, "Expected effect whirl of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.pixelate, 0, "Expected effect pixelate of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.mosaic, 0, "Expected effect mosaic of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.brightness, 0, "Expected effect brightness of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.ghost, 0, "Expected effect ghost of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.color, 0, "Expected effect color of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.fisheye, 0, "Expected effect fisheye of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.whirl, 0, "Expected effect whirl of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.pixelate, 0, "Expected effect pixelate of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.mosaic, 0, "Expected effect mosaic of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.brightness, 0, "Expected effect brightness of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).effects.ghost, 0, "Expected effect ghost of Clone 20 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(26).effects.color, 0, "Expected effect color of Clone 26 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(26).effects.fisheye, 0, "Expected effect fisheye of Clone 26 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(26).effects.whirl, 0, "Expected effect whirl of Clone 26 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(26).effects.pixelate, 0, "Expected effect pixelate of Clone 26 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(26).effects.mosaic, 0, "Expected effect mosaic of Clone 26 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(26).effects.brightness, 0, "Expected effect brightness of Clone 26 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(26).effects.ghost, 0, "Expected effect ghost of Clone 26 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 29, "Expected Sprite Einhorn to be at layer 29");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 27, "Expected Sprite Luftballon to be at layer 27");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).getLayerOrder(), 22, "Expected Clone 2 of Luftballon to be at layer 22");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).getLayerOrder(), 23, "Expected Clone 8 of Luftballon to be at layer 23");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).getLayerOrder(), 24, "Expected Clone 14 of Luftballon to be at layer 24");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).getLayerOrder(), 25, "Expected Clone 20 of Luftballon to be at layer 25");
  t.assert.equal(t.getSprite("Luftballon").getClone(26).getLayerOrder(), 26, "Expected Clone 26 of Luftballon to be at layer 26");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).x, 96, 5, "Expected Clone 2 of Luftballon to have x-position 96 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).y, 143, 5, "Expected Clone 2 of Luftballon to have y-position 143 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).x, 9, 5, "Expected Clone 8 of Luftballon to have x-position 9 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).y, -41, 5, "Expected Clone 8 of Luftballon to have y-position -41 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(14).x, 175, 5, "Expected Clone 14 of Luftballon to have x-position 175 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(14).y, -99, 5, "Expected Clone 14 of Luftballon to have y-position -99 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(20).x, 82, 5, "Expected Clone 20 of Luftballon to have x-position 82 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(20).y, 69, 5, "Expected Clone 20 of Luftballon to have y-position 69 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(26).x, 167, 5, "Expected Clone 26 of Luftballon to have x-position 167 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(26).y, 28, 5, "Expected Clone 26 of Luftballon to have y-position 28 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(2).sayText, "Expected Clone 2 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(8).sayText, "Expected Clone 8 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(14).sayText, "Expected Clone 14 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(20).sayText, "Expected Clone 20 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(26).sayText, "Expected Clone 26 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(2).size, 50, 1, "Expected Clone 2 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).size, 50, 1, "Expected Clone 8 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(14).size, 50, 1, "Expected Clone 14 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(20).size, 50, 1, "Expected Clone 20 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(26).size, 50, 1, "Expected Clone 26 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.ok(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(2).visible, "Expected Clone 2 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(8).visible, "Expected Clone 8 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(14).visible, "Expected Clone 14 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(20).visible, "Expected Clone 20 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(26).visible, "Expected Clone 26 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(2).volume, 100, "Expected Clone 2 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).volume, 100, "Expected Clone 8 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).volume, 100, "Expected Clone 14 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(20).volume, 100, "Expected Clone 20 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(26).volume, 100, "Expected Clone 26 of Luftballon to have volume 100");
  await t.runForSteps(89);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 26, "Expected Clone 30 of Luftballon to be at layer 26");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, 77, 5, "Expected Clone 30 of Luftballon to have x-position 77 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, -74, 5, "Expected Clone 30 of Luftballon to have y-position -74 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  t.end();
}

module.exports = [
  {
      test: test0,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687936707611',
      type: 'standard',
  }
]
