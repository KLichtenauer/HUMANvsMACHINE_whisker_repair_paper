const test0 = async function (t) {
  await t.runForSteps(31);
  await t.runForSteps(1);
  await t.runForSteps(21);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, -74, 5, "Expected Sprite Tera to have x-position -74 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, -7, 5, "Expected Sprite Tera to have y-position -7 +-5");
  t.dragSprite('Katze', -125, -60, null);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Katze").x, -125, 5, "Expected Sprite Katze to have x-position -125 +-5");
  t.assert.withinRange(t.getSprite("Katze").y, -60, 5, "Expected Sprite Katze to have y-position -60 +-5");
  await t.runForSteps(38);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, 26, 5, "Expected Sprite Tera to have x-position 26 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, 93, 5, "Expected Sprite Tera to have y-position 93 +-5");
  await t.runForSteps(65);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, 126, 5, "Expected Sprite Tera to have x-position 126 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, -7, 5, "Expected Sprite Tera to have y-position -7 +-5");
  await t.runForSteps(17);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, 126, 5, "Expected Sprite Tera to have x-position 126 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, 93, 5, "Expected Sprite Tera to have y-position 93 +-5");
  t.mouseDown(true);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.withinRange(t.getSprite("Katze").x, 0, 5, "Expected Sprite Katze to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Katze").y, 0, 5, "Expected Sprite Katze to have y-position 0 +-5");
  t.dragSprite('Katze', -118.95403204907768, -180, null);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Katze").x, -118.95403204907768, 5, "Expected Sprite Katze to have x-position -118.95403204907768 +-5");
  t.assert.withinRange(t.getSprite("Katze").y, -180, 5, "Expected Sprite Katze to have y-position -180 +-5");
  t.assert.withinRange(t.getSprite("Tera").x, -74, 5, "Expected Sprite Tera to have x-position -74 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, 93, 5, "Expected Sprite Tera to have y-position 93 +-5");
  await t.runForSteps(28);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, -74, 5, "Expected Sprite Tera to have x-position -74 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, -107, 5, "Expected Sprite Tera to have y-position -107 +-5");
  t.dragSprite('Katze', -125, -60, null);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Katze").x, -125, 5, "Expected Sprite Katze to have x-position -125 +-5");
  t.assert.withinRange(t.getSprite("Katze").y, -60, 5, "Expected Sprite Katze to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Tera").x, 26, 5, "Expected Sprite Tera to have x-position 26 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, -107, 5, "Expected Sprite Tera to have y-position -107 +-5");
  t.mouseMove(3, -61);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, 26, 5, "Expected Sprite Tera to have x-position 26 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, -7, 5, "Expected Sprite Tera to have y-position -7 +-5");
  t.mouseDown(false);
  await t.runForSteps(1);
  t.mouseMove(-80, -16);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, 126, 5, "Expected Sprite Tera to have x-position 126 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, -7, 5, "Expected Sprite Tera to have y-position -7 +-5");
  t.mouseDown(true);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.withinRange(t.getSprite("Katze").x, -195, 5, "Expected Sprite Katze to have x-position -195 +-5");
  t.assert.withinRange(t.getSprite("Katze").y, 0, 5, "Expected Sprite Katze to have y-position 0 +-5");
  t.assert.equal(t.getSprite("Katze").getVariable("Meine Züge").value, "1", "Expected Meine Züge to have value 1 in Sprite Katze");
  await t.runForSteps(40);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, 26, 5, "Expected Sprite Tera to have x-position 26 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, -7, 5, "Expected Sprite Tera to have y-position -7 +-5");
  t.mouseDown(false);
  await t.runForSteps(1);
  await t.runForSteps(61);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, 26, 5, "Expected Sprite Tera to have x-position 26 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, -107, 5, "Expected Sprite Tera to have y-position -107 +-5");
  t.dragSprite('Katze', -113.55219301381808, -128.93654646759802, null);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Katze").x, -113.55219301381808, 5, "Expected Sprite Katze to have x-position -113.55219301381808 +-5");
  t.assert.withinRange(t.getSprite("Katze").y, -128.93654646759802, 5, "Expected Sprite Katze to have y-position -128.93654646759802 +-5");
  t.mouseDown(true);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.withinRange(t.getSprite("Katze").x, -80, 5, "Expected Sprite Katze to have x-position -80 +-5");
  t.assert.withinRange(t.getSprite("Katze").y, -16, 5, "Expected Sprite Katze to have y-position -16 +-5");
  t.mouseDown(false);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, 126, 5, "Expected Sprite Tera to have x-position 126 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, -7, 5, "Expected Sprite Tera to have y-position -7 +-5");
  await t.runForSteps(11);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, -74, 5, "Expected Sprite Tera to have x-position -74 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, 93, 5, "Expected Sprite Tera to have y-position 93 +-5");
  t.mouseMove(-28, -167);
  await t.runForSteps(1);
  t.dragSprite('Katze', -186.5465524427385, -34.91424216476372, null);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Katze").x, -186.5465524427385, 5, "Expected Sprite Katze to have x-position -186.5465524427385 +-5");
  t.assert.withinRange(t.getSprite("Katze").y, -34.91424216476372, 5, "Expected Sprite Katze to have y-position -34.91424216476372 +-5");
  t.dragSprite('Katze', -145.37203588649098, -126.57395563047427, null);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Katze").x, -145.37203588649098, 5, "Expected Sprite Katze to have x-position -145.37203588649098 +-5");
  t.assert.withinRange(t.getSprite("Katze").y, -126.57395563047427, 5, "Expected Sprite Katze to have y-position -126.57395563047427 +-5");
  t.assert.withinRange(t.getSprite("Tera").x, 26, 5, "Expected Sprite Tera to have x-position 26 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, -107, 5, "Expected Sprite Tera to have y-position -107 +-5");
  t.mouseMove(-30, 162);
  await t.runForSteps(1);
  await t.runForSteps(33);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, -74, 5, "Expected Sprite Tera to have x-position -74 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, -107, 5, "Expected Sprite Tera to have y-position -107 +-5");
  await t.runForSteps(42);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, -74, 5, "Expected Sprite Tera to have x-position -74 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, -7, 5, "Expected Sprite Tera to have y-position -7 +-5");
  await t.runForSteps(17);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, -74, 5, "Expected Sprite Tera to have x-position -74 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, 93, 5, "Expected Sprite Tera to have y-position 93 +-5");
  t.mouseMove(57, -174);
  await t.runForSteps(1);
  await t.runForSteps(83);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, 26, 5, "Expected Sprite Tera to have x-position 26 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, -7, 5, "Expected Sprite Tera to have y-position -7 +-5");
  await t.runForSteps(74);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, 126, 5, "Expected Sprite Tera to have x-position 126 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, -7, 5, "Expected Sprite Tera to have y-position -7 +-5");
  t.dragSprite('Katze', -125, -60, null);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Katze").x, -125, 5, "Expected Sprite Katze to have x-position -125 +-5");
  t.assert.withinRange(t.getSprite("Katze").y, -60, 5, "Expected Sprite Katze to have y-position -60 +-5");
  t.mouseDown(true);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Katze").x, 57, 5, "Expected Sprite Katze to have x-position 57 +-5");
  t.assert.withinRange(t.getSprite("Katze").y, -174, 5, "Expected Sprite Katze to have y-position -174 +-5");
  t.assert.withinRange(t.getSprite("Tera").x, -74, 5, "Expected Sprite Tera to have x-position -74 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, 93, 5, "Expected Sprite Tera to have y-position 93 +-5");
  await t.runForSteps(82);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, -74, 5, "Expected Sprite Tera to have x-position -74 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, -107, 5, "Expected Sprite Tera to have y-position -107 +-5");
  t.mouseMove(155, 29);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, 26, 5, "Expected Sprite Tera to have x-position 26 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, -107, 5, "Expected Sprite Tera to have y-position -107 +-5");
  t.mouseMove(-166, 139);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, 26, 5, "Expected Sprite Tera to have x-position 26 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, -7, 5, "Expected Sprite Tera to have y-position -7 +-5");
  await t.runForSteps(99);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, 26, 5, "Expected Sprite Tera to have x-position 26 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, -107, 5, "Expected Sprite Tera to have y-position -107 +-5");
  await t.runForSteps(89);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, 26, 5, "Expected Sprite Tera to have x-position 26 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, 93, 5, "Expected Sprite Tera to have y-position 93 +-5");
  t.mouseMove(-175, -98);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, 126, 5, "Expected Sprite Tera to have x-position 126 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, 93, 5, "Expected Sprite Tera to have y-position 93 +-5");
  await t.runForSteps(6);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, 26, 5, "Expected Sprite Tera to have x-position 26 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, -7, 5, "Expected Sprite Tera to have y-position -7 +-5");
  t.mouseMove(213, -169);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, 26, 5, "Expected Sprite Tera to have x-position 26 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, 93, 5, "Expected Sprite Tera to have y-position 93 +-5");
  t.mouseDown(false);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, 126, 5, "Expected Sprite Tera to have x-position 126 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, 93, 5, "Expected Sprite Tera to have y-position 93 +-5");
  t.mouseMove(224, 130);
  await t.runForSteps(1);
  t.mouseDown(true);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Katze").x, 224, 5, "Expected Sprite Katze to have x-position 224 +-5");
  t.assert.withinRange(t.getSprite("Katze").y, 130, 5, "Expected Sprite Katze to have y-position 130 +-5");
  t.assert.withinRange(t.getSprite("Tera").x, 126, 5, "Expected Sprite Tera to have x-position 126 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, -107, 5, "Expected Sprite Tera to have y-position -107 +-5");
  t.mouseDown(false);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, -74, 5, "Expected Sprite Tera to have x-position -74 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, -107, 5, "Expected Sprite Tera to have y-position -107 +-5");
  t.mouseDown(true);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, -74, 5, "Expected Sprite Tera to have x-position -74 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, -7, 5, "Expected Sprite Tera to have y-position -7 +-5");
  t.dragSprite('Katze', -125, -60, null);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Katze").x, -125, 5, "Expected Sprite Katze to have x-position -125 +-5");
  t.assert.withinRange(t.getSprite("Katze").y, -60, 5, "Expected Sprite Katze to have y-position -60 +-5");
  t.mouseMove(-23, 90);
  await t.runForSteps(1);
  t.assert.withinRange(t.getSprite("Tera").x, 26, 5, "Expected Sprite Tera to have x-position 26 +-5");
  t.assert.withinRange(t.getSprite("Tera").y, 93, 5, "Expected Sprite Tera to have y-position 93 +-5");
  t.end();
}

module.exports = [
  {
      test: test0,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687939196764',
      type: 'standard',
  }
]
