const test0 = async function (t) {
  t.keyPress('left arrow', 2);
  await t.runForSteps(2);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -103, 5, "Expected Sprite Blume to have x-position -103 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -56, 5, "Expected Sprite Blume to have y-position -56 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.keyPress('down arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -103, 5, "Expected Sprite Blume to have x-position -103 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -56, 5, "Expected Sprite Blume to have y-position -56 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.keyPress('down arrow', 2);
  await t.runForSteps(2);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -103, 5, "Expected Sprite Blume to have x-position -103 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -56, 5, "Expected Sprite Blume to have y-position -56 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.keyPress('down arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -103, 5, "Expected Sprite Blume to have x-position -103 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -56, 5, "Expected Sprite Blume to have y-position -56 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.dragSprite('Blume', -170, 60, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -170, 5, "Expected Sprite Blume to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 60, 5, "Expected Sprite Blume to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.keyPress('right arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -170, 5, "Expected Sprite Blume to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 60, 5, "Expected Sprite Blume to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  await t.runForSteps(85);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 1, "Expected Sprite Kaktus to have 1 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 3, "Expected Sprite Gärtnerin to be at layer 3");
  t.assert.equal(t.getSprite("Blume").layerOrder, 4, "Expected Sprite Blume to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 2, "Expected Sprite Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -122, 5, "Expected Sprite Blume to have x-position -122 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 58, 5, "Expected Sprite Blume to have y-position 58 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.keyPress('up arrow', 2);
  await t.runForSteps(2);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 1, "Expected Sprite Kaktus to have 1 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 3, "Expected Sprite Gärtnerin to be at layer 3");
  t.assert.equal(t.getSprite("Blume").layerOrder, 4, "Expected Sprite Blume to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 2, "Expected Sprite Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 70, 5, "Expected Sprite Gärtnerin to have y-position 70 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -122, 5, "Expected Sprite Blume to have x-position -122 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 58, 5, "Expected Sprite Blume to have y-position 58 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 1, "Expected Sprite Kaktus to have 1 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 3, "Expected Sprite Gärtnerin to be at layer 3");
  t.assert.equal(t.getSprite("Blume").layerOrder, 4, "Expected Sprite Blume to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 2, "Expected Sprite Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 70, 5, "Expected Sprite Gärtnerin to have y-position 70 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -122, 5, "Expected Sprite Blume to have x-position -122 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 58, 5, "Expected Sprite Blume to have y-position 58 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.keyPress('left arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 1, "Expected Sprite Kaktus to have 1 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 3, "Expected Sprite Gärtnerin to be at layer 3");
  t.assert.equal(t.getSprite("Blume").layerOrder, 4, "Expected Sprite Blume to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 2, "Expected Sprite Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -190, 5, "Expected Sprite Gärtnerin to have x-position -190 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 70, 5, "Expected Sprite Gärtnerin to have y-position 70 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -122, 5, "Expected Sprite Blume to have x-position -122 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 58, 5, "Expected Sprite Blume to have y-position 58 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  await t.runForSteps(95);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 3, "Expected Sprite Kaktus to have 3 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 5, "Expected Sprite Gärtnerin to be at layer 5");
  t.assert.equal(t.getSprite("Blume").layerOrder, 6, "Expected Sprite Blume to be at layer 6");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 4, "Expected Sprite Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -190, 5, "Expected Sprite Gärtnerin to have x-position -190 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 70, 5, "Expected Sprite Gärtnerin to have y-position 70 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -122, 5, "Expected Sprite Blume to have x-position -122 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 58, 5, "Expected Sprite Blume to have y-position 58 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171, 5, "Expected Clone 2 of Kaktus to have x-position 171 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -81, 5, "Expected Clone 2 of Kaktus to have y-position -81 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -45, 5, "Expected Clone 3 of Kaktus to have x-position -45 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -126, 5, "Expected Clone 3 of Kaktus to have y-position -126 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.dragSprite('Blume', -126.36538563637163, 34.3604244282454, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 3, "Expected Sprite Kaktus to have 3 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 5, "Expected Sprite Gärtnerin to be at layer 5");
  t.assert.equal(t.getSprite("Blume").layerOrder, 6, "Expected Sprite Blume to be at layer 6");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 4, "Expected Sprite Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -190, 5, "Expected Sprite Gärtnerin to have x-position -190 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 70, 5, "Expected Sprite Gärtnerin to have y-position 70 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -126.36538563637163, 5, "Expected Sprite Blume to have x-position -126.36538563637163 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 34.3604244282454, 5, "Expected Sprite Blume to have y-position 34.3604244282454 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171, 5, "Expected Clone 2 of Kaktus to have x-position 171 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -81, 5, "Expected Clone 2 of Kaktus to have y-position -81 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -45, 5, "Expected Clone 3 of Kaktus to have x-position -45 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -126, 5, "Expected Clone 3 of Kaktus to have y-position -126 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.keyPress('down arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 3, "Expected Sprite Kaktus to have 3 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 5, "Expected Sprite Gärtnerin to be at layer 5");
  t.assert.equal(t.getSprite("Blume").layerOrder, 6, "Expected Sprite Blume to be at layer 6");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 4, "Expected Sprite Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -190, 5, "Expected Sprite Gärtnerin to have x-position -190 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 50, 5, "Expected Sprite Gärtnerin to have y-position 50 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -126.36538563637163, 5, "Expected Sprite Blume to have x-position -126.36538563637163 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 34.3604244282454, 5, "Expected Sprite Blume to have y-position 34.3604244282454 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171, 5, "Expected Clone 2 of Kaktus to have x-position 171 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -81, 5, "Expected Clone 2 of Kaktus to have y-position -81 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -45, 5, "Expected Clone 3 of Kaktus to have x-position -45 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -126, 5, "Expected Clone 3 of Kaktus to have y-position -126 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.keyPress('down arrow', 2);
  await t.runForSteps(2);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 3, "Expected Sprite Kaktus to have 3 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 5, "Expected Sprite Gärtnerin to be at layer 5");
  t.assert.equal(t.getSprite("Blume").layerOrder, 6, "Expected Sprite Blume to be at layer 6");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 4, "Expected Sprite Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -190, 5, "Expected Sprite Gärtnerin to have x-position -190 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 40, 5, "Expected Sprite Gärtnerin to have y-position 40 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -126.36538563637163, 5, "Expected Sprite Blume to have x-position -126.36538563637163 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 34.3604244282454, 5, "Expected Sprite Blume to have y-position 34.3604244282454 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171, 5, "Expected Clone 2 of Kaktus to have x-position 171 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -81, 5, "Expected Clone 2 of Kaktus to have y-position -81 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -45, 5, "Expected Clone 3 of Kaktus to have x-position -45 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -126, 5, "Expected Clone 3 of Kaktus to have y-position -126 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.keyPress('up arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 3, "Expected Sprite Kaktus to have 3 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 5, "Expected Sprite Gärtnerin to be at layer 5");
  t.assert.equal(t.getSprite("Blume").layerOrder, 6, "Expected Sprite Blume to be at layer 6");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 4, "Expected Sprite Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -190, 5, "Expected Sprite Gärtnerin to have x-position -190 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -126.36538563637163, 5, "Expected Sprite Blume to have x-position -126.36538563637163 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 34.3604244282454, 5, "Expected Sprite Blume to have y-position 34.3604244282454 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171, 5, "Expected Clone 2 of Kaktus to have x-position 171 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -81, 5, "Expected Clone 2 of Kaktus to have y-position -81 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -45, 5, "Expected Clone 3 of Kaktus to have x-position -45 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -126, 5, "Expected Clone 3 of Kaktus to have y-position -126 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.keyPress('right arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 3, "Expected Sprite Kaktus to have 3 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 5, "Expected Sprite Gärtnerin to be at layer 5");
  t.assert.equal(t.getSprite("Blume").layerOrder, 6, "Expected Sprite Blume to be at layer 6");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 4, "Expected Sprite Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -185, 5, "Expected Sprite Gärtnerin to have x-position -185 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -126.36538563637163, 5, "Expected Sprite Blume to have x-position -126.36538563637163 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 34.3604244282454, 5, "Expected Sprite Blume to have y-position 34.3604244282454 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171, 5, "Expected Clone 2 of Kaktus to have x-position 171 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -81, 5, "Expected Clone 2 of Kaktus to have y-position -81 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -45, 5, "Expected Clone 3 of Kaktus to have x-position -45 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -126, 5, "Expected Clone 3 of Kaktus to have y-position -126 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.keyPress('down arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 3, "Expected Sprite Kaktus to have 3 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 5, "Expected Sprite Gärtnerin to be at layer 5");
  t.assert.equal(t.getSprite("Blume").layerOrder, 6, "Expected Sprite Blume to be at layer 6");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 4, "Expected Sprite Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -185, 5, "Expected Sprite Gärtnerin to have x-position -185 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 45, 5, "Expected Sprite Gärtnerin to have y-position 45 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -126.36538563637163, 5, "Expected Sprite Blume to have x-position -126.36538563637163 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 34.3604244282454, 5, "Expected Sprite Blume to have y-position 34.3604244282454 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171, 5, "Expected Clone 2 of Kaktus to have x-position 171 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -81, 5, "Expected Clone 2 of Kaktus to have y-position -81 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -45, 5, "Expected Clone 3 of Kaktus to have x-position -45 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -126, 5, "Expected Clone 3 of Kaktus to have y-position -126 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.keyPress('left arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 3, "Expected Sprite Kaktus to have 3 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 5, "Expected Sprite Gärtnerin to be at layer 5");
  t.assert.equal(t.getSprite("Blume").layerOrder, 6, "Expected Sprite Blume to be at layer 6");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 4, "Expected Sprite Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -190, 5, "Expected Sprite Gärtnerin to have x-position -190 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 45, 5, "Expected Sprite Gärtnerin to have y-position 45 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -126.36538563637163, 5, "Expected Sprite Blume to have x-position -126.36538563637163 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 34.3604244282454, 5, "Expected Sprite Blume to have y-position 34.3604244282454 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171, 5, "Expected Clone 2 of Kaktus to have x-position 171 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -81, 5, "Expected Clone 2 of Kaktus to have y-position -81 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -45, 5, "Expected Clone 3 of Kaktus to have x-position -45 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -126, 5, "Expected Clone 3 of Kaktus to have y-position -126 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.dragSprite('Gärtnerin', 238.65431802824196, -11.059826958177993, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 3, "Expected Sprite Kaktus to have 3 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 5, "Expected Sprite Gärtnerin to be at layer 5");
  t.assert.equal(t.getSprite("Blume").layerOrder, 6, "Expected Sprite Blume to be at layer 6");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 4, "Expected Sprite Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 238.65431802824196, 5, "Expected Sprite Gärtnerin to have x-position 238.65431802824196 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, -11.059826958177993, 5, "Expected Sprite Gärtnerin to have y-position -11.059826958177993 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -126.36538563637163, 5, "Expected Sprite Blume to have x-position -126.36538563637163 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 34.3604244282454, 5, "Expected Sprite Blume to have y-position 34.3604244282454 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171, 5, "Expected Clone 2 of Kaktus to have x-position 171 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -81, 5, "Expected Clone 2 of Kaktus to have y-position -81 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -45, 5, "Expected Clone 3 of Kaktus to have x-position -45 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -126, 5, "Expected Clone 3 of Kaktus to have y-position -126 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.keyPress('right arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 3, "Expected Sprite Kaktus to have 3 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 5, "Expected Sprite Gärtnerin to be at layer 5");
  t.assert.equal(t.getSprite("Blume").layerOrder, 6, "Expected Sprite Blume to be at layer 6");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 4, "Expected Sprite Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 253.65431802824196, 5, "Expected Sprite Gärtnerin to have x-position 253.65431802824196 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, -11.059826958177993, 5, "Expected Sprite Gärtnerin to have y-position -11.059826958177993 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -126.36538563637163, 5, "Expected Sprite Blume to have x-position -126.36538563637163 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 34.3604244282454, 5, "Expected Sprite Blume to have y-position 34.3604244282454 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171, 5, "Expected Clone 2 of Kaktus to have x-position 171 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -81, 5, "Expected Clone 2 of Kaktus to have y-position -81 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -45, 5, "Expected Clone 3 of Kaktus to have x-position -45 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -126, 5, "Expected Clone 3 of Kaktus to have y-position -126 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  await t.runForSteps(85);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).currentCostume, 0, "Expected Clone 4 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).currentCostume, 0, "Expected Clone 5 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 5, "Expected Sprite Kaktus to have 5 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).direction, 90, 1, "Expected Clone 4 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).direction, 90, 1, "Expected Clone 5 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 7, "Expected Sprite Gärtnerin to be at layer 7");
  t.assert.equal(t.getSprite("Blume").layerOrder, 8, "Expected Sprite Blume to be at layer 8");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 6, "Expected Sprite Kaktus to be at layer 6");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).getLayerOrder(), 4, "Expected Clone 4 of Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).getLayerOrder(), 5, "Expected Clone 5 of Kaktus to be at layer 5");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 253.65431802824196, 5, "Expected Sprite Gärtnerin to have x-position 253.65431802824196 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, -11.059826958177993, 5, "Expected Sprite Gärtnerin to have y-position -11.059826958177993 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -126.36538563637163, 5, "Expected Sprite Blume to have x-position -126.36538563637163 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 34.3604244282454, 5, "Expected Sprite Blume to have y-position 34.3604244282454 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171, 5, "Expected Clone 2 of Kaktus to have x-position 171 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -81, 5, "Expected Clone 2 of Kaktus to have y-position -81 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -45, 5, "Expected Clone 3 of Kaktus to have x-position -45 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -126, 5, "Expected Clone 3 of Kaktus to have y-position -126 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).x, -133, 5, "Expected Clone 4 of Kaktus to have x-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).y, -24, 5, "Expected Clone 4 of Kaktus to have y-position -24 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).x, -36, 5, "Expected Clone 5 of Kaktus to have x-position -36 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).y, 12, 5, "Expected Clone 5 of Kaktus to have y-position 12 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(4).sayText, "Expected Clone 4 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(5).sayText, "Expected Clone 5 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).size, 20, 1, "Expected Clone 4 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).size, 20, 1, "Expected Clone 5 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(4).visible, "Expected Clone 4 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(5).visible, "Expected Clone 5 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).volume, 100, "Expected Clone 4 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).volume, 100, "Expected Clone 5 of Kaktus to have volume 100");
  await t.runForSteps(23);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).currentCostume, 0, "Expected Clone 4 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).currentCostume, 0, "Expected Clone 5 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 5, "Expected Sprite Kaktus to have 5 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).direction, 90, 1, "Expected Clone 4 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).direction, 90, 1, "Expected Clone 5 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 7, "Expected Sprite Gärtnerin to be at layer 7");
  t.assert.equal(t.getSprite("Blume").layerOrder, 8, "Expected Sprite Blume to be at layer 8");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 6, "Expected Sprite Kaktus to be at layer 6");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).getLayerOrder(), 4, "Expected Clone 4 of Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).getLayerOrder(), 5, "Expected Clone 5 of Kaktus to be at layer 5");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 253.65431802824196, 5, "Expected Sprite Gärtnerin to have x-position 253.65431802824196 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, -11.059826958177993, 5, "Expected Sprite Gärtnerin to have y-position -11.059826958177993 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -126.36538563637163, 5, "Expected Sprite Blume to have x-position -126.36538563637163 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 34.3604244282454, 5, "Expected Sprite Blume to have y-position 34.3604244282454 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171, 5, "Expected Clone 2 of Kaktus to have x-position 171 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -81, 5, "Expected Clone 2 of Kaktus to have y-position -81 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -45, 5, "Expected Clone 3 of Kaktus to have x-position -45 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -126, 5, "Expected Clone 3 of Kaktus to have y-position -126 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).x, -133, 5, "Expected Clone 4 of Kaktus to have x-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).y, -24, 5, "Expected Clone 4 of Kaktus to have y-position -24 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).x, -36, 5, "Expected Clone 5 of Kaktus to have x-position -36 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).y, 12, 5, "Expected Clone 5 of Kaktus to have y-position 12 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(4).sayText, "Expected Clone 4 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(5).sayText, "Expected Clone 5 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).size, 20, 1, "Expected Clone 4 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).size, 20, 1, "Expected Clone 5 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(4).visible, "Expected Clone 4 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(5).visible, "Expected Clone 5 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).volume, 100, "Expected Clone 4 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).volume, 100, "Expected Clone 5 of Kaktus to have volume 100");
  await t.runForSteps(56);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).currentCostume, 0, "Expected Clone 4 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).currentCostume, 0, "Expected Clone 5 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).currentCostume, 0, "Expected Clone 6 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 6, "Expected Sprite Kaktus to have 6 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).direction, 90, 1, "Expected Clone 4 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).direction, 90, 1, "Expected Clone 5 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).direction, 90, 1, "Expected Clone 6 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 8, "Expected Sprite Gärtnerin to be at layer 8");
  t.assert.equal(t.getSprite("Blume").layerOrder, 9, "Expected Sprite Blume to be at layer 9");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 7, "Expected Sprite Kaktus to be at layer 7");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).getLayerOrder(), 4, "Expected Clone 4 of Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).getLayerOrder(), 5, "Expected Clone 5 of Kaktus to be at layer 5");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).getLayerOrder(), 6, "Expected Clone 6 of Kaktus to be at layer 6");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 253.65431802824196, 5, "Expected Sprite Gärtnerin to have x-position 253.65431802824196 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, -11.059826958177993, 5, "Expected Sprite Gärtnerin to have y-position -11.059826958177993 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -126.36538563637163, 5, "Expected Sprite Blume to have x-position -126.36538563637163 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 34.3604244282454, 5, "Expected Sprite Blume to have y-position 34.3604244282454 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171, 5, "Expected Clone 2 of Kaktus to have x-position 171 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -81, 5, "Expected Clone 2 of Kaktus to have y-position -81 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -45, 5, "Expected Clone 3 of Kaktus to have x-position -45 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -126, 5, "Expected Clone 3 of Kaktus to have y-position -126 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).x, -133, 5, "Expected Clone 4 of Kaktus to have x-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).y, -24, 5, "Expected Clone 4 of Kaktus to have y-position -24 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).x, -36, 5, "Expected Clone 5 of Kaktus to have x-position -36 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).y, 12, 5, "Expected Clone 5 of Kaktus to have y-position 12 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).x, 119, 5, "Expected Clone 6 of Kaktus to have x-position 119 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).y, 81, 5, "Expected Clone 6 of Kaktus to have y-position 81 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(4).sayText, "Expected Clone 4 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(5).sayText, "Expected Clone 5 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(6).sayText, "Expected Clone 6 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).size, 20, 1, "Expected Clone 4 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).size, 20, 1, "Expected Clone 5 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).size, 20, 1, "Expected Clone 6 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(4).visible, "Expected Clone 4 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(5).visible, "Expected Clone 5 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(6).visible, "Expected Clone 6 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).volume, 100, "Expected Clone 4 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).volume, 100, "Expected Clone 5 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).volume, 100, "Expected Clone 6 of Kaktus to have volume 100");
  t.keyPress('down arrow', 2);
  await t.runForSteps(2);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).currentCostume, 0, "Expected Clone 4 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).currentCostume, 0, "Expected Clone 5 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).currentCostume, 0, "Expected Clone 6 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 6, "Expected Sprite Kaktus to have 6 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).direction, 90, 1, "Expected Clone 4 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).direction, 90, 1, "Expected Clone 5 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).direction, 90, 1, "Expected Clone 6 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 8, "Expected Sprite Gärtnerin to be at layer 8");
  t.assert.equal(t.getSprite("Blume").layerOrder, 9, "Expected Sprite Blume to be at layer 9");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 7, "Expected Sprite Kaktus to be at layer 7");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).getLayerOrder(), 4, "Expected Clone 4 of Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).getLayerOrder(), 5, "Expected Clone 5 of Kaktus to be at layer 5");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).getLayerOrder(), 6, "Expected Clone 6 of Kaktus to be at layer 6");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 253.65431802824196, 5, "Expected Sprite Gärtnerin to have x-position 253.65431802824196 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, -21.059826958177993, 5, "Expected Sprite Gärtnerin to have y-position -21.059826958177993 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -126.36538563637163, 5, "Expected Sprite Blume to have x-position -126.36538563637163 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 34.3604244282454, 5, "Expected Sprite Blume to have y-position 34.3604244282454 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171, 5, "Expected Clone 2 of Kaktus to have x-position 171 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -81, 5, "Expected Clone 2 of Kaktus to have y-position -81 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -45, 5, "Expected Clone 3 of Kaktus to have x-position -45 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -126, 5, "Expected Clone 3 of Kaktus to have y-position -126 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).x, -133, 5, "Expected Clone 4 of Kaktus to have x-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).y, -24, 5, "Expected Clone 4 of Kaktus to have y-position -24 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).x, -36, 5, "Expected Clone 5 of Kaktus to have x-position -36 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).y, 12, 5, "Expected Clone 5 of Kaktus to have y-position 12 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).x, 119, 5, "Expected Clone 6 of Kaktus to have x-position 119 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).y, 81, 5, "Expected Clone 6 of Kaktus to have y-position 81 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(4).sayText, "Expected Clone 4 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(5).sayText, "Expected Clone 5 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(6).sayText, "Expected Clone 6 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).size, 20, 1, "Expected Clone 4 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).size, 20, 1, "Expected Clone 5 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).size, 20, 1, "Expected Clone 6 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(4).visible, "Expected Clone 4 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(5).visible, "Expected Clone 5 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(6).visible, "Expected Clone 6 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).volume, 100, "Expected Clone 4 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).volume, 100, "Expected Clone 5 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).volume, 100, "Expected Clone 6 of Kaktus to have volume 100");
  t.keyPress('left arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).currentCostume, 0, "Expected Clone 4 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).currentCostume, 0, "Expected Clone 5 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).currentCostume, 0, "Expected Clone 6 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 6, "Expected Sprite Kaktus to have 6 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).direction, 90, 1, "Expected Clone 4 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).direction, 90, 1, "Expected Clone 5 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).direction, 90, 1, "Expected Clone 6 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 8, "Expected Sprite Gärtnerin to be at layer 8");
  t.assert.equal(t.getSprite("Blume").layerOrder, 9, "Expected Sprite Blume to be at layer 9");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 7, "Expected Sprite Kaktus to be at layer 7");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).getLayerOrder(), 4, "Expected Clone 4 of Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).getLayerOrder(), 5, "Expected Clone 5 of Kaktus to be at layer 5");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).getLayerOrder(), 6, "Expected Clone 6 of Kaktus to be at layer 6");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 248.65431802824196, 5, "Expected Sprite Gärtnerin to have x-position 248.65431802824196 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, -21.059826958177993, 5, "Expected Sprite Gärtnerin to have y-position -21.059826958177993 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -126.36538563637163, 5, "Expected Sprite Blume to have x-position -126.36538563637163 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 34.3604244282454, 5, "Expected Sprite Blume to have y-position 34.3604244282454 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171, 5, "Expected Clone 2 of Kaktus to have x-position 171 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -81, 5, "Expected Clone 2 of Kaktus to have y-position -81 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -45, 5, "Expected Clone 3 of Kaktus to have x-position -45 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -126, 5, "Expected Clone 3 of Kaktus to have y-position -126 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).x, -133, 5, "Expected Clone 4 of Kaktus to have x-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).y, -24, 5, "Expected Clone 4 of Kaktus to have y-position -24 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).x, -36, 5, "Expected Clone 5 of Kaktus to have x-position -36 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).y, 12, 5, "Expected Clone 5 of Kaktus to have y-position 12 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).x, 119, 5, "Expected Clone 6 of Kaktus to have x-position 119 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).y, 81, 5, "Expected Clone 6 of Kaktus to have y-position 81 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(4).sayText, "Expected Clone 4 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(5).sayText, "Expected Clone 5 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(6).sayText, "Expected Clone 6 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).size, 20, 1, "Expected Clone 4 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).size, 20, 1, "Expected Clone 5 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).size, 20, 1, "Expected Clone 6 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(4).visible, "Expected Clone 4 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(5).visible, "Expected Clone 5 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(6).visible, "Expected Clone 6 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).volume, 100, "Expected Clone 4 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).volume, 100, "Expected Clone 5 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).volume, 100, "Expected Clone 6 of Kaktus to have volume 100");
  t.keyPress('right arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).currentCostume, 0, "Expected Clone 4 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).currentCostume, 0, "Expected Clone 5 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).currentCostume, 0, "Expected Clone 6 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 6, "Expected Sprite Kaktus to have 6 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).direction, 90, 1, "Expected Clone 4 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).direction, 90, 1, "Expected Clone 5 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).direction, 90, 1, "Expected Clone 6 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 8, "Expected Sprite Gärtnerin to be at layer 8");
  t.assert.equal(t.getSprite("Blume").layerOrder, 9, "Expected Sprite Blume to be at layer 9");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 7, "Expected Sprite Kaktus to be at layer 7");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).getLayerOrder(), 4, "Expected Clone 4 of Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).getLayerOrder(), 5, "Expected Clone 5 of Kaktus to be at layer 5");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).getLayerOrder(), 6, "Expected Clone 6 of Kaktus to be at layer 6");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 261, 5, "Expected Sprite Gärtnerin to have x-position 261 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, -21.059826958177993, 5, "Expected Sprite Gärtnerin to have y-position -21.059826958177993 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -126.36538563637163, 5, "Expected Sprite Blume to have x-position -126.36538563637163 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 34.3604244282454, 5, "Expected Sprite Blume to have y-position 34.3604244282454 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171, 5, "Expected Clone 2 of Kaktus to have x-position 171 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -81, 5, "Expected Clone 2 of Kaktus to have y-position -81 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -45, 5, "Expected Clone 3 of Kaktus to have x-position -45 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -126, 5, "Expected Clone 3 of Kaktus to have y-position -126 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).x, -133, 5, "Expected Clone 4 of Kaktus to have x-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).y, -24, 5, "Expected Clone 4 of Kaktus to have y-position -24 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).x, -36, 5, "Expected Clone 5 of Kaktus to have x-position -36 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).y, 12, 5, "Expected Clone 5 of Kaktus to have y-position 12 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).x, 119, 5, "Expected Clone 6 of Kaktus to have x-position 119 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).y, 81, 5, "Expected Clone 6 of Kaktus to have y-position 81 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(4).sayText, "Expected Clone 4 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(5).sayText, "Expected Clone 5 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(6).sayText, "Expected Clone 6 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).size, 20, 1, "Expected Clone 4 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).size, 20, 1, "Expected Clone 5 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).size, 20, 1, "Expected Clone 6 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(4).visible, "Expected Clone 4 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(5).visible, "Expected Clone 5 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(6).visible, "Expected Clone 6 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).volume, 100, "Expected Clone 4 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).volume, 100, "Expected Clone 5 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).volume, 100, "Expected Clone 6 of Kaktus to have volume 100");
  t.keyPress('left arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).currentCostume, 0, "Expected Clone 4 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).currentCostume, 0, "Expected Clone 5 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).currentCostume, 0, "Expected Clone 6 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 6, "Expected Sprite Kaktus to have 6 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).direction, 90, 1, "Expected Clone 4 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).direction, 90, 1, "Expected Clone 5 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).direction, 90, 1, "Expected Clone 6 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 8, "Expected Sprite Gärtnerin to be at layer 8");
  t.assert.equal(t.getSprite("Blume").layerOrder, 9, "Expected Sprite Blume to be at layer 9");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 7, "Expected Sprite Kaktus to be at layer 7");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).getLayerOrder(), 4, "Expected Clone 4 of Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).getLayerOrder(), 5, "Expected Clone 5 of Kaktus to be at layer 5");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).getLayerOrder(), 6, "Expected Clone 6 of Kaktus to be at layer 6");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 256, 5, "Expected Sprite Gärtnerin to have x-position 256 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, -21.059826958177993, 5, "Expected Sprite Gärtnerin to have y-position -21.059826958177993 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -126.36538563637163, 5, "Expected Sprite Blume to have x-position -126.36538563637163 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 34.3604244282454, 5, "Expected Sprite Blume to have y-position 34.3604244282454 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171, 5, "Expected Clone 2 of Kaktus to have x-position 171 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -81, 5, "Expected Clone 2 of Kaktus to have y-position -81 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -45, 5, "Expected Clone 3 of Kaktus to have x-position -45 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -126, 5, "Expected Clone 3 of Kaktus to have y-position -126 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).x, -133, 5, "Expected Clone 4 of Kaktus to have x-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).y, -24, 5, "Expected Clone 4 of Kaktus to have y-position -24 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).x, -36, 5, "Expected Clone 5 of Kaktus to have x-position -36 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).y, 12, 5, "Expected Clone 5 of Kaktus to have y-position 12 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).x, 119, 5, "Expected Clone 6 of Kaktus to have x-position 119 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).y, 81, 5, "Expected Clone 6 of Kaktus to have y-position 81 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(4).sayText, "Expected Clone 4 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(5).sayText, "Expected Clone 5 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(6).sayText, "Expected Clone 6 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).size, 20, 1, "Expected Clone 4 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).size, 20, 1, "Expected Clone 5 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).size, 20, 1, "Expected Clone 6 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(4).visible, "Expected Clone 4 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(5).visible, "Expected Clone 5 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(6).visible, "Expected Clone 6 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).volume, 100, "Expected Clone 4 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).volume, 100, "Expected Clone 5 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).volume, 100, "Expected Clone 6 of Kaktus to have volume 100");
  t.keyPress('up arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).currentCostume, 0, "Expected Clone 4 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).currentCostume, 0, "Expected Clone 5 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).currentCostume, 0, "Expected Clone 6 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 6, "Expected Sprite Kaktus to have 6 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).direction, 90, 1, "Expected Clone 4 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).direction, 90, 1, "Expected Clone 5 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).direction, 90, 1, "Expected Clone 6 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 8, "Expected Sprite Gärtnerin to be at layer 8");
  t.assert.equal(t.getSprite("Blume").layerOrder, 9, "Expected Sprite Blume to be at layer 9");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 7, "Expected Sprite Kaktus to be at layer 7");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).getLayerOrder(), 4, "Expected Clone 4 of Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).getLayerOrder(), 5, "Expected Clone 5 of Kaktus to be at layer 5");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).getLayerOrder(), 6, "Expected Clone 6 of Kaktus to be at layer 6");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 256, 5, "Expected Sprite Gärtnerin to have x-position 256 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, -6.059826958177993, 5, "Expected Sprite Gärtnerin to have y-position -6.059826958177993 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -126.36538563637163, 5, "Expected Sprite Blume to have x-position -126.36538563637163 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 34.3604244282454, 5, "Expected Sprite Blume to have y-position 34.3604244282454 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171, 5, "Expected Clone 2 of Kaktus to have x-position 171 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -81, 5, "Expected Clone 2 of Kaktus to have y-position -81 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -45, 5, "Expected Clone 3 of Kaktus to have x-position -45 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -126, 5, "Expected Clone 3 of Kaktus to have y-position -126 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).x, -133, 5, "Expected Clone 4 of Kaktus to have x-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).y, -24, 5, "Expected Clone 4 of Kaktus to have y-position -24 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).x, -36, 5, "Expected Clone 5 of Kaktus to have x-position -36 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).y, 12, 5, "Expected Clone 5 of Kaktus to have y-position 12 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).x, 119, 5, "Expected Clone 6 of Kaktus to have x-position 119 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).y, 81, 5, "Expected Clone 6 of Kaktus to have y-position 81 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(4).sayText, "Expected Clone 4 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(5).sayText, "Expected Clone 5 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(6).sayText, "Expected Clone 6 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).size, 20, 1, "Expected Clone 4 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).size, 20, 1, "Expected Clone 5 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).size, 20, 1, "Expected Clone 6 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(4).visible, "Expected Clone 4 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(5).visible, "Expected Clone 5 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(6).visible, "Expected Clone 6 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).volume, 100, "Expected Clone 4 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).volume, 100, "Expected Clone 5 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).volume, 100, "Expected Clone 6 of Kaktus to have volume 100");
  t.dragSprite('Blume', 206.31685253415338, 48.31188223780117, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).currentCostume, 0, "Expected Clone 4 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).currentCostume, 0, "Expected Clone 5 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).currentCostume, 0, "Expected Clone 6 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 6, "Expected Sprite Kaktus to have 6 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).direction, 90, 1, "Expected Clone 4 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).direction, 90, 1, "Expected Clone 5 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).direction, 90, 1, "Expected Clone 6 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 8, "Expected Sprite Gärtnerin to be at layer 8");
  t.assert.equal(t.getSprite("Blume").layerOrder, 9, "Expected Sprite Blume to be at layer 9");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 7, "Expected Sprite Kaktus to be at layer 7");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).getLayerOrder(), 4, "Expected Clone 4 of Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).getLayerOrder(), 5, "Expected Clone 5 of Kaktus to be at layer 5");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).getLayerOrder(), 6, "Expected Clone 6 of Kaktus to be at layer 6");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 256, 5, "Expected Sprite Gärtnerin to have x-position 256 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, -6.059826958177993, 5, "Expected Sprite Gärtnerin to have y-position -6.059826958177993 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 206.31685253415338, 5, "Expected Sprite Blume to have x-position 206.31685253415338 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 48.31188223780117, 5, "Expected Sprite Blume to have y-position 48.31188223780117 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171, 5, "Expected Clone 2 of Kaktus to have x-position 171 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -81, 5, "Expected Clone 2 of Kaktus to have y-position -81 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -45, 5, "Expected Clone 3 of Kaktus to have x-position -45 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -126, 5, "Expected Clone 3 of Kaktus to have y-position -126 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).x, -133, 5, "Expected Clone 4 of Kaktus to have x-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).y, -24, 5, "Expected Clone 4 of Kaktus to have y-position -24 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).x, -36, 5, "Expected Clone 5 of Kaktus to have x-position -36 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).y, 12, 5, "Expected Clone 5 of Kaktus to have y-position 12 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).x, 119, 5, "Expected Clone 6 of Kaktus to have x-position 119 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).y, 81, 5, "Expected Clone 6 of Kaktus to have y-position 81 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(4).sayText, "Expected Clone 4 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(5).sayText, "Expected Clone 5 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(6).sayText, "Expected Clone 6 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).size, 20, 1, "Expected Clone 4 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).size, 20, 1, "Expected Clone 5 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).size, 20, 1, "Expected Clone 6 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(4).visible, "Expected Clone 4 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(5).visible, "Expected Clone 5 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(6).visible, "Expected Clone 6 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).volume, 100, "Expected Clone 4 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).volume, 100, "Expected Clone 5 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).volume, 100, "Expected Clone 6 of Kaktus to have volume 100");
  t.keyPress('up arrow', 2);
  await t.runForSteps(2);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).currentCostume, 0, "Expected Clone 4 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).currentCostume, 0, "Expected Clone 5 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).currentCostume, 0, "Expected Clone 6 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 6, "Expected Sprite Kaktus to have 6 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).direction, 90, 1, "Expected Clone 4 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).direction, 90, 1, "Expected Clone 5 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).direction, 90, 1, "Expected Clone 6 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 8, "Expected Sprite Gärtnerin to be at layer 8");
  t.assert.equal(t.getSprite("Blume").layerOrder, 9, "Expected Sprite Blume to be at layer 9");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 7, "Expected Sprite Kaktus to be at layer 7");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).getLayerOrder(), 4, "Expected Clone 4 of Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).getLayerOrder(), 5, "Expected Clone 5 of Kaktus to be at layer 5");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).getLayerOrder(), 6, "Expected Clone 6 of Kaktus to be at layer 6");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 256, 5, "Expected Sprite Gärtnerin to have x-position 256 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 3.940173041822007, 5, "Expected Sprite Gärtnerin to have y-position 3.940173041822007 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 206.31685253415338, 5, "Expected Sprite Blume to have x-position 206.31685253415338 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 48.31188223780117, 5, "Expected Sprite Blume to have y-position 48.31188223780117 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171, 5, "Expected Clone 2 of Kaktus to have x-position 171 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -81, 5, "Expected Clone 2 of Kaktus to have y-position -81 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -45, 5, "Expected Clone 3 of Kaktus to have x-position -45 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -126, 5, "Expected Clone 3 of Kaktus to have y-position -126 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).x, -133, 5, "Expected Clone 4 of Kaktus to have x-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).y, -24, 5, "Expected Clone 4 of Kaktus to have y-position -24 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).x, -36, 5, "Expected Clone 5 of Kaktus to have x-position -36 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).y, 12, 5, "Expected Clone 5 of Kaktus to have y-position 12 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).x, 119, 5, "Expected Clone 6 of Kaktus to have x-position 119 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).y, 81, 5, "Expected Clone 6 of Kaktus to have y-position 81 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(4).sayText, "Expected Clone 4 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(5).sayText, "Expected Clone 5 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(6).sayText, "Expected Clone 6 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).size, 20, 1, "Expected Clone 4 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).size, 20, 1, "Expected Clone 5 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).size, 20, 1, "Expected Clone 6 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(4).visible, "Expected Clone 4 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(5).visible, "Expected Clone 5 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(6).visible, "Expected Clone 6 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).volume, 100, "Expected Clone 4 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).volume, 100, "Expected Clone 5 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).volume, 100, "Expected Clone 6 of Kaktus to have volume 100");
  t.keyPress('right arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).currentCostume, 0, "Expected Clone 4 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).currentCostume, 0, "Expected Clone 5 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).currentCostume, 0, "Expected Clone 6 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 6, "Expected Sprite Kaktus to have 6 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).direction, 90, 1, "Expected Clone 4 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).direction, 90, 1, "Expected Clone 5 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).direction, 90, 1, "Expected Clone 6 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 8, "Expected Sprite Gärtnerin to be at layer 8");
  t.assert.equal(t.getSprite("Blume").layerOrder, 9, "Expected Sprite Blume to be at layer 9");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 7, "Expected Sprite Kaktus to be at layer 7");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).getLayerOrder(), 4, "Expected Clone 4 of Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).getLayerOrder(), 5, "Expected Clone 5 of Kaktus to be at layer 5");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).getLayerOrder(), 6, "Expected Clone 6 of Kaktus to be at layer 6");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 261, 5, "Expected Sprite Gärtnerin to have x-position 261 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 3.940173041822007, 5, "Expected Sprite Gärtnerin to have y-position 3.940173041822007 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 206.31685253415338, 5, "Expected Sprite Blume to have x-position 206.31685253415338 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 48.31188223780117, 5, "Expected Sprite Blume to have y-position 48.31188223780117 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171, 5, "Expected Clone 2 of Kaktus to have x-position 171 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -81, 5, "Expected Clone 2 of Kaktus to have y-position -81 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -45, 5, "Expected Clone 3 of Kaktus to have x-position -45 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -126, 5, "Expected Clone 3 of Kaktus to have y-position -126 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).x, -133, 5, "Expected Clone 4 of Kaktus to have x-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).y, -24, 5, "Expected Clone 4 of Kaktus to have y-position -24 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).x, -36, 5, "Expected Clone 5 of Kaktus to have x-position -36 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).y, 12, 5, "Expected Clone 5 of Kaktus to have y-position 12 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).x, 119, 5, "Expected Clone 6 of Kaktus to have x-position 119 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).y, 81, 5, "Expected Clone 6 of Kaktus to have y-position 81 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(4).sayText, "Expected Clone 4 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(5).sayText, "Expected Clone 5 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(6).sayText, "Expected Clone 6 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).size, 20, 1, "Expected Clone 4 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).size, 20, 1, "Expected Clone 5 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).size, 20, 1, "Expected Clone 6 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(4).visible, "Expected Clone 4 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(5).visible, "Expected Clone 5 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(6).visible, "Expected Clone 6 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).volume, 100, "Expected Clone 4 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).volume, 100, "Expected Clone 5 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).volume, 100, "Expected Clone 6 of Kaktus to have volume 100");
  t.keyPress('up arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).currentCostume, 0, "Expected Clone 4 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).currentCostume, 0, "Expected Clone 5 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).currentCostume, 0, "Expected Clone 6 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 6, "Expected Sprite Kaktus to have 6 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).direction, 90, 1, "Expected Clone 4 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).direction, 90, 1, "Expected Clone 5 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).direction, 90, 1, "Expected Clone 6 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 8, "Expected Sprite Gärtnerin to be at layer 8");
  t.assert.equal(t.getSprite("Blume").layerOrder, 9, "Expected Sprite Blume to be at layer 9");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 7, "Expected Sprite Kaktus to be at layer 7");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).getLayerOrder(), 4, "Expected Clone 4 of Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).getLayerOrder(), 5, "Expected Clone 5 of Kaktus to be at layer 5");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).getLayerOrder(), 6, "Expected Clone 6 of Kaktus to be at layer 6");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 261, 5, "Expected Sprite Gärtnerin to have x-position 261 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 8.940173041822007, 5, "Expected Sprite Gärtnerin to have y-position 8.940173041822007 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 206.31685253415338, 5, "Expected Sprite Blume to have x-position 206.31685253415338 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 48.31188223780117, 5, "Expected Sprite Blume to have y-position 48.31188223780117 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171, 5, "Expected Clone 2 of Kaktus to have x-position 171 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -81, 5, "Expected Clone 2 of Kaktus to have y-position -81 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -45, 5, "Expected Clone 3 of Kaktus to have x-position -45 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -126, 5, "Expected Clone 3 of Kaktus to have y-position -126 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).x, -133, 5, "Expected Clone 4 of Kaktus to have x-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).y, -24, 5, "Expected Clone 4 of Kaktus to have y-position -24 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).x, -36, 5, "Expected Clone 5 of Kaktus to have x-position -36 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).y, 12, 5, "Expected Clone 5 of Kaktus to have y-position 12 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).x, 119, 5, "Expected Clone 6 of Kaktus to have x-position 119 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).y, 81, 5, "Expected Clone 6 of Kaktus to have y-position 81 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(4).sayText, "Expected Clone 4 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(5).sayText, "Expected Clone 5 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(6).sayText, "Expected Clone 6 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).size, 20, 1, "Expected Clone 4 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).size, 20, 1, "Expected Clone 5 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).size, 20, 1, "Expected Clone 6 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(4).visible, "Expected Clone 4 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(5).visible, "Expected Clone 5 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(6).visible, "Expected Clone 6 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).volume, 100, "Expected Clone 4 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).volume, 100, "Expected Clone 5 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).volume, 100, "Expected Clone 6 of Kaktus to have volume 100");
  t.dragSprite('Gärtnerin', 179, -7, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).currentCostume, 0, "Expected Clone 4 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).currentCostume, 0, "Expected Clone 5 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).currentCostume, 0, "Expected Clone 6 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 6, "Expected Sprite Kaktus to have 6 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).direction, 90, 1, "Expected Clone 4 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).direction, 90, 1, "Expected Clone 5 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).direction, 90, 1, "Expected Clone 6 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 25, "Expected effect color of Sprite Gärtnerin to be 25");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 8, "Expected Sprite Gärtnerin to be at layer 8");
  t.assert.equal(t.getSprite("Blume").layerOrder, 9, "Expected Sprite Blume to be at layer 9");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 7, "Expected Sprite Kaktus to be at layer 7");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).getLayerOrder(), 4, "Expected Clone 4 of Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).getLayerOrder(), 5, "Expected Clone 5 of Kaktus to be at layer 5");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).getLayerOrder(), 6, "Expected Clone 6 of Kaktus to be at layer 6");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 179, 5, "Expected Sprite Gärtnerin to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, -7, 5, "Expected Sprite Gärtnerin to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 206.31685253415338, 5, "Expected Sprite Blume to have x-position 206.31685253415338 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 48.31188223780117, 5, "Expected Sprite Blume to have y-position 48.31188223780117 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171, 5, "Expected Clone 2 of Kaktus to have x-position 171 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -81, 5, "Expected Clone 2 of Kaktus to have y-position -81 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -45, 5, "Expected Clone 3 of Kaktus to have x-position -45 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -126, 5, "Expected Clone 3 of Kaktus to have y-position -126 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).x, -133, 5, "Expected Clone 4 of Kaktus to have x-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).y, -24, 5, "Expected Clone 4 of Kaktus to have y-position -24 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).x, -36, 5, "Expected Clone 5 of Kaktus to have x-position -36 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).y, 12, 5, "Expected Clone 5 of Kaktus to have y-position 12 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).x, 119, 5, "Expected Clone 6 of Kaktus to have x-position 119 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).y, 81, 5, "Expected Clone 6 of Kaktus to have y-position 81 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Autsch!", "Expected Sprite Gärtnerin to say Autsch!");
  t.assert.equal(t.getSprite("Blume").sayText, "Ohje!", "Expected Sprite Blume to say Ohje!");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(4).sayText, "Expected Clone 4 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(5).sayText, "Expected Clone 5 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(6).sayText, "Expected Clone 6 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).size, 20, 1, "Expected Clone 4 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).size, 20, 1, "Expected Clone 5 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).size, 20, 1, "Expected Clone 6 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(4).visible, "Expected Clone 4 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(5).visible, "Expected Clone 5 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(6).visible, "Expected Clone 6 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).volume, 100, "Expected Clone 4 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).volume, 100, "Expected Clone 5 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).volume, 100, "Expected Clone 6 of Kaktus to have volume 100");
  await t.runForSteps(5);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).currentCostume, 0, "Expected Clone 4 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).currentCostume, 0, "Expected Clone 5 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).currentCostume, 0, "Expected Clone 6 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 6, "Expected Sprite Kaktus to have 6 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).direction, 90, 1, "Expected Clone 4 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).direction, 90, 1, "Expected Clone 5 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).direction, 90, 1, "Expected Clone 6 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 25, "Expected effect color of Sprite Gärtnerin to be 25");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 8, "Expected Sprite Gärtnerin to be at layer 8");
  t.assert.equal(t.getSprite("Blume").layerOrder, 9, "Expected Sprite Blume to be at layer 9");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 7, "Expected Sprite Kaktus to be at layer 7");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).getLayerOrder(), 4, "Expected Clone 4 of Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).getLayerOrder(), 5, "Expected Clone 5 of Kaktus to be at layer 5");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).getLayerOrder(), 6, "Expected Clone 6 of Kaktus to be at layer 6");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 179, 5, "Expected Sprite Gärtnerin to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, -7, 5, "Expected Sprite Gärtnerin to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 206.31685253415338, 5, "Expected Sprite Blume to have x-position 206.31685253415338 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 48.31188223780117, 5, "Expected Sprite Blume to have y-position 48.31188223780117 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 112.4, 5, "Expected Sprite Kaktus to have x-position 112.4 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 53.3, 5, "Expected Sprite Kaktus to have y-position 53.3 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 171.8, 5, "Expected Clone 2 of Kaktus to have x-position 171.8 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -73.6, 5, "Expected Clone 2 of Kaktus to have y-position -73.6 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, -22.599999999999998, 5, "Expected Clone 3 of Kaktus to have x-position -22.599999999999998 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -114.1, 5, "Expected Clone 3 of Kaktus to have y-position -114.1 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).x, -101.8, 5, "Expected Clone 4 of Kaktus to have x-position -101.8 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).y, -22.3, 5, "Expected Clone 4 of Kaktus to have y-position -22.3 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).x, -14.5, 5, "Expected Clone 5 of Kaktus to have x-position -14.5 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).y, 10.1, 5, "Expected Clone 5 of Kaktus to have y-position 10.1 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).x, 125, 5, "Expected Clone 6 of Kaktus to have x-position 125 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).y, 72.2, 5, "Expected Clone 6 of Kaktus to have y-position 72.2 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Autsch!", "Expected Sprite Gärtnerin to say Autsch!");
  t.assert.equal(t.getSprite("Blume").sayText, "Ohje!", "Expected Sprite Blume to say Ohje!");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(4).sayText, "Expected Clone 4 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(5).sayText, "Expected Clone 5 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(6).sayText, "Expected Clone 6 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).size, 20, 1, "Expected Clone 4 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).size, 20, 1, "Expected Clone 5 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).size, 20, 1, "Expected Clone 6 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(4).visible, "Expected Clone 4 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(5).visible, "Expected Clone 5 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(6).visible, "Expected Clone 6 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).volume, 100, "Expected Clone 4 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).volume, 100, "Expected Clone 5 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).volume, 100, "Expected Clone 6 of Kaktus to have volume 100");
  await t.runForSteps(39);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).currentCostume, 0, "Expected Clone 4 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).currentCostume, 0, "Expected Clone 5 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).currentCostume, 0, "Expected Clone 6 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 6, "Expected Sprite Kaktus to have 6 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).direction, 90, 1, "Expected Clone 4 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).direction, 90, 1, "Expected Clone 5 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).direction, 90, 1, "Expected Clone 6 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 75, "Expected effect color of Sprite Gärtnerin to be 75");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 8, "Expected Sprite Gärtnerin to be at layer 8");
  t.assert.equal(t.getSprite("Blume").layerOrder, 9, "Expected Sprite Blume to be at layer 9");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 7, "Expected Sprite Kaktus to be at layer 7");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).getLayerOrder(), 4, "Expected Clone 4 of Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).getLayerOrder(), 5, "Expected Clone 5 of Kaktus to be at layer 5");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).getLayerOrder(), 6, "Expected Clone 6 of Kaktus to be at layer 6");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 179, 5, "Expected Sprite Gärtnerin to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, -7, 5, "Expected Sprite Gärtnerin to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 206.31685253415338, 5, "Expected Sprite Blume to have x-position 206.31685253415338 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 48.31188223780117, 5, "Expected Sprite Blume to have y-position 48.31188223780117 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 161.73333333333335, 5, "Expected Sprite Kaktus to have x-position 161.73333333333335 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 8.633333333333333, 5, "Expected Sprite Kaktus to have y-position 8.633333333333333 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 177.13333333333333, 5, "Expected Clone 2 of Kaktus to have x-position 177.13333333333333 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -24.266666666666666, 5, "Expected Clone 2 of Kaktus to have y-position -24.266666666666666 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, 126.73333333333335, 5, "Expected Clone 3 of Kaktus to have x-position 126.73333333333335 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -34.766666666666666, 5, "Expected Clone 3 of Kaktus to have y-position -34.766666666666666 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).x, 106.20000000000002, 5, "Expected Clone 4 of Kaktus to have x-position 106.20000000000002 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).y, -10.966666666666665, 5, "Expected Clone 4 of Kaktus to have y-position -10.966666666666665 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).x, 128.83333333333334, 5, "Expected Clone 5 of Kaktus to have x-position 128.83333333333334 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).y, -2.566666666666668, 5, "Expected Clone 5 of Kaktus to have y-position -2.566666666666668 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).x, 165, 5, "Expected Clone 6 of Kaktus to have x-position 165 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).y, 13.533333333333331, 5, "Expected Clone 6 of Kaktus to have y-position 13.533333333333331 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Autsch!", "Expected Sprite Gärtnerin to say Autsch!");
  t.assert.equal(t.getSprite("Blume").sayText, "Ohje!", "Expected Sprite Blume to say Ohje!");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(4).sayText, "Expected Clone 4 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(5).sayText, "Expected Clone 5 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(6).sayText, "Expected Clone 6 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).size, 20, 1, "Expected Clone 4 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).size, 20, 1, "Expected Clone 5 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).size, 20, 1, "Expected Clone 6 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(4).visible, "Expected Clone 4 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(5).visible, "Expected Clone 5 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(6).visible, "Expected Clone 6 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).volume, 100, "Expected Clone 4 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).volume, 100, "Expected Clone 5 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).volume, 100, "Expected Clone 6 of Kaktus to have volume 100");
  await t.runForSteps(35);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).currentCostume, 0, "Expected Clone 4 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).currentCostume, 0, "Expected Clone 5 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).currentCostume, 0, "Expected Clone 6 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 6, "Expected Sprite Kaktus to have 6 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).direction, 90, 1, "Expected Clone 4 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).direction, 90, 1, "Expected Clone 5 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).direction, 90, 1, "Expected Clone 6 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 150, "Expected effect color of Sprite Gärtnerin to be 150");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 8, "Expected Sprite Gärtnerin to be at layer 8");
  t.assert.equal(t.getSprite("Blume").layerOrder, 9, "Expected Sprite Blume to be at layer 9");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 7, "Expected Sprite Kaktus to be at layer 7");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).getLayerOrder(), 4, "Expected Clone 4 of Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).getLayerOrder(), 5, "Expected Clone 5 of Kaktus to be at layer 5");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).getLayerOrder(), 6, "Expected Clone 6 of Kaktus to be at layer 6");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 179, 5, "Expected Sprite Gärtnerin to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, -7, 5, "Expected Sprite Gärtnerin to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 206.31685253415338, 5, "Expected Sprite Blume to have x-position 206.31685253415338 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 48.31188223780117, 5, "Expected Sprite Blume to have y-position 48.31188223780117 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 179, 5, "Expected Sprite Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, -7, 5, "Expected Sprite Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 179, 5, "Expected Clone 2 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -7, 5, "Expected Clone 2 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, 179, 5, "Expected Clone 3 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -7, 5, "Expected Clone 3 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).x, 179, 5, "Expected Clone 4 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).y, -7, 5, "Expected Clone 4 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).x, 179, 5, "Expected Clone 5 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).y, -7, 5, "Expected Clone 5 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).x, 179, 5, "Expected Clone 6 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).y, -7, 5, "Expected Clone 6 of Kaktus to have y-position -7 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Autsch!", "Expected Sprite Gärtnerin to say Autsch!");
  t.assert.equal(t.getSprite("Blume").sayText, "Ohje!", "Expected Sprite Blume to say Ohje!");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(4).sayText, "Expected Clone 4 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(5).sayText, "Expected Clone 5 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(6).sayText, "Expected Clone 6 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).size, 20, 1, "Expected Clone 4 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).size, 20, 1, "Expected Clone 5 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).size, 20, 1, "Expected Clone 6 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(4).visible, "Expected Clone 4 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(5).visible, "Expected Clone 5 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(6).visible, "Expected Clone 6 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).volume, 100, "Expected Clone 4 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).volume, 100, "Expected Clone 5 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).volume, 100, "Expected Clone 6 of Kaktus to have volume 100");
  await t.runForSteps(70);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).currentCostume, 0, "Expected Clone 4 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).currentCostume, 0, "Expected Clone 5 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).currentCostume, 0, "Expected Clone 6 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 6, "Expected Sprite Kaktus to have 6 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).direction, 90, 1, "Expected Clone 4 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).direction, 90, 1, "Expected Clone 5 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).direction, 90, 1, "Expected Clone 6 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 250, "Expected effect color of Sprite Gärtnerin to be 250");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 8, "Expected Sprite Gärtnerin to be at layer 8");
  t.assert.equal(t.getSprite("Blume").layerOrder, 9, "Expected Sprite Blume to be at layer 9");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 7, "Expected Sprite Kaktus to be at layer 7");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).getLayerOrder(), 4, "Expected Clone 4 of Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).getLayerOrder(), 5, "Expected Clone 5 of Kaktus to be at layer 5");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).getLayerOrder(), 6, "Expected Clone 6 of Kaktus to be at layer 6");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 179, 5, "Expected Sprite Gärtnerin to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, -7, 5, "Expected Sprite Gärtnerin to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 206.31685253415338, 5, "Expected Sprite Blume to have x-position 206.31685253415338 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 48.31188223780117, 5, "Expected Sprite Blume to have y-position 48.31188223780117 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 179, 5, "Expected Sprite Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, -7, 5, "Expected Sprite Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 179, 5, "Expected Clone 2 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -7, 5, "Expected Clone 2 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, 179, 5, "Expected Clone 3 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -7, 5, "Expected Clone 3 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).x, 179, 5, "Expected Clone 4 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).y, -7, 5, "Expected Clone 4 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).x, 179, 5, "Expected Clone 5 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).y, -7, 5, "Expected Clone 5 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).x, 179, 5, "Expected Clone 6 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).y, -7, 5, "Expected Clone 6 of Kaktus to have y-position -7 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Autsch!", "Expected Sprite Gärtnerin to say Autsch!");
  t.assert.equal(t.getSprite("Blume").sayText, "Ohje!", "Expected Sprite Blume to say Ohje!");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(4).sayText, "Expected Clone 4 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(5).sayText, "Expected Clone 5 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(6).sayText, "Expected Clone 6 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).size, 20, 1, "Expected Clone 4 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).size, 20, 1, "Expected Clone 5 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).size, 20, 1, "Expected Clone 6 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(4).visible, "Expected Clone 4 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(5).visible, "Expected Clone 5 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(6).visible, "Expected Clone 6 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).volume, 100, "Expected Clone 4 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).volume, 100, "Expected Clone 5 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).volume, 100, "Expected Clone 6 of Kaktus to have volume 100");
  await t.runForSteps(43);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).currentCostume, 0, "Expected Clone 2 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).currentCostume, 0, "Expected Clone 3 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).currentCostume, 0, "Expected Clone 4 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).currentCostume, 0, "Expected Clone 5 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).currentCostume, 0, "Expected Clone 6 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 6, "Expected Sprite Kaktus to have 6 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).direction, 90, 1, "Expected Clone 2 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).direction, 90, 1, "Expected Clone 3 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).direction, 90, 1, "Expected Clone 4 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).direction, 90, 1, "Expected Clone 5 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).direction, 90, 1, "Expected Clone 6 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 250, "Expected effect color of Sprite Gärtnerin to be 250");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.color, 0, "Expected effect color of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.fisheye, 0, "Expected effect fisheye of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.whirl, 0, "Expected effect whirl of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.pixelate, 0, "Expected effect pixelate of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.mosaic, 0, "Expected effect mosaic of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.brightness, 0, "Expected effect brightness of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).effects.ghost, 0, "Expected effect ghost of Clone 2 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.color, 0, "Expected effect color of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.fisheye, 0, "Expected effect fisheye of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.whirl, 0, "Expected effect whirl of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.pixelate, 0, "Expected effect pixelate of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.mosaic, 0, "Expected effect mosaic of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.brightness, 0, "Expected effect brightness of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).effects.ghost, 0, "Expected effect ghost of Clone 3 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.color, 0, "Expected effect color of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.fisheye, 0, "Expected effect fisheye of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.whirl, 0, "Expected effect whirl of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.pixelate, 0, "Expected effect pixelate of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.mosaic, 0, "Expected effect mosaic of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.brightness, 0, "Expected effect brightness of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).effects.ghost, 0, "Expected effect ghost of Clone 5 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.color, 0, "Expected effect color of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.fisheye, 0, "Expected effect fisheye of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.whirl, 0, "Expected effect whirl of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.pixelate, 0, "Expected effect pixelate of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.mosaic, 0, "Expected effect mosaic of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.brightness, 0, "Expected effect brightness of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).effects.ghost, 0, "Expected effect ghost of Clone 6 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 8, "Expected Sprite Gärtnerin to be at layer 8");
  t.assert.equal(t.getSprite("Blume").layerOrder, 9, "Expected Sprite Blume to be at layer 9");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 7, "Expected Sprite Kaktus to be at layer 7");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).getLayerOrder(), 2, "Expected Clone 2 of Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).getLayerOrder(), 3, "Expected Clone 3 of Kaktus to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).getLayerOrder(), 4, "Expected Clone 4 of Kaktus to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).getLayerOrder(), 5, "Expected Clone 5 of Kaktus to be at layer 5");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).getLayerOrder(), 6, "Expected Clone 6 of Kaktus to be at layer 6");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 179, 5, "Expected Sprite Gärtnerin to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, -7, 5, "Expected Sprite Gärtnerin to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 206.31685253415338, 5, "Expected Sprite Blume to have x-position 206.31685253415338 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 48.31188223780117, 5, "Expected Sprite Blume to have y-position 48.31188223780117 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 179, 5, "Expected Sprite Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, -7, 5, "Expected Sprite Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 179, 5, "Expected Clone 1 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -7, 5, "Expected Clone 1 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).x, 179, 5, "Expected Clone 2 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).y, -7, 5, "Expected Clone 2 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).x, 179, 5, "Expected Clone 3 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).y, -7, 5, "Expected Clone 3 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).x, 179, 5, "Expected Clone 4 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).y, -7, 5, "Expected Clone 4 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).x, 179, 5, "Expected Clone 5 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).y, -7, 5, "Expected Clone 5 of Kaktus to have y-position -7 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).x, 179, 5, "Expected Clone 6 of Kaktus to have x-position 179 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).y, -7, 5, "Expected Clone 6 of Kaktus to have y-position -7 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Autsch!", "Expected Sprite Gärtnerin to say Autsch!");
  t.assert.equal(t.getSprite("Blume").sayText, "Ohje!", "Expected Sprite Blume to say Ohje!");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(2).sayText, "Expected Clone 2 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(3).sayText, "Expected Clone 3 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(4).sayText, "Expected Clone 4 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(5).sayText, "Expected Clone 5 of Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(6).sayText, "Expected Clone 6 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(2).size, 20, 1, "Expected Clone 2 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(3).size, 20, 1, "Expected Clone 3 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(4).size, 20, 1, "Expected Clone 4 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(5).size, 20, 1, "Expected Clone 5 of Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(6).size, 20, 1, "Expected Clone 6 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(2).visible, "Expected Clone 2 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(3).visible, "Expected Clone 3 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(4).visible, "Expected Clone 4 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(5).visible, "Expected Clone 5 of Kaktus to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(6).visible, "Expected Clone 6 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(2).volume, 100, "Expected Clone 2 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(3).volume, 100, "Expected Clone 3 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(4).volume, 100, "Expected Clone 4 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(5).volume, 100, "Expected Clone 5 of Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(6).volume, 100, "Expected Clone 6 of Kaktus to have volume 100");
  t.end();
}

module.exports = [
  {
      test: test0,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687849344147',
      type: 'standard',
  }
]
