const test0 = async function (t) {
  t.keyPress('up arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 30, 1, "Expected Sprite Ball to face in direction 30 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -80, 5, "Expected Sprite Ball to have x-position -80 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 34.64101615137754, 5, "Expected Sprite Ball to have y-position 34.64101615137754 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -44, 5, "Expected Sprite Spieler to have y-position -44 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 13.600000000000001, 5, "Expected Sprite Computer to have y-position 13.600000000000001 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.keyPress('down arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 30, 1, "Expected Sprite Ball to face in direction 30 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -70, 5, "Expected Sprite Ball to have x-position -70 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 51.961524227066306, 5, "Expected Sprite Ball to have y-position 51.961524227066306 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -59, 5, "Expected Sprite Spieler to have y-position -59 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 22.666666666666664, 5, "Expected Sprite Computer to have y-position 22.666666666666664 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.dragSprite('Aus-Linie Computer', -68.92143617283399, 180, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 30, 1, "Expected Sprite Ball to face in direction 30 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -65, 5, "Expected Sprite Ball to have x-position -65 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 60.62177826491069, 5, "Expected Sprite Ball to have y-position 60.62177826491069 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -59, 5, "Expected Sprite Spieler to have y-position -59 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 27.200000000000003, 5, "Expected Sprite Computer to have y-position 27.200000000000003 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.dragSprite('Ball', -210, -59, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -30, 1, "Expected Sprite Ball to face in direction -30 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -211.57260131835938, 5, "Expected Sprite Ball to have x-position -211.57260131835938 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -33.01923788646684, 5, "Expected Sprite Ball to have y-position -33.01923788646684 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -59, 5, "Expected Sprite Spieler to have y-position -59 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 31.733333333333334, 5, "Expected Sprite Computer to have y-position 31.733333333333334 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(10);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 29.999999999999993, 1, "Expected Sprite Ball to face in direction 29.999999999999993 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -201.2904052734375, 5, "Expected Sprite Ball to have x-position -201.2904052734375 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 27.602540378443877, 5, "Expected Sprite Ball to have y-position 27.602540378443877 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -59, 5, "Expected Sprite Spieler to have y-position -59 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 45.33333333333333, 5, "Expected Sprite Computer to have y-position 45.33333333333333 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(87);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 29.999999999999993, 1, "Expected Sprite Ball to face in direction 29.999999999999993 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -201.2904052734375, 5, "Expected Sprite Ball to have x-position -201.2904052734375 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 27.602540378443877, 5, "Expected Sprite Ball to have y-position 27.602540378443877 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -59, 5, "Expected Sprite Spieler to have y-position -59 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 45.33333333333333, 5, "Expected Sprite Computer to have y-position 45.33333333333333 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(32);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 29.999999999999993, 1, "Expected Sprite Ball to face in direction 29.999999999999993 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -201.2904052734375, 5, "Expected Sprite Ball to have x-position -201.2904052734375 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 27.602540378443877, 5, "Expected Sprite Ball to have y-position 27.602540378443877 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -59, 5, "Expected Sprite Spieler to have y-position -59 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 45.33333333333333, 5, "Expected Sprite Computer to have y-position 45.33333333333333 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 29.999999999999993, 1, "Expected Sprite Ball to face in direction 29.999999999999993 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -201.2904052734375, 5, "Expected Sprite Ball to have x-position -201.2904052734375 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 27.602540378443877, 5, "Expected Sprite Ball to have y-position 27.602540378443877 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -59, 5, "Expected Sprite Spieler to have y-position -59 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 45.33333333333333, 5, "Expected Sprite Computer to have y-position 45.33333333333333 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, -26, 5, "Expected Sprite Aus-Linie Computer to have x-position -26 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, 180, 5, "Expected Sprite Aus-Linie Computer to have y-position 180 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.end();
}
const test1 = async function (t) {
  t.dragSprite('Aus-Linie Computer', -57.905660709030755, -180, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 30, 1, "Expected Sprite Ball to face in direction 30 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -95, 5, "Expected Sprite Ball to have x-position -95 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 8.660254037844386, 5, "Expected Sprite Ball to have y-position 8.660254037844386 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 0, 5, "Expected Sprite Computer to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(44);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 150, 1, "Expected Sprite Ball to face in direction 150 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 130.00000000000003, 5, "Expected Sprite Ball to have x-position 130.00000000000003 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -103.9230484541326, 5, "Expected Sprite Ball to have y-position -103.9230484541326 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, 0, 5, "Expected Sprite Computer to have y-position 0 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.dragSprite('Ball', 179.87420784718537, 61.25886429001922, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -150, 1, "Expected Sprite Ball to face in direction -150 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 174.87420784718537, 5, "Expected Sprite Ball to have x-position 174.87420784718537 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 35.278102176486065, 5, "Expected Sprite Ball to have y-position 35.278102176486065 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -9.066666666666663, 5, "Expected Sprite Computer to have y-position -9.066666666666663 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.clickSprite('Reset-Button', 1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 150, 1, "Expected Sprite Ball to face in direction 150 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, 179.87420784718537, 5, "Expected Sprite Ball to have x-position 179.87420784718537 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, 9.297340062952909, 5, "Expected Sprite Ball to have y-position 9.297340062952909 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -18.133333333333326, 5, "Expected Sprite Computer to have y-position -18.133333333333326 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.dragSprite('Ball', -192.7390215626872, -24.228719585453817, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, -150, 1, "Expected Sprite Ball to face in direction -150 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -197.7390215626872, 5, "Expected Sprite Ball to have x-position -197.7390215626872 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -50.20948169898697, 5, "Expected Sprite Ball to have y-position -50.20948169898697 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -27.19999999999999, 5, "Expected Sprite Computer to have y-position -27.19999999999999 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  await t.runForSteps(43);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Ball").currentCostume, 5, "Expected Sprite Ball to have costume 5");
  t.assert.equal(t.getSprite("Spieler").currentCostume, 0, "Expected Sprite Spieler to have costume 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").currentCostume, 0, "Expected Sprite Aus-Linie Spieler to have costume 0");
  t.assert.equal(t.getSprite("Computer").currentCostume, 1, "Expected Sprite Computer to have costume 1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").currentCostume, 0, "Expected Sprite Aus-Linie Computer to have costume 0");
  t.assert.equal(t.getSprite("Reset-Button").currentCostume, 0, "Expected Sprite Reset-Button to have costume 0");
  t.assert.equal(t.getSprite("Ball").getCloneCount(), 0, "Expected Sprite Ball to have 0 clones");
  t.assert.equal(t.getSprite("Spieler").getCloneCount(), 0, "Expected Sprite Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").getCloneCount(), 0, "Expected Sprite Aus-Linie Spieler to have 0 clones");
  t.assert.equal(t.getSprite("Computer").getCloneCount(), 0, "Expected Sprite Computer to have 0 clones");
  t.assert.equal(t.getSprite("Aus-Linie Computer").getCloneCount(), 0, "Expected Sprite Aus-Linie Computer to have 0 clones");
  t.assert.equal(t.getSprite("Reset-Button").getCloneCount(), 0, "Expected Sprite Reset-Button to have 0 clones");
  t.assert.equal(t.getSprite("Ball").direction, 150, 1, "Expected Sprite Ball to face in direction 150 +-1");
  t.assert.equal(t.getSprite("Spieler").direction, 180, 1, "Expected Sprite Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").direction, 180, 1, "Expected Sprite Aus-Linie Spieler to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Computer").direction, 180, 1, "Expected Sprite Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Aus-Linie Computer").direction, 180, 1, "Expected Sprite Aus-Linie Computer to face in direction 180 +-1");
  t.assert.equal(t.getSprite("Reset-Button").direction, 90, 1, "Expected Sprite Reset-Button to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Ball").effects.color, 0, "Expected effect color of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.fisheye, 0, "Expected effect fisheye of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.whirl, 0, "Expected effect whirl of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.pixelate, 0, "Expected effect pixelate of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.mosaic, 0, "Expected effect mosaic of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.brightness, 0, "Expected effect brightness of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Ball").effects.ghost, 0, "Expected effect ghost of Sprite Ball to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.color, 0, "Expected effect color of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.color, 0, "Expected effect color of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Spieler to be 0");
  t.assert.equal(t.getSprite("Computer").effects.color, 0, "Expected effect color of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.whirl, 0, "Expected effect whirl of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.brightness, 0, "Expected effect brightness of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Computer").effects.ghost, 0, "Expected effect ghost of Sprite Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.color, 0, "Expected effect color of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.fisheye, 0, "Expected effect fisheye of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.whirl, 0, "Expected effect whirl of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.pixelate, 0, "Expected effect pixelate of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.mosaic, 0, "Expected effect mosaic of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.brightness, 0, "Expected effect brightness of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Aus-Linie Computer").effects.ghost, 0, "Expected effect ghost of Sprite Aus-Linie Computer to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.color, 0, "Expected effect color of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.fisheye, 0, "Expected effect fisheye of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.whirl, 0, "Expected effect whirl of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.pixelate, 0, "Expected effect pixelate of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.mosaic, 0, "Expected effect mosaic of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.brightness, 0, "Expected effect brightness of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Reset-Button").effects.ghost, 0, "Expected effect ghost of Sprite Reset-Button to be 0");
  t.assert.equal(t.getSprite("Ball").layerOrder, 5, "Expected Sprite Ball to be at layer 5");
  t.assert.equal(t.getSprite("Spieler").layerOrder, 3, "Expected Sprite Spieler to be at layer 3");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").layerOrder, 2, "Expected Sprite Aus-Linie Spieler to be at layer 2");
  t.assert.equal(t.getSprite("Computer").layerOrder, 4, "Expected Sprite Computer to be at layer 4");
  t.assert.equal(t.getSprite("Aus-Linie Computer").layerOrder, 1, "Expected Sprite Aus-Linie Computer to be at layer 1");
  t.assert.equal(t.getSprite("Reset-Button").layerOrder, 6, "Expected Sprite Reset-Button to be at layer 6");
  t.assert.withinRange(t.getSprite("Ball").x, -192.7390215626872, 5, "Expected Sprite Ball to have x-position -192.7390215626872 +-5");
  t.assert.withinRange(t.getSprite("Ball").y, -76.19024381252012, 5, "Expected Sprite Ball to have y-position -76.19024381252012 +-5");
  t.assert.withinRange(t.getSprite("Spieler").x, -210, 5, "Expected Sprite Spieler to have x-position -210 +-5");
  t.assert.withinRange(t.getSprite("Spieler").y, -89, 5, "Expected Sprite Spieler to have y-position -89 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").x, -30, 5, "Expected Sprite Aus-Linie Spieler to have x-position -30 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").y, 25, 5, "Expected Sprite Aus-Linie Spieler to have y-position 25 +-5");
  t.assert.withinRange(t.getSprite("Computer").x, 207, 5, "Expected Sprite Computer to have x-position 207 +-5");
  t.assert.withinRange(t.getSprite("Computer").y, -36.26666666666665, 5, "Expected Sprite Computer to have y-position -36.26666666666665 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").x, 420, 5, "Expected Sprite Aus-Linie Computer to have x-position 420 +-5");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").y, -10, 5, "Expected Sprite Aus-Linie Computer to have y-position -10 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").x, 0, 5, "Expected Sprite Reset-Button to have x-position 0 +-5");
  t.assert.withinRange(t.getSprite("Reset-Button").y, 140, 5, "Expected Sprite Reset-Button to have y-position 140 +-5");
  t.assert.not(t.getSprite("Ball").sayText, "Expected Sprite Ball not to say anything");
  t.assert.not(t.getSprite("Spieler").sayText, "Expected Sprite Spieler not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Spieler").sayText, "Expected Sprite Aus-Linie Spieler not to say anything");
  t.assert.not(t.getSprite("Computer").sayText, "Expected Sprite Computer not to say anything");
  t.assert.not(t.getSprite("Aus-Linie Computer").sayText, "Expected Sprite Aus-Linie Computer not to say anything");
  t.assert.not(t.getSprite("Reset-Button").sayText, "Expected Sprite Reset-Button not to say anything");
  t.assert.withinRange(t.getSprite("Ball").size, 60, 1, "Expected Sprite Ball to have size 60 +-1");
  t.assert.withinRange(t.getSprite("Spieler").size, 75, 1, "Expected Sprite Spieler to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Spieler").size, 100, 1, "Expected Sprite Aus-Linie Spieler to have size 100 +-1");
  t.assert.withinRange(t.getSprite("Computer").size, 75, 1, "Expected Sprite Computer to have size 75 +-1");
  t.assert.withinRange(t.getSprite("Aus-Linie Computer").size, 120, 1, "Expected Sprite Aus-Linie Computer to have size 120 +-1");
  t.assert.withinRange(t.getSprite("Reset-Button").size, 100, 1, "Expected Sprite Reset-Button to have size 100 +-1");
  t.assert.ok(t.getSprite("Ball").visible, "Expected Sprite Ball to be visible");
  t.assert.ok(t.getSprite("Spieler").visible, "Expected Sprite Spieler to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Spieler").visible, "Expected Sprite Aus-Linie Spieler to be visible");
  t.assert.ok(t.getSprite("Computer").visible, "Expected Sprite Computer to be visible");
  t.assert.ok(t.getSprite("Aus-Linie Computer").visible, "Expected Sprite Aus-Linie Computer to be visible");
  t.assert.ok(t.getSprite("Reset-Button").visible, "Expected Sprite Reset-Button to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Ball").volume, 100, "Expected Sprite Ball to have volume 100");
  t.assert.equal(t.getSprite("Spieler").volume, 100, "Expected Sprite Spieler to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Spieler").volume, 100, "Expected Sprite Aus-Linie Spieler to have volume 100");
  t.assert.equal(t.getSprite("Computer").volume, 100, "Expected Sprite Computer to have volume 100");
  t.assert.equal(t.getSprite("Aus-Linie Computer").volume, 100, "Expected Sprite Aus-Linie Computer to have volume 100");
  t.assert.equal(t.getSprite("Reset-Button").volume, 100, "Expected Sprite Reset-Button to have volume 100");
  t.end();
}

module.exports = [
  {
      test: test0,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687849345485',
      type: 'standard',
  },
  {
      test: test1,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687849345485',
      type: 'standard',
  }
]
