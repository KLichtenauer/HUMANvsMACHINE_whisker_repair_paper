const test0 = async function (t) {
  t.keyPress('right arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.keyPress('left arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  await t.runForSteps(54);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 1, "Expected Sprite Kaktus to have 1 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 3, "Expected Sprite Gärtnerin to be at layer 3");
  t.assert.equal(t.getSprite("Blume").layerOrder, 4, "Expected Sprite Blume to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 2, "Expected Sprite Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 237, 5, "Expected Clone 1 of Kaktus to have x-position 237 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -46, 5, "Expected Clone 1 of Kaktus to have y-position -46 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.end();
}
const test1 = async function (t) {
  t.keyPress('right arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.keyPress('left arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.keyPress('down arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.keyPress('down arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.keyPress('right arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.keyPress('up arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.keyPress('right arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.keyPress('up arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.keyPress('down arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.keyPress('down arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.keyPress('up arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.keyPress('up arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.dragSprite('Gärtnerin', 102.85137365745132, -138.85658038754704, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 102.85137365745132, 5, "Expected Sprite Gärtnerin to have x-position 102.85137365745132 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, -138.85658038754704, 5, "Expected Sprite Gärtnerin to have y-position -138.85658038754704 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.keyPress('down arrow', 2);
  await t.runForSteps(2);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 102.85137365745132, 5, "Expected Sprite Gärtnerin to have x-position 102.85137365745132 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, -138.85658038754704, 5, "Expected Sprite Gärtnerin to have y-position -138.85658038754704 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.keyPress('left arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 1, "Expected Sprite Kaktus to have 1 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 3, "Expected Sprite Gärtnerin to be at layer 3");
  t.assert.equal(t.getSprite("Blume").layerOrder, 4, "Expected Sprite Blume to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 2, "Expected Sprite Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 102.85137365745132, 5, "Expected Sprite Gärtnerin to have x-position 102.85137365745132 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, -138.85658038754704, 5, "Expected Sprite Gärtnerin to have y-position -138.85658038754704 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, -8, 5, "Expected Sprite Blume to have x-position -8 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, 14, 5, "Expected Sprite Blume to have y-position 14 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 47, 5, "Expected Clone 1 of Kaktus to have x-position 47 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -76, 5, "Expected Clone 1 of Kaktus to have y-position -76 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.not(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.end();
}
const test2 = async function (t) {
  t.keyPress('right arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  await t.runForSteps(78);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 1, "Expected Sprite Kaktus to have 1 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 3, "Expected Sprite Gärtnerin to be at layer 3");
  t.assert.equal(t.getSprite("Blume").layerOrder, 4, "Expected Sprite Blume to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 2, "Expected Sprite Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 237, 5, "Expected Clone 1 of Kaktus to have x-position 237 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -46, 5, "Expected Clone 1 of Kaktus to have y-position -46 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.dragSprite('Gärtnerin', 237, -46, null);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 1, "Expected backdrop 1");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 1, "Expected Sprite Kaktus to have 1 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 25, "Expected effect color of Sprite Gärtnerin to be 25");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 3, "Expected Sprite Gärtnerin to be at layer 3");
  t.assert.equal(t.getSprite("Blume").layerOrder, 4, "Expected Sprite Blume to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 2, "Expected Sprite Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, 237, 5, "Expected Sprite Gärtnerin to have x-position 237 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, -46, 5, "Expected Sprite Gärtnerin to have y-position -46 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 237, 5, "Expected Clone 1 of Kaktus to have x-position 237 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -46, 5, "Expected Clone 1 of Kaktus to have y-position -46 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Autsch!", "Expected Sprite Gärtnerin to say Autsch!");
  t.assert.equal(t.getSprite("Blume").sayText, "Ohje!", "Expected Sprite Blume to say Ohje!");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.end();
}
const test3 = async function (t) {
  t.keyPress('right arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  await t.runForSteps(78);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 1, "Expected Sprite Kaktus to have 1 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 3, "Expected Sprite Gärtnerin to be at layer 3");
  t.assert.equal(t.getSprite("Blume").layerOrder, 4, "Expected Sprite Blume to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 2, "Expected Sprite Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 237, 5, "Expected Clone 1 of Kaktus to have x-position 237 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -46, 5, "Expected Clone 1 of Kaktus to have y-position -46 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.keyPress('left arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 1, "Expected Sprite Kaktus to have 1 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 3, "Expected Sprite Gärtnerin to be at layer 3");
  t.assert.equal(t.getSprite("Blume").layerOrder, 4, "Expected Sprite Blume to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 2, "Expected Sprite Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -175, 5, "Expected Sprite Gärtnerin to have x-position -175 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 237, 5, "Expected Clone 1 of Kaktus to have x-position 237 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -46, 5, "Expected Clone 1 of Kaktus to have y-position -46 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.end();
}
const test4 = async function (t) {
  t.keyPress('right arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  await t.runForSteps(78);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 1, "Expected Sprite Kaktus to have 1 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 3, "Expected Sprite Gärtnerin to be at layer 3");
  t.assert.equal(t.getSprite("Blume").layerOrder, 4, "Expected Sprite Blume to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 2, "Expected Sprite Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 237, 5, "Expected Clone 1 of Kaktus to have x-position 237 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -46, 5, "Expected Clone 1 of Kaktus to have y-position -46 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.keyPress('right arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 1, "Expected Sprite Kaktus to have 1 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 3, "Expected Sprite Gärtnerin to be at layer 3");
  t.assert.equal(t.getSprite("Blume").layerOrder, 4, "Expected Sprite Blume to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 2, "Expected Sprite Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -165, 5, "Expected Sprite Gärtnerin to have x-position -165 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 237, 5, "Expected Clone 1 of Kaktus to have x-position 237 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -46, 5, "Expected Clone 1 of Kaktus to have y-position -46 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.end();
}
const test5 = async function (t) {
  t.keyPress('right arrow', 4);
  await t.runForSteps(4);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  await t.runForSteps(54);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.keyPress('up arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 1, "Expected Sprite Kaktus to have 1 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 3, "Expected Sprite Gärtnerin to be at layer 3");
  t.assert.equal(t.getSprite("Blume").layerOrder, 4, "Expected Sprite Blume to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 2, "Expected Sprite Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 75, 5, "Expected Sprite Gärtnerin to have y-position 75 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 237, 5, "Expected Clone 1 of Kaktus to have x-position 237 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -46, 5, "Expected Clone 1 of Kaktus to have y-position -46 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.end();
}
const test6 = async function (t) {
  t.keyPress('right arrow', 1);
  await t.runForSteps(1);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 0, "Expected Sprite Kaktus to have 0 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 95, 1, "Expected Sprite Blume to face in direction 95 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 2, "Expected Sprite Gärtnerin to be at layer 2");
  t.assert.equal(t.getSprite("Blume").layerOrder, 3, "Expected Sprite Blume to be at layer 3");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 1, "Expected Sprite Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.equal(t.getSprite("Gärtnerin").sayText, "Gleich geht's los!", "Expected Sprite Gärtnerin to say Gleich geht's los!");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 35, 1, "Expected Sprite Gärtnerin to have size 35 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  await t.runForSteps(78);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 1, "Expected Sprite Kaktus to have 1 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 3, "Expected Sprite Gärtnerin to be at layer 3");
  t.assert.equal(t.getSprite("Blume").layerOrder, 4, "Expected Sprite Blume to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 2, "Expected Sprite Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 60, 5, "Expected Sprite Gärtnerin to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 237, 5, "Expected Clone 1 of Kaktus to have x-position 237 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -46, 5, "Expected Clone 1 of Kaktus to have y-position -46 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.keyPress('down arrow', 3);
  await t.runForSteps(3);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Gärtnerin").currentCostume, 0, "Expected Sprite Gärtnerin to have costume 0");
  t.assert.equal(t.getSprite("Blume").currentCostume, 0, "Expected Sprite Blume to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").currentCostume, 0, "Expected Sprite Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).currentCostume, 0, "Expected Clone 1 of Kaktus to have costume 0");
  t.assert.equal(t.getSprite("Gärtnerin").getCloneCount(), 0, "Expected Sprite Gärtnerin to have 0 clones");
  t.assert.equal(t.getSprite("Blume").getCloneCount(), 0, "Expected Sprite Blume to have 0 clones");
  t.assert.equal(t.getSprite("Kaktus").getCloneCount(), 1, "Expected Sprite Kaktus to have 1 clones");
  t.assert.equal(t.getSprite("Gärtnerin").direction, 90, 1, "Expected Sprite Gärtnerin to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Blume").direction, 90, 1, "Expected Sprite Blume to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").direction, 90, 1, "Expected Sprite Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).direction, 90, 1, "Expected Clone 1 of Kaktus to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Gärtnerin").effects.color, 0, "Expected effect color of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.fisheye, 0, "Expected effect fisheye of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.whirl, 0, "Expected effect whirl of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.pixelate, 0, "Expected effect pixelate of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.mosaic, 0, "Expected effect mosaic of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.brightness, 0, "Expected effect brightness of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").effects.ghost, 0, "Expected effect ghost of Sprite Gärtnerin to be 0");
  t.assert.equal(t.getSprite("Blume").effects.color, 0, "Expected effect color of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.fisheye, 0, "Expected effect fisheye of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.whirl, 0, "Expected effect whirl of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.pixelate, 0, "Expected effect pixelate of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.mosaic, 0, "Expected effect mosaic of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.brightness, 0, "Expected effect brightness of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Blume").effects.ghost, 0, "Expected effect ghost of Sprite Blume to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.color, 0, "Expected effect color of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.fisheye, 0, "Expected effect fisheye of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.whirl, 0, "Expected effect whirl of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.pixelate, 0, "Expected effect pixelate of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.mosaic, 0, "Expected effect mosaic of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.brightness, 0, "Expected effect brightness of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").effects.ghost, 0, "Expected effect ghost of Sprite Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Kaktus to be 0");
  t.assert.equal(t.getSprite("Gärtnerin").layerOrder, 3, "Expected Sprite Gärtnerin to be at layer 3");
  t.assert.equal(t.getSprite("Blume").layerOrder, 4, "Expected Sprite Blume to be at layer 4");
  t.assert.equal(t.getSprite("Kaktus").layerOrder, 2, "Expected Sprite Kaktus to be at layer 2");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).getLayerOrder(), 1, "Expected Clone 1 of Kaktus to be at layer 1");
  t.assert.withinRange(t.getSprite("Gärtnerin").x, -170, 5, "Expected Sprite Gärtnerin to have x-position -170 +-5");
  t.assert.withinRange(t.getSprite("Gärtnerin").y, 45, 5, "Expected Sprite Gärtnerin to have y-position 45 +-5");
  t.assert.withinRange(t.getSprite("Blume").x, 97, 5, "Expected Sprite Blume to have x-position 97 +-5");
  t.assert.withinRange(t.getSprite("Blume").y, -133, 5, "Expected Sprite Blume to have y-position -133 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").x, 105, 5, "Expected Sprite Kaktus to have x-position 105 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").y, 60, 5, "Expected Sprite Kaktus to have y-position 60 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).x, 237, 5, "Expected Clone 1 of Kaktus to have x-position 237 +-5");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).y, -46, 5, "Expected Clone 1 of Kaktus to have y-position -46 +-5");
  t.assert.not(t.getSprite("Gärtnerin").sayText, "Expected Sprite Gärtnerin not to say anything");
  t.assert.not(t.getSprite("Blume").sayText, "Expected Sprite Blume not to say anything");
  t.assert.not(t.getSprite("Kaktus").sayText, "Expected Sprite Kaktus not to say anything");
  t.assert.not(t.getSprite("Kaktus").getClone(1).sayText, "Expected Clone 1 of Kaktus not to say anything");
  t.assert.withinRange(t.getSprite("Gärtnerin").size, 20, 1, "Expected Sprite Gärtnerin to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Blume").size, 30, 1, "Expected Sprite Blume to have size 30 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").size, 20, 1, "Expected Sprite Kaktus to have size 20 +-1");
  t.assert.withinRange(t.getSprite("Kaktus").getClone(1).size, 20, 1, "Expected Clone 1 of Kaktus to have size 20 +-1");
  t.assert.ok(t.getSprite("Gärtnerin").visible, "Expected Sprite Gärtnerin to be visible");
  t.assert.ok(t.getSprite("Blume").visible, "Expected Sprite Blume to be visible");
  t.assert.not(t.getSprite("Kaktus").visible, "Expected Sprite Kaktus not to be visible");
  t.assert.ok(t.getSprite("Kaktus").getClone(1).visible, "Expected Clone 1 of Kaktus to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Gärtnerin").volume, 100, "Expected Sprite Gärtnerin to have volume 100");
  t.assert.equal(t.getSprite("Blume").volume, 100, "Expected Sprite Blume to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").volume, 100, "Expected Sprite Kaktus to have volume 100");
  t.assert.equal(t.getSprite("Kaktus").getClone(1).volume, 100, "Expected Clone 1 of Kaktus to have volume 100");
  t.end();
}

module.exports = [
  {
      test: test0,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687938567981',
      type: 'standard',
  },
  {
      test: test1,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687938567981',
      type: 'standard',
  },
  {
      test: test2,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687938567981',
      type: 'standard',
  },
  {
      test: test3,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687938567981',
      type: 'standard',
  },
  {
      test: test4,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687938567981',
      type: 'standard',
  },
  {
      test: test5,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687938567981',
      type: 'standard',
  },
  {
      test: test6,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687938567981',
      type: 'standard',
  }
]
