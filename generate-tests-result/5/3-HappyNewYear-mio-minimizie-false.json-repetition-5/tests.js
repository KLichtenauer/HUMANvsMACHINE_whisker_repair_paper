const test0 = async function (t) {
  await t.runForSteps(89);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).currentCostume, 0, "Expected Clone 1 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).currentCostume, 2, "Expected Clone 4 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).currentCostume, 1, "Expected Clone 7 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).currentCostume, 0, "Expected Clone 10 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).currentCostume, 2, "Expected Clone 12 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 12, "Expected Sprite Luftballon to have 12 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).direction, 90, 1, "Expected Clone 1 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).direction, 90, 1, "Expected Clone 4 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).direction, 90, 1, "Expected Clone 7 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).direction, 90, 1, "Expected Clone 10 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).direction, 90, 1, "Expected Clone 12 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.color, 0, "Expected effect color of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.fisheye, 0, "Expected effect fisheye of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.whirl, 0, "Expected effect whirl of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.pixelate, 0, "Expected effect pixelate of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.mosaic, 0, "Expected effect mosaic of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.brightness, 0, "Expected effect brightness of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).effects.ghost, 0, "Expected effect ghost of Clone 1 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.color, 0, "Expected effect color of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.fisheye, 0, "Expected effect fisheye of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.whirl, 0, "Expected effect whirl of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.pixelate, 0, "Expected effect pixelate of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.mosaic, 0, "Expected effect mosaic of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.brightness, 0, "Expected effect brightness of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.ghost, 0, "Expected effect ghost of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.color, 0, "Expected effect color of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.fisheye, 0, "Expected effect fisheye of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.whirl, 0, "Expected effect whirl of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.pixelate, 0, "Expected effect pixelate of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.mosaic, 0, "Expected effect mosaic of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.brightness, 0, "Expected effect brightness of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).effects.ghost, 0, "Expected effect ghost of Clone 10 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.color, 0, "Expected effect color of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.fisheye, 0, "Expected effect fisheye of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.whirl, 0, "Expected effect whirl of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.pixelate, 0, "Expected effect pixelate of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.mosaic, 0, "Expected effect mosaic of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.brightness, 0, "Expected effect brightness of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.ghost, 0, "Expected effect ghost of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 15, "Expected Sprite Einhorn to be at layer 15");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 13, "Expected Sprite Luftballon to be at layer 13");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).getLayerOrder(), 9, "Expected Clone 1 of Luftballon to be at layer 9");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).getLayerOrder(), 10, "Expected Clone 4 of Luftballon to be at layer 10");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).getLayerOrder(), 11, "Expected Clone 7 of Luftballon to be at layer 11");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).getLayerOrder(), 12, "Expected Clone 10 of Luftballon to be at layer 12");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).getLayerOrder(), 4, "Expected Clone 12 of Luftballon to be at layer 4");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).x, 45, 5, "Expected Clone 1 of Luftballon to have x-position 45 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).y, 174, 5, "Expected Clone 1 of Luftballon to have y-position 174 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).x, 53, 5, "Expected Clone 4 of Luftballon to have x-position 53 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).y, 54, 5, "Expected Clone 4 of Luftballon to have y-position 54 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).x, 119, 5, "Expected Clone 7 of Luftballon to have x-position 119 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).y, -77, 5, "Expected Clone 7 of Luftballon to have y-position -77 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(10).x, -208, 5, "Expected Clone 10 of Luftballon to have x-position -208 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(10).y, -43, 5, "Expected Clone 10 of Luftballon to have y-position -43 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).x, 177, 5, "Expected Clone 12 of Luftballon to have x-position 177 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).y, 140, 5, "Expected Clone 12 of Luftballon to have y-position 140 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(1).sayText, "Expected Clone 1 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(4).sayText, "Expected Clone 4 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(7).sayText, "Expected Clone 7 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(10).sayText, "Expected Clone 10 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(12).sayText, "Expected Clone 12 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(1).size, 50, 1, "Expected Clone 1 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).size, 50, 1, "Expected Clone 4 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).size, 50, 1, "Expected Clone 7 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(10).size, 50, 1, "Expected Clone 10 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).size, 50, 1, "Expected Clone 12 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.ok(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(1).visible, "Expected Clone 1 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(4).visible, "Expected Clone 4 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(7).visible, "Expected Clone 7 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(10).visible, "Expected Clone 10 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(12).visible, "Expected Clone 12 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(1).volume, 100, "Expected Clone 1 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).volume, 100, "Expected Clone 4 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).volume, 100, "Expected Clone 7 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(10).volume, 100, "Expected Clone 10 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).volume, 100, "Expected Clone 12 of Luftballon to have volume 100");
  await t.runForSteps(30);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).currentCostume, 2, "Expected Clone 4 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).currentCostume, 1, "Expected Clone 8 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).currentCostume, 0, "Expected Clone 12 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).currentCostume, 2, "Expected Clone 16 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).currentCostume, 2, "Expected Clone 17 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 17, "Expected Sprite Luftballon to have 17 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).direction, 90, 1, "Expected Clone 4 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).direction, 90, 1, "Expected Clone 8 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).direction, 90, 1, "Expected Clone 12 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).direction, 90, 1, "Expected Clone 16 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).direction, 90, 1, "Expected Clone 17 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.color, 0, "Expected effect color of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.fisheye, 0, "Expected effect fisheye of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.whirl, 0, "Expected effect whirl of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.pixelate, 0, "Expected effect pixelate of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.mosaic, 0, "Expected effect mosaic of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.brightness, 0, "Expected effect brightness of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).effects.ghost, 0, "Expected effect ghost of Clone 4 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.color, 0, "Expected effect color of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.fisheye, 0, "Expected effect fisheye of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.whirl, 0, "Expected effect whirl of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.pixelate, 0, "Expected effect pixelate of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.mosaic, 0, "Expected effect mosaic of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.brightness, 0, "Expected effect brightness of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).effects.ghost, 0, "Expected effect ghost of Clone 8 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.color, 0, "Expected effect color of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.fisheye, 0, "Expected effect fisheye of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.whirl, 0, "Expected effect whirl of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.pixelate, 0, "Expected effect pixelate of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.mosaic, 0, "Expected effect mosaic of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.brightness, 0, "Expected effect brightness of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).effects.ghost, 0, "Expected effect ghost of Clone 12 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.color, 0, "Expected effect color of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.fisheye, 0, "Expected effect fisheye of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.whirl, 0, "Expected effect whirl of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.pixelate, 0, "Expected effect pixelate of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.mosaic, 0, "Expected effect mosaic of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.brightness, 0, "Expected effect brightness of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).effects.ghost, 0, "Expected effect ghost of Clone 16 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.color, 0, "Expected effect color of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.fisheye, 0, "Expected effect fisheye of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.whirl, 0, "Expected effect whirl of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.pixelate, 0, "Expected effect pixelate of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.mosaic, 0, "Expected effect mosaic of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.brightness, 0, "Expected effect brightness of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).effects.ghost, 0, "Expected effect ghost of Clone 17 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 20, "Expected Sprite Einhorn to be at layer 20");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 18, "Expected Sprite Luftballon to be at layer 18");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).getLayerOrder(), 14, "Expected Clone 4 of Luftballon to be at layer 14");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).getLayerOrder(), 15, "Expected Clone 8 of Luftballon to be at layer 15");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).getLayerOrder(), 16, "Expected Clone 12 of Luftballon to be at layer 16");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).getLayerOrder(), 17, "Expected Clone 16 of Luftballon to be at layer 17");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).getLayerOrder(), 13, "Expected Clone 17 of Luftballon to be at layer 13");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).x, -175, 5, "Expected Clone 4 of Luftballon to have x-position -175 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).y, -97, 5, "Expected Clone 4 of Luftballon to have y-position -97 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).x, 18, 5, "Expected Clone 8 of Luftballon to have x-position 18 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).y, 12, 5, "Expected Clone 8 of Luftballon to have y-position 12 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).x, 95, 5, "Expected Clone 12 of Luftballon to have x-position 95 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).y, 108, 5, "Expected Clone 12 of Luftballon to have y-position 108 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(16).x, -114, 5, "Expected Clone 16 of Luftballon to have x-position -114 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(16).y, 4, 5, "Expected Clone 16 of Luftballon to have y-position 4 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(17).x, -168, 5, "Expected Clone 17 of Luftballon to have x-position -168 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(17).y, -169, 5, "Expected Clone 17 of Luftballon to have y-position -169 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(4).sayText, "Expected Clone 4 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(8).sayText, "Expected Clone 8 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(12).sayText, "Expected Clone 12 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(16).sayText, "Expected Clone 16 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(17).sayText, "Expected Clone 17 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(4).size, 50, 1, "Expected Clone 4 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(8).size, 50, 1, "Expected Clone 8 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(12).size, 50, 1, "Expected Clone 12 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(16).size, 50, 1, "Expected Clone 16 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(17).size, 50, 1, "Expected Clone 17 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.ok(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(4).visible, "Expected Clone 4 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(8).visible, "Expected Clone 8 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(12).visible, "Expected Clone 12 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(16).visible, "Expected Clone 16 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(17).visible, "Expected Clone 17 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(4).volume, 100, "Expected Clone 4 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(8).volume, 100, "Expected Clone 8 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(12).volume, 100, "Expected Clone 12 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(16).volume, 100, "Expected Clone 16 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(17).volume, 100, "Expected Clone 17 of Luftballon to have volume 100");
  await t.runForSteps(90);
  await t.runForSteps(1);
  t.assert.equal(t.getStage().currentCostume, 0, "Expected backdrop 0");
  t.assert.equal(t.getSprite("Einhorn").currentCostume, 0, "Expected Sprite Einhorn to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").currentCostume, 1, "Expected Sprite Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).currentCostume, 2, "Expected Clone 7 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).currentCostume, 1, "Expected Clone 14 of Luftballon to have costume 1");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).currentCostume, 0, "Expected Clone 21 of Luftballon to have costume 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(28).currentCostume, 2, "Expected Clone 28 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).currentCostume, 2, "Expected Clone 30 of Luftballon to have costume 2");
  t.assert.equal(t.getSprite("Einhorn").getCloneCount(), 0, "Expected Sprite Einhorn to have 0 clones");
  t.assert.equal(t.getSprite("Luftballon").getCloneCount(), 30, "Expected Sprite Luftballon to have 30 clones");
  t.assert.equal(t.getSprite("Einhorn").direction, 90, 1, "Expected Sprite Einhorn to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").direction, 90, 1, "Expected Sprite Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).direction, 90, 1, "Expected Clone 7 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).direction, 90, 1, "Expected Clone 14 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).direction, 90, 1, "Expected Clone 21 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(28).direction, 90, 1, "Expected Clone 28 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).direction, 90, 1, "Expected Clone 30 of Luftballon to face in direction 90 +-1");
  t.assert.equal(t.getSprite("Einhorn").effects.color, 0, "Expected effect color of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.fisheye, 0, "Expected effect fisheye of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.whirl, 0, "Expected effect whirl of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.pixelate, 0, "Expected effect pixelate of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.mosaic, 0, "Expected effect mosaic of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.brightness, 0, "Expected effect brightness of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Einhorn").effects.ghost, 0, "Expected effect ghost of Sprite Einhorn to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.color, 0, "Expected effect color of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.fisheye, 0, "Expected effect fisheye of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.whirl, 0, "Expected effect whirl of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.pixelate, 0, "Expected effect pixelate of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.mosaic, 0, "Expected effect mosaic of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.brightness, 0, "Expected effect brightness of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").effects.ghost, 0, "Expected effect ghost of Sprite Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.color, 0, "Expected effect color of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.fisheye, 0, "Expected effect fisheye of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.whirl, 0, "Expected effect whirl of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.pixelate, 0, "Expected effect pixelate of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.mosaic, 0, "Expected effect mosaic of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.brightness, 0, "Expected effect brightness of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).effects.ghost, 0, "Expected effect ghost of Clone 7 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.color, 0, "Expected effect color of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.fisheye, 0, "Expected effect fisheye of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.whirl, 0, "Expected effect whirl of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.pixelate, 0, "Expected effect pixelate of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.mosaic, 0, "Expected effect mosaic of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.brightness, 0, "Expected effect brightness of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).effects.ghost, 0, "Expected effect ghost of Clone 14 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.color, 0, "Expected effect color of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.fisheye, 0, "Expected effect fisheye of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.whirl, 0, "Expected effect whirl of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.pixelate, 0, "Expected effect pixelate of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.mosaic, 0, "Expected effect mosaic of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.brightness, 0, "Expected effect brightness of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).effects.ghost, 0, "Expected effect ghost of Clone 21 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(28).effects.color, 0, "Expected effect color of Clone 28 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(28).effects.fisheye, 0, "Expected effect fisheye of Clone 28 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(28).effects.whirl, 0, "Expected effect whirl of Clone 28 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(28).effects.pixelate, 0, "Expected effect pixelate of Clone 28 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(28).effects.mosaic, 0, "Expected effect mosaic of Clone 28 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(28).effects.brightness, 0, "Expected effect brightness of Clone 28 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(28).effects.ghost, 0, "Expected effect ghost of Clone 28 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.color, 0, "Expected effect color of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.fisheye, 0, "Expected effect fisheye of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.whirl, 0, "Expected effect whirl of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.pixelate, 0, "Expected effect pixelate of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.mosaic, 0, "Expected effect mosaic of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.brightness, 0, "Expected effect brightness of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).effects.ghost, 0, "Expected effect ghost of Clone 30 of Luftballon to be 0");
  t.assert.equal(t.getSprite("Einhorn").layerOrder, 33, "Expected Sprite Einhorn to be at layer 33");
  t.assert.equal(t.getSprite("Luftballon").layerOrder, 31, "Expected Sprite Luftballon to be at layer 31");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).getLayerOrder(), 27, "Expected Clone 7 of Luftballon to be at layer 27");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).getLayerOrder(), 28, "Expected Clone 14 of Luftballon to be at layer 28");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).getLayerOrder(), 29, "Expected Clone 21 of Luftballon to be at layer 29");
  t.assert.equal(t.getSprite("Luftballon").getClone(28).getLayerOrder(), 30, "Expected Clone 28 of Luftballon to be at layer 30");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).getLayerOrder(), 26, "Expected Clone 30 of Luftballon to be at layer 26");
  t.assert.withinRange(t.getSprite("Einhorn").x, -7, 5, "Expected Sprite Einhorn to have x-position -7 +-5");
  t.assert.withinRange(t.getSprite("Einhorn").y, -57, 5, "Expected Sprite Einhorn to have y-position -57 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").x, 90, 5, "Expected Sprite Luftballon to have x-position 90 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").y, -60, 5, "Expected Sprite Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).x, 93, 5, "Expected Clone 7 of Luftballon to have x-position 93 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).y, -60, 5, "Expected Clone 7 of Luftballon to have y-position -60 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(14).x, -181, 5, "Expected Clone 14 of Luftballon to have x-position -181 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(14).y, -28, 5, "Expected Clone 14 of Luftballon to have y-position -28 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(21).x, 58, 5, "Expected Clone 21 of Luftballon to have x-position 58 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(21).y, -146, 5, "Expected Clone 21 of Luftballon to have y-position -146 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(28).x, 3, 5, "Expected Clone 28 of Luftballon to have x-position 3 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(28).y, -31, 5, "Expected Clone 28 of Luftballon to have y-position -31 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).x, -177, 5, "Expected Clone 30 of Luftballon to have x-position -177 +-5");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).y, 175, 5, "Expected Clone 30 of Luftballon to have y-position 175 +-5");
  t.assert.equal(t.getSprite("Einhorn").sayText, "Frohes neues Jahr!", "Expected Sprite Einhorn to say Frohes neues Jahr!");
  t.assert.not(t.getSprite("Luftballon").sayText, "Expected Sprite Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(7).sayText, "Expected Clone 7 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(14).sayText, "Expected Clone 14 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(21).sayText, "Expected Clone 21 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(28).sayText, "Expected Clone 28 of Luftballon not to say anything");
  t.assert.not(t.getSprite("Luftballon").getClone(30).sayText, "Expected Clone 30 of Luftballon not to say anything");
  t.assert.withinRange(t.getSprite("Einhorn").size, 180, 1, "Expected Sprite Einhorn to have size 180 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").size, 50, 1, "Expected Sprite Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(7).size, 50, 1, "Expected Clone 7 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(14).size, 50, 1, "Expected Clone 14 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(21).size, 50, 1, "Expected Clone 21 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(28).size, 50, 1, "Expected Clone 28 of Luftballon to have size 50 +-1");
  t.assert.withinRange(t.getSprite("Luftballon").getClone(30).size, 50, 1, "Expected Clone 30 of Luftballon to have size 50 +-1");
  t.assert.ok(t.getSprite("Einhorn").visible, "Expected Sprite Einhorn to be visible");
  t.assert.not(t.getSprite("Luftballon").visible, "Expected Sprite Luftballon not to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(7).visible, "Expected Clone 7 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(14).visible, "Expected Clone 14 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(21).visible, "Expected Clone 21 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(28).visible, "Expected Clone 28 of Luftballon to be visible");
  t.assert.ok(t.getSprite("Luftballon").getClone(30).visible, "Expected Clone 30 of Luftballon to be visible");
  t.assert.equal(t.getStage().volume, 100, "Expected Stage to have volume 100");
  t.assert.equal(t.getSprite("Einhorn").volume, 100, "Expected Sprite Einhorn to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").volume, 100, "Expected Sprite Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(7).volume, 100, "Expected Clone 7 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(14).volume, 100, "Expected Clone 14 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(21).volume, 100, "Expected Clone 21 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(28).volume, 100, "Expected Clone 28 of Luftballon to have volume 100");
  t.assert.equal(t.getSprite("Luftballon").getClone(30).volume, 100, "Expected Clone 30 of Luftballon to have volume 100");
  t.end();
}

module.exports = [
  {
      test: test0,
      name: 'Generated Test',
      description: '',
      categories: [],
      generationAlgorithm: 'mio',
      seed: '1687938269561',
      type: 'standard',
  }
]
